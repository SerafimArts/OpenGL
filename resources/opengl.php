<?php

/**
 * This file is part of OpenGL package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

return [
    'GL11' => [
        'name'      => 'Serafim\\OpenGL\\GL11',
        'extends'   => 'Serafim\\OpenGL\\GL',
        'version'   => '1.1',
        'comment'   => 'The OpenGL functionality up to version 1.1. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:

- EXT_vertex_array @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_vertex_array.txt
- EXT_polygon_offset @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_polygon_offset.txt
- EXT_blend_logic_op @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_blend_logic_op.txt
- EXT_texture @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture.txt
- EXT_copy_texture @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_copy_texture.txt
- EXT_subtexture @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_subtexture.txt
- EXT_texture_object @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_object.txt',
        'constants' => [
            'GL_ACCUM'                         => 256,
            'GL_LOAD'                          => 257,
            'GL_RETURN'                        => 258,
            'GL_MULT'                          => 259,
            'GL_ADD'                           => 260,
            'GL_NEVER'                         => 512,
            'GL_LESS'                          => 513,
            'GL_EQUAL'                         => 514,
            'GL_LEQUAL'                        => 515,
            'GL_GREATER'                       => 516,
            'GL_NOTEQUAL'                      => 517,
            'GL_GEQUAL'                        => 518,
            'GL_ALWAYS'                        => 519,
            'GL_CURRENT_BIT'                   => 1,
            'GL_POINT_BIT'                     => 2,
            'GL_LINE_BIT'                      => 4,
            'GL_POLYGON_BIT'                   => 8,
            'GL_POLYGON_STIPPLE_BIT'           => 16,
            'GL_PIXEL_MODE_BIT'                => 32,
            'GL_LIGHTING_BIT'                  => 64,
            'GL_FOG_BIT'                       => 128,
            'GL_DEPTH_BUFFER_BIT'              => 256,
            'GL_ACCUM_BUFFER_BIT'              => 512,
            'GL_STENCIL_BUFFER_BIT'            => 1024,
            'GL_VIEWPORT_BIT'                  => 2048,
            'GL_TRANSFORM_BIT'                 => 4096,
            'GL_ENABLE_BIT'                    => 8192,
            'GL_COLOR_BUFFER_BIT'              => 16384,
            'GL_HINT_BIT'                      => 32768,
            'GL_EVAL_BIT'                      => 65536,
            'GL_LIST_BIT'                      => 131072,
            'GL_TEXTURE_BIT'                   => 262144,
            'GL_SCISSOR_BIT'                   => 524288,
            'GL_ALL_ATTRIB_BITS'               => 1048575,
            'GL_POINTS'                        => 0,
            'GL_LINES'                         => 1,
            'GL_LINE_LOOP'                     => 2,
            'GL_LINE_STRIP'                    => 3,
            'GL_TRIANGLES'                     => 4,
            'GL_TRIANGLE_STRIP'                => 5,
            'GL_TRIANGLE_FAN'                  => 6,
            'GL_QUADS'                         => 7,
            'GL_QUAD_STRIP'                    => 8,
            'GL_POLYGON'                       => 9,
            'GL_ZERO'                          => 0,
            'GL_ONE'                           => 1,
            'GL_SRC_COLOR'                     => 768,
            'GL_ONE_MINUS_SRC_COLOR'           => 769,
            'GL_SRC_ALPHA'                     => 770,
            'GL_ONE_MINUS_SRC_ALPHA'           => 771,
            'GL_DST_ALPHA'                     => 772,
            'GL_ONE_MINUS_DST_ALPHA'           => 773,
            'GL_DST_COLOR'                     => 774,
            'GL_ONE_MINUS_DST_COLOR'           => 775,
            'GL_SRC_ALPHA_SATURATE'            => 776,
            'GL_TRUE'                          => 1,
            'GL_FALSE'                         => 0,
            'GL_CLIP_PLANE0'                   => 12288,
            'GL_CLIP_PLANE1'                   => 12289,
            'GL_CLIP_PLANE2'                   => 12290,
            'GL_CLIP_PLANE3'                   => 12291,
            'GL_CLIP_PLANE4'                   => 12292,
            'GL_CLIP_PLANE5'                   => 12293,
            'GL_BYTE'                          => 5120,
            'GL_UNSIGNED_BYTE'                 => 5121,
            'GL_SHORT'                         => 5122,
            'GL_UNSIGNED_SHORT'                => 5123,
            'GL_INT'                           => 5124,
            'GL_UNSIGNED_INT'                  => 5125,
            'GL_FLOAT'                         => 5126,
            'GL_2_BYTES'                       => 5127,
            'GL_3_BYTES'                       => 5128,
            'GL_4_BYTES'                       => 5129,
            'GL_DOUBLE'                        => 5130,
            'GL_NONE'                          => 0,
            'GL_FRONT_LEFT'                    => 1024,
            'GL_FRONT_RIGHT'                   => 1025,
            'GL_BACK_LEFT'                     => 1026,
            'GL_BACK_RIGHT'                    => 1027,
            'GL_FRONT'                         => 1028,
            'GL_BACK'                          => 1029,
            'GL_LEFT'                          => 1030,
            'GL_RIGHT'                         => 1031,
            'GL_FRONT_AND_BACK'                => 1032,
            'GL_AUX0'                          => 1033,
            'GL_AUX1'                          => 1034,
            'GL_AUX2'                          => 1035,
            'GL_AUX3'                          => 1036,
            'GL_NO_ERROR'                      => 0,
            'GL_INVALID_ENUM'                  => 1280,
            'GL_INVALID_VALUE'                 => 1281,
            'GL_INVALID_OPERATION'             => 1282,
            'GL_STACK_OVERFLOW'                => 1283,
            'GL_STACK_UNDERFLOW'               => 1284,
            'GL_OUT_OF_MEMORY'                 => 1285,
            'GL_2D'                            => 1536,
            'GL_3D'                            => 1537,
            'GL_3D_COLOR'                      => 1538,
            'GL_3D_COLOR_TEXTURE'              => 1539,
            'GL_4D_COLOR_TEXTURE'              => 1540,
            'GL_PASS_THROUGH_TOKEN'            => 1792,
            'GL_POINT_TOKEN'                   => 1793,
            'GL_LINE_TOKEN'                    => 1794,
            'GL_POLYGON_TOKEN'                 => 1795,
            'GL_BITMAP_TOKEN'                  => 1796,
            'GL_DRAW_PIXEL_TOKEN'              => 1797,
            'GL_COPY_PIXEL_TOKEN'              => 1798,
            'GL_LINE_RESET_TOKEN'              => 1799,
            'GL_EXP'                           => 2048,
            'GL_EXP2'                          => 2049,
            'GL_CW'                            => 2304,
            'GL_CCW'                           => 2305,
            'GL_COEFF'                         => 2560,
            'GL_ORDER'                         => 2561,
            'GL_DOMAIN'                        => 2562,
            'GL_CURRENT_COLOR'                 => 2816,
            'GL_CURRENT_INDEX'                 => 2817,
            'GL_CURRENT_NORMAL'                => 2818,
            'GL_CURRENT_TEXTURE_COORDS'        => 2819,
            'GL_CURRENT_RASTER_COLOR'          => 2820,
            'GL_CURRENT_RASTER_INDEX'          => 2821,
            'GL_CURRENT_RASTER_TEXTURE_COORDS' => 2822,
            'GL_CURRENT_RASTER_POSITION'       => 2823,
            'GL_CURRENT_RASTER_POSITION_VALID' => 2824,
            'GL_CURRENT_RASTER_DISTANCE'       => 2825,
            'GL_POINT_SMOOTH'                  => 2832,
            'GL_POINT_SIZE'                    => 2833,
            'GL_POINT_SIZE_RANGE'              => 2834,
            'GL_POINT_SIZE_GRANULARITY'        => 2835,
            'GL_LINE_SMOOTH'                   => 2848,
            'GL_LINE_WIDTH'                    => 2849,
            'GL_LINE_WIDTH_RANGE'              => 2850,
            'GL_LINE_WIDTH_GRANULARITY'        => 2851,
            'GL_LINE_STIPPLE'                  => 2852,
            'GL_LINE_STIPPLE_PATTERN'          => 2853,
            'GL_LINE_STIPPLE_REPEAT'           => 2854,
            'GL_LIST_MODE'                     => 2864,
            'GL_MAX_LIST_NESTING'              => 2865,
            'GL_LIST_BASE'                     => 2866,
            'GL_LIST_INDEX'                    => 2867,
            'GL_POLYGON_MODE'                  => 2880,
            'GL_POLYGON_SMOOTH'                => 2881,
            'GL_POLYGON_STIPPLE'               => 2882,
            'GL_EDGE_FLAG'                     => 2883,
            'GL_CULL_FACE'                     => 2884,
            'GL_CULL_FACE_MODE'                => 2885,
            'GL_FRONT_FACE'                    => 2886,
            'GL_LIGHTING'                      => 2896,
            'GL_LIGHT_MODEL_LOCAL_VIEWER'      => 2897,
            'GL_LIGHT_MODEL_TWO_SIDE'          => 2898,
            'GL_LIGHT_MODEL_AMBIENT'           => 2899,
            'GL_SHADE_MODEL'                   => 2900,
            'GL_COLOR_MATERIAL_FACE'           => 2901,
            'GL_COLOR_MATERIAL_PARAMETER'      => 2902,
            'GL_COLOR_MATERIAL'                => 2903,
            'GL_FOG'                           => 2912,
            'GL_FOG_INDEX'                     => 2913,
            'GL_FOG_DENSITY'                   => 2914,
            'GL_FOG_START'                     => 2915,
            'GL_FOG_END'                       => 2916,
            'GL_FOG_MODE'                      => 2917,
            'GL_FOG_COLOR'                     => 2918,
            'GL_DEPTH_RANGE'                   => 2928,
            'GL_DEPTH_TEST'                    => 2929,
            'GL_DEPTH_WRITEMASK'               => 2930,
            'GL_DEPTH_CLEAR_VALUE'             => 2931,
            'GL_DEPTH_FUNC'                    => 2932,
            'GL_ACCUM_CLEAR_VALUE'             => 2944,
            'GL_STENCIL_TEST'                  => 2960,
            'GL_STENCIL_CLEAR_VALUE'           => 2961,
            'GL_STENCIL_FUNC'                  => 2962,
            'GL_STENCIL_VALUE_MASK'            => 2963,
            'GL_STENCIL_FAIL'                  => 2964,
            'GL_STENCIL_PASS_DEPTH_FAIL'       => 2965,
            'GL_STENCIL_PASS_DEPTH_PASS'       => 2966,
            'GL_STENCIL_REF'                   => 2967,
            'GL_STENCIL_WRITEMASK'             => 2968,
            'GL_MATRIX_MODE'                   => 2976,
            'GL_NORMALIZE'                     => 2977,
            'GL_VIEWPORT'                      => 2978,
            'GL_MODELVIEW_STACK_DEPTH'         => 2979,
            'GL_PROJECTION_STACK_DEPTH'        => 2980,
            'GL_TEXTURE_STACK_DEPTH'           => 2981,
            'GL_MODELVIEW_MATRIX'              => 2982,
            'GL_PROJECTION_MATRIX'             => 2983,
            'GL_TEXTURE_MATRIX'                => 2984,
            'GL_ATTRIB_STACK_DEPTH'            => 2992,
            'GL_CLIENT_ATTRIB_STACK_DEPTH'     => 2993,
            'GL_ALPHA_TEST'                    => 3008,
            'GL_ALPHA_TEST_FUNC'               => 3009,
            'GL_ALPHA_TEST_REF'                => 3010,
            'GL_DITHER'                        => 3024,
            'GL_BLEND_DST'                     => 3040,
            'GL_BLEND_SRC'                     => 3041,
            'GL_BLEND'                         => 3042,
            'GL_LOGIC_OP_MODE'                 => 3056,
            'GL_INDEX_LOGIC_OP'                => 3057,
            'GL_LOGIC_OP'                      => 3057,
            'GL_COLOR_LOGIC_OP'                => 3058,
            'GL_AUX_BUFFERS'                   => 3072,
            'GL_DRAW_BUFFER'                   => 3073,
            'GL_READ_BUFFER'                   => 3074,
            'GL_SCISSOR_BOX'                   => 3088,
            'GL_SCISSOR_TEST'                  => 3089,
            'GL_INDEX_CLEAR_VALUE'             => 3104,
            'GL_INDEX_WRITEMASK'               => 3105,
            'GL_COLOR_CLEAR_VALUE'             => 3106,
            'GL_COLOR_WRITEMASK'               => 3107,
            'GL_INDEX_MODE'                    => 3120,
            'GL_RGBA_MODE'                     => 3121,
            'GL_DOUBLEBUFFER'                  => 3122,
            'GL_STEREO'                        => 3123,
            'GL_RENDER_MODE'                   => 3136,
            'GL_PERSPECTIVE_CORRECTION_HINT'   => 3152,
            'GL_POINT_SMOOTH_HINT'             => 3153,
            'GL_LINE_SMOOTH_HINT'              => 3154,
            'GL_POLYGON_SMOOTH_HINT'           => 3155,
            'GL_FOG_HINT'                      => 3156,
            'GL_TEXTURE_GEN_S'                 => 3168,
            'GL_TEXTURE_GEN_T'                 => 3169,
            'GL_TEXTURE_GEN_R'                 => 3170,
            'GL_TEXTURE_GEN_Q'                 => 3171,
            'GL_PIXEL_MAP_I_TO_I'              => 3184,
            'GL_PIXEL_MAP_S_TO_S'              => 3185,
            'GL_PIXEL_MAP_I_TO_R'              => 3186,
            'GL_PIXEL_MAP_I_TO_G'              => 3187,
            'GL_PIXEL_MAP_I_TO_B'              => 3188,
            'GL_PIXEL_MAP_I_TO_A'              => 3189,
            'GL_PIXEL_MAP_R_TO_R'              => 3190,
            'GL_PIXEL_MAP_G_TO_G'              => 3191,
            'GL_PIXEL_MAP_B_TO_B'              => 3192,
            'GL_PIXEL_MAP_A_TO_A'              => 3193,
            'GL_PIXEL_MAP_I_TO_I_SIZE'         => 3248,
            'GL_PIXEL_MAP_S_TO_S_SIZE'         => 3249,
            'GL_PIXEL_MAP_I_TO_R_SIZE'         => 3250,
            'GL_PIXEL_MAP_I_TO_G_SIZE'         => 3251,
            'GL_PIXEL_MAP_I_TO_B_SIZE'         => 3252,
            'GL_PIXEL_MAP_I_TO_A_SIZE'         => 3253,
            'GL_PIXEL_MAP_R_TO_R_SIZE'         => 3254,
            'GL_PIXEL_MAP_G_TO_G_SIZE'         => 3255,
            'GL_PIXEL_MAP_B_TO_B_SIZE'         => 3256,
            'GL_PIXEL_MAP_A_TO_A_SIZE'         => 3257,
            'GL_UNPACK_SWAP_BYTES'             => 3312,
            'GL_UNPACK_LSB_FIRST'              => 3313,
            'GL_UNPACK_ROW_LENGTH'             => 3314,
            'GL_UNPACK_SKIP_ROWS'              => 3315,
            'GL_UNPACK_SKIP_PIXELS'            => 3316,
            'GL_UNPACK_ALIGNMENT'              => 3317,
            'GL_PACK_SWAP_BYTES'               => 3328,
            'GL_PACK_LSB_FIRST'                => 3329,
            'GL_PACK_ROW_LENGTH'               => 3330,
            'GL_PACK_SKIP_ROWS'                => 3331,
            'GL_PACK_SKIP_PIXELS'              => 3332,
            'GL_PACK_ALIGNMENT'                => 3333,
            'GL_MAP_COLOR'                     => 3344,
            'GL_MAP_STENCIL'                   => 3345,
            'GL_INDEX_SHIFT'                   => 3346,
            'GL_INDEX_OFFSET'                  => 3347,
            'GL_RED_SCALE'                     => 3348,
            'GL_RED_BIAS'                      => 3349,
            'GL_ZOOM_X'                        => 3350,
            'GL_ZOOM_Y'                        => 3351,
            'GL_GREEN_SCALE'                   => 3352,
            'GL_GREEN_BIAS'                    => 3353,
            'GL_BLUE_SCALE'                    => 3354,
            'GL_BLUE_BIAS'                     => 3355,
            'GL_ALPHA_SCALE'                   => 3356,
            'GL_ALPHA_BIAS'                    => 3357,
            'GL_DEPTH_SCALE'                   => 3358,
            'GL_DEPTH_BIAS'                    => 3359,
            'GL_MAX_EVAL_ORDER'                => 3376,
            'GL_MAX_LIGHTS'                    => 3377,
            'GL_MAX_CLIP_PLANES'               => 3378,
            'GL_MAX_TEXTURE_SIZE'              => 3379,
            'GL_MAX_PIXEL_MAP_TABLE'           => 3380,
            'GL_MAX_ATTRIB_STACK_DEPTH'        => 3381,
            'GL_MAX_MODELVIEW_STACK_DEPTH'     => 3382,
            'GL_MAX_NAME_STACK_DEPTH'          => 3383,
            'GL_MAX_PROJECTION_STACK_DEPTH'    => 3384,
            'GL_MAX_TEXTURE_STACK_DEPTH'       => 3385,
            'GL_MAX_VIEWPORT_DIMS'             => 3386,
            'GL_MAX_CLIENT_ATTRIB_STACK_DEPTH' => 3387,
            'GL_SUBPIXEL_BITS'                 => 3408,
            'GL_INDEX_BITS'                    => 3409,
            'GL_RED_BITS'                      => 3410,
            'GL_GREEN_BITS'                    => 3411,
            'GL_BLUE_BITS'                     => 3412,
            'GL_ALPHA_BITS'                    => 3413,
            'GL_DEPTH_BITS'                    => 3414,
            'GL_STENCIL_BITS'                  => 3415,
            'GL_ACCUM_RED_BITS'                => 3416,
            'GL_ACCUM_GREEN_BITS'              => 3417,
            'GL_ACCUM_BLUE_BITS'               => 3418,
            'GL_ACCUM_ALPHA_BITS'              => 3419,
            'GL_NAME_STACK_DEPTH'              => 3440,
            'GL_AUTO_NORMAL'                   => 3456,
            'GL_MAP1_COLOR_4'                  => 3472,
            'GL_MAP1_INDEX'                    => 3473,
            'GL_MAP1_NORMAL'                   => 3474,
            'GL_MAP1_TEXTURE_COORD_1'          => 3475,
            'GL_MAP1_TEXTURE_COORD_2'          => 3476,
            'GL_MAP1_TEXTURE_COORD_3'          => 3477,
            'GL_MAP1_TEXTURE_COORD_4'          => 3478,
            'GL_MAP1_VERTEX_3'                 => 3479,
            'GL_MAP1_VERTEX_4'                 => 3480,
            'GL_MAP2_COLOR_4'                  => 3504,
            'GL_MAP2_INDEX'                    => 3505,
            'GL_MAP2_NORMAL'                   => 3506,
            'GL_MAP2_TEXTURE_COORD_1'          => 3507,
            'GL_MAP2_TEXTURE_COORD_2'          => 3508,
            'GL_MAP2_TEXTURE_COORD_3'          => 3509,
            'GL_MAP2_TEXTURE_COORD_4'          => 3510,
            'GL_MAP2_VERTEX_3'                 => 3511,
            'GL_MAP2_VERTEX_4'                 => 3512,
            'GL_MAP1_GRID_DOMAIN'              => 3536,
            'GL_MAP1_GRID_SEGMENTS'            => 3537,
            'GL_MAP2_GRID_DOMAIN'              => 3538,
            'GL_MAP2_GRID_SEGMENTS'            => 3539,
            'GL_TEXTURE_1D'                    => 3552,
            'GL_TEXTURE_2D'                    => 3553,
            'GL_FEEDBACK_BUFFER_POINTER'       => 3568,
            'GL_FEEDBACK_BUFFER_SIZE'          => 3569,
            'GL_FEEDBACK_BUFFER_TYPE'          => 3570,
            'GL_SELECTION_BUFFER_POINTER'      => 3571,
            'GL_SELECTION_BUFFER_SIZE'         => 3572,
            'GL_TEXTURE_WIDTH'                 => 4096,
            'GL_TEXTURE_HEIGHT'                => 4097,
            'GL_TEXTURE_INTERNAL_FORMAT'       => 4099,
            'GL_TEXTURE_COMPONENTS'            => 4099,
            'GL_TEXTURE_BORDER_COLOR'          => 4100,
            'GL_TEXTURE_BORDER'                => 4101,
            'GL_DONT_CARE'                     => 4352,
            'GL_FASTEST'                       => 4353,
            'GL_NICEST'                        => 4354,
            'GL_LIGHT0'                        => 16384,
            'GL_LIGHT1'                        => 16385,
            'GL_LIGHT2'                        => 16386,
            'GL_LIGHT3'                        => 16387,
            'GL_LIGHT4'                        => 16388,
            'GL_LIGHT5'                        => 16389,
            'GL_LIGHT6'                        => 16390,
            'GL_LIGHT7'                        => 16391,
            'GL_AMBIENT'                       => 4608,
            'GL_DIFFUSE'                       => 4609,
            'GL_SPECULAR'                      => 4610,
            'GL_POSITION'                      => 4611,
            'GL_SPOT_DIRECTION'                => 4612,
            'GL_SPOT_EXPONENT'                 => 4613,
            'GL_SPOT_CUTOFF'                   => 4614,
            'GL_CONSTANT_ATTENUATION'          => 4615,
            'GL_LINEAR_ATTENUATION'            => 4616,
            'GL_QUADRATIC_ATTENUATION'         => 4617,
            'GL_COMPILE'                       => 4864,
            'GL_COMPILE_AND_EXECUTE'           => 4865,
            'GL_CLEAR'                         => 5376,
            'GL_AND'                           => 5377,
            'GL_AND_REVERSE'                   => 5378,
            'GL_COPY'                          => 5379,
            'GL_AND_INVERTED'                  => 5380,
            'GL_NOOP'                          => 5381,
            'GL_XOR'                           => 5382,
            'GL_OR'                            => 5383,
            'GL_NOR'                           => 5384,
            'GL_EQUIV'                         => 5385,
            'GL_INVERT'                        => 5386,
            'GL_OR_REVERSE'                    => 5387,
            'GL_COPY_INVERTED'                 => 5388,
            'GL_OR_INVERTED'                   => 5389,
            'GL_NAND'                          => 5390,
            'GL_SET'                           => 5391,
            'GL_EMISSION'                      => 5632,
            'GL_SHININESS'                     => 5633,
            'GL_AMBIENT_AND_DIFFUSE'           => 5634,
            'GL_COLOR_INDEXES'                 => 5635,
            'GL_MODELVIEW'                     => 5888,
            'GL_PROJECTION'                    => 5889,
            'GL_TEXTURE'                       => 5890,
            'GL_COLOR'                         => 6144,
            'GL_DEPTH'                         => 6145,
            'GL_STENCIL'                       => 6146,
            'GL_COLOR_INDEX'                   => 6400,
            'GL_STENCIL_INDEX'                 => 6401,
            'GL_DEPTH_COMPONENT'               => 6402,
            'GL_RED'                           => 6403,
            'GL_GREEN'                         => 6404,
            'GL_BLUE'                          => 6405,
            'GL_ALPHA'                         => 6406,
            'GL_RGB'                           => 6407,
            'GL_RGBA'                          => 6408,
            'GL_LUMINANCE'                     => 6409,
            'GL_LUMINANCE_ALPHA'               => 6410,
            'GL_BITMAP'                        => 6656,
            'GL_POINT'                         => 6912,
            'GL_LINE'                          => 6913,
            'GL_FILL'                          => 6914,
            'GL_RENDER'                        => 7168,
            'GL_FEEDBACK'                      => 7169,
            'GL_SELECT'                        => 7170,
            'GL_FLAT'                          => 7424,
            'GL_SMOOTH'                        => 7425,
            'GL_KEEP'                          => 7680,
            'GL_REPLACE'                       => 7681,
            'GL_INCR'                          => 7682,
            'GL_DECR'                          => 7683,
            'GL_VENDOR'                        => 7936,
            'GL_RENDERER'                      => 7937,
            'GL_VERSION'                       => 7938,
            'GL_EXTENSIONS'                    => 7939,
            'GL_S'                             => 8192,
            'GL_T'                             => 8193,
            'GL_R'                             => 8194,
            'GL_Q'                             => 8195,
            'GL_MODULATE'                      => 8448,
            'GL_DECAL'                         => 8449,
            'GL_TEXTURE_ENV_MODE'              => 8704,
            'GL_TEXTURE_ENV_COLOR'             => 8705,
            'GL_TEXTURE_ENV'                   => 8960,
            'GL_EYE_LINEAR'                    => 9216,
            'GL_OBJECT_LINEAR'                 => 9217,
            'GL_SPHERE_MAP'                    => 9218,
            'GL_TEXTURE_GEN_MODE'              => 9472,
            'GL_OBJECT_PLANE'                  => 9473,
            'GL_EYE_PLANE'                     => 9474,
            'GL_NEAREST'                       => 9728,
            'GL_LINEAR'                        => 9729,
            'GL_NEAREST_MIPMAP_NEAREST'        => 9984,
            'GL_LINEAR_MIPMAP_NEAREST'         => 9985,
            'GL_NEAREST_MIPMAP_LINEAR'         => 9986,
            'GL_LINEAR_MIPMAP_LINEAR'          => 9987,
            'GL_TEXTURE_MAG_FILTER'            => 10240,
            'GL_TEXTURE_MIN_FILTER'            => 10241,
            'GL_TEXTURE_WRAP_S'                => 10242,
            'GL_TEXTURE_WRAP_T'                => 10243,
            'GL_CLAMP'                         => 10496,
            'GL_REPEAT'                        => 10497,
            'GL_CLIENT_PIXEL_STORE_BIT'        => 1,
            'GL_CLIENT_VERTEX_ARRAY_BIT'       => 2,
            'GL_CLIENT_ALL_ATTRIB_BITS'        => 4294967295,
            'GL_POLYGON_OFFSET_FACTOR'         => 32824,
            'GL_POLYGON_OFFSET_UNITS'          => 10752,
            'GL_POLYGON_OFFSET_POINT'          => 10753,
            'GL_POLYGON_OFFSET_LINE'           => 10754,
            'GL_POLYGON_OFFSET_FILL'           => 32823,
            'GL_ALPHA4'                        => 32827,
            'GL_ALPHA8'                        => 32828,
            'GL_ALPHA12'                       => 32829,
            'GL_ALPHA16'                       => 32830,
            'GL_LUMINANCE4'                    => 32831,
            'GL_LUMINANCE8'                    => 32832,
            'GL_LUMINANCE12'                   => 32833,
            'GL_LUMINANCE16'                   => 32834,
            'GL_LUMINANCE4_ALPHA4'             => 32835,
            'GL_LUMINANCE6_ALPHA2'             => 32836,
            'GL_LUMINANCE8_ALPHA8'             => 32837,
            'GL_LUMINANCE12_ALPHA4'            => 32838,
            'GL_LUMINANCE12_ALPHA12'           => 32839,
            'GL_LUMINANCE16_ALPHA16'           => 32840,
            'GL_INTENSITY'                     => 32841,
            'GL_INTENSITY4'                    => 32842,
            'GL_INTENSITY8'                    => 32843,
            'GL_INTENSITY12'                   => 32844,
            'GL_INTENSITY16'                   => 32845,
            'GL_R3_G3_B2'                      => 10768,
            'GL_RGB4'                          => 32847,
            'GL_RGB5'                          => 32848,
            'GL_RGB8'                          => 32849,
            'GL_RGB10'                         => 32850,
            'GL_RGB12'                         => 32851,
            'GL_RGB16'                         => 32852,
            'GL_RGBA2'                         => 32853,
            'GL_RGBA4'                         => 32854,
            'GL_RGB5_A1'                       => 32855,
            'GL_RGBA8'                         => 32856,
            'GL_RGB10_A2'                      => 32857,
            'GL_RGBA12'                        => 32858,
            'GL_RGBA16'                        => 32859,
            'GL_TEXTURE_RED_SIZE'              => 32860,
            'GL_TEXTURE_GREEN_SIZE'            => 32861,
            'GL_TEXTURE_BLUE_SIZE'             => 32862,
            'GL_TEXTURE_ALPHA_SIZE'            => 32863,
            'GL_TEXTURE_LUMINANCE_SIZE'        => 32864,
            'GL_TEXTURE_INTENSITY_SIZE'        => 32865,
            'GL_PROXY_TEXTURE_1D'              => 32867,
            'GL_PROXY_TEXTURE_2D'              => 32868,
            'GL_TEXTURE_PRIORITY'              => 32870,
            'GL_TEXTURE_RESIDENT'              => 32871,
            'GL_TEXTURE_BINDING_1D'            => 32872,
            'GL_TEXTURE_BINDING_2D'            => 32873,
            'GL_VERTEX_ARRAY'                  => 32884,
            'GL_NORMAL_ARRAY'                  => 32885,
            'GL_COLOR_ARRAY'                   => 32886,
            'GL_INDEX_ARRAY'                   => 32887,
            'GL_TEXTURE_COORD_ARRAY'           => 32888,
            'GL_EDGE_FLAG_ARRAY'               => 32889,
            'GL_VERTEX_ARRAY_SIZE'             => 32890,
            'GL_VERTEX_ARRAY_TYPE'             => 32891,
            'GL_VERTEX_ARRAY_STRIDE'           => 32892,
            'GL_NORMAL_ARRAY_TYPE'             => 32894,
            'GL_NORMAL_ARRAY_STRIDE'           => 32895,
            'GL_COLOR_ARRAY_SIZE'              => 32897,
            'GL_COLOR_ARRAY_TYPE'              => 32898,
            'GL_COLOR_ARRAY_STRIDE'            => 32899,
            'GL_INDEX_ARRAY_TYPE'              => 32901,
            'GL_INDEX_ARRAY_STRIDE'            => 32902,
            'GL_TEXTURE_COORD_ARRAY_SIZE'      => 32904,
            'GL_TEXTURE_COORD_ARRAY_TYPE'      => 32905,
            'GL_TEXTURE_COORD_ARRAY_STRIDE'    => 32906,
            'GL_EDGE_FLAG_ARRAY_STRIDE'        => 32908,
            'GL_VERTEX_ARRAY_POINTER'          => 32910,
            'GL_NORMAL_ARRAY_POINTER'          => 32911,
            'GL_COLOR_ARRAY_POINTER'           => 32912,
            'GL_INDEX_ARRAY_POINTER'           => 32913,
            'GL_TEXTURE_COORD_ARRAY_POINTER'   => 32914,
            'GL_EDGE_FLAG_ARRAY_POINTER'       => 32915,
            'GL_V2F'                           => 10784,
            'GL_V3F'                           => 10785,
            'GL_C4UB_V2F'                      => 10786,
            'GL_C4UB_V3F'                      => 10787,
            'GL_C3F_V3F'                       => 10788,
            'GL_N3F_V3F'                       => 10789,
            'GL_C4F_N3F_V3F'                   => 10790,
            'GL_T2F_V3F'                       => 10791,
            'GL_T4F_V4F'                       => 10792,
            'GL_T2F_C4UB_V3F'                  => 10793,
            'GL_T2F_C3F_V3F'                   => 10794,
            'GL_T2F_N3F_V3F'                   => 10795,
            'GL_T2F_C4F_N3F_V3F'               => 10796,
            'GL_T4F_C4F_N3F_V4F'               => 10797,
        ],
        'methods'   => [
            'glAccum'                  => [
                'name' => 'accum',
                'type' => 'void',
                'args' => [
                    'op'    => 'GLenum',
                    'value' => 'GLfloat',
                ],
            ],
            'glAlphaFunc'              => [
                'name' => 'alphaFunc',
                'type' => 'void',
                'args' => [
                    'func' => 'GLenum',
                    'ref'  => 'GLclampf',
                ],
            ],
            'glAreTexturesResident'    => [
                'name' => 'areTexturesResident',
                'type' => 'GLboolean',
                'args' => [
                    'n'          => 'GLsizei',
                    'textures'   => 'const GLuint *',
                    'residences' => 'GLboolean *',
                ],
            ],
            'glArrayElement'           => [
                'name' => 'arrayElement',
                'type' => 'void',
                'args' => [
                    'i' => 'GLint',
                ],
            ],
            'glBegin'                  => [
                'name' => 'begin',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glBindTexture'            => [
                'name' => 'bindTexture',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'texture' => 'GLuint',
                ],
            ],
            'glBitmap'                 => [
                'name' => 'bitmap',
                'type' => 'void',
                'args' => [
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                    'xorig'  => 'GLfloat',
                    'yorig'  => 'GLfloat',
                    'xmove'  => 'GLfloat',
                    'ymove'  => 'GLfloat',
                    'bitmap' => 'const GLubyte *',
                ],
            ],
            'glBlendFunc'              => [
                'name' => 'blendFunc',
                'type' => 'void',
                'args' => [
                    'sfactor' => 'GLenum',
                    'dfactor' => 'GLenum',
                ],
            ],
            'glCallList'               => [
                'name' => 'callList',
                'type' => 'void',
                'args' => [
                    'list' => 'GLuint',
                ],
            ],
            'glCallLists'              => [
                'name' => 'callLists',
                'type' => 'void',
                'args' => [
                    'n'     => 'GLsizei',
                    'type'  => 'GLenum',
                    'lists' => 'const GLvoid *',
                ],
            ],
            'glClear'                  => [
                'name' => 'clear',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLbitfield',
                ],
            ],
            'glClearAccum'             => [
                'name' => 'clearAccum',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLfloat',
                    'green' => 'GLfloat',
                    'blue'  => 'GLfloat',
                    'alpha' => 'GLfloat',
                ],
            ],
            'glClearColor'             => [
                'name' => 'clearColor',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLclampf',
                    'green' => 'GLclampf',
                    'blue'  => 'GLclampf',
                    'alpha' => 'GLclampf',
                ],
            ],
            'glClearDepth'             => [
                'name' => 'clearDepth',
                'type' => 'void',
                'args' => [
                    'depth' => 'GLclampd',
                ],
            ],
            'glClearIndex'             => [
                'name' => 'clearIndex',
                'type' => 'void',
                'args' => [
                    'c' => 'GLfloat',
                ],
            ],
            'glClearStencil'           => [
                'name' => 'clearStencil',
                'type' => 'void',
                'args' => [
                    's' => 'GLint',
                ],
            ],
            'glClipPlane'              => [
                'name' => 'clipPlane',
                'type' => 'void',
                'args' => [
                    'plane'    => 'GLenum',
                    'equation' => 'const GLdouble *',
                ],
            ],
            'glColor3b'                => [
                'name' => 'color3b',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLbyte',
                    'green' => 'GLbyte',
                    'blue'  => 'GLbyte',
                ],
            ],
            'glColor3bv'               => [
                'name' => 'color3bv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLbyte *',
                ],
            ],
            'glColor3d'                => [
                'name' => 'color3d',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLdouble',
                    'green' => 'GLdouble',
                    'blue'  => 'GLdouble',
                ],
            ],
            'glColor3dv'               => [
                'name' => 'color3dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glColor3f'                => [
                'name' => 'color3f',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLfloat',
                    'green' => 'GLfloat',
                    'blue'  => 'GLfloat',
                ],
            ],
            'glColor3fv'               => [
                'name' => 'color3fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glColor3i'                => [
                'name' => 'color3i',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLint',
                    'green' => 'GLint',
                    'blue'  => 'GLint',
                ],
            ],
            'glColor3iv'               => [
                'name' => 'color3iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glColor3s'                => [
                'name' => 'color3s',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLshort',
                    'green' => 'GLshort',
                    'blue'  => 'GLshort',
                ],
            ],
            'glColor3sv'               => [
                'name' => 'color3sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glColor3ub'               => [
                'name' => 'color3ub',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLubyte',
                    'green' => 'GLubyte',
                    'blue'  => 'GLubyte',
                ],
            ],
            'glColor3ubv'              => [
                'name' => 'color3ubv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLubyte *',
                ],
            ],
            'glColor3ui'               => [
                'name' => 'color3ui',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLuint',
                    'green' => 'GLuint',
                    'blue'  => 'GLuint',
                ],
            ],
            'glColor3uiv'              => [
                'name' => 'color3uiv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLuint *',
                ],
            ],
            'glColor3us'               => [
                'name' => 'color3us',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLushort',
                    'green' => 'GLushort',
                    'blue'  => 'GLushort',
                ],
            ],
            'glColor3usv'              => [
                'name' => 'color3usv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLushort *',
                ],
            ],
            'glColor4b'                => [
                'name' => 'color4b',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLbyte',
                    'green' => 'GLbyte',
                    'blue'  => 'GLbyte',
                    'alpha' => 'GLbyte',
                ],
            ],
            'glColor4bv'               => [
                'name' => 'color4bv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLbyte *',
                ],
            ],
            'glColor4d'                => [
                'name' => 'color4d',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLdouble',
                    'green' => 'GLdouble',
                    'blue'  => 'GLdouble',
                    'alpha' => 'GLdouble',
                ],
            ],
            'glColor4dv'               => [
                'name' => 'color4dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glColor4f'                => [
                'name' => 'color4f',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLfloat',
                    'green' => 'GLfloat',
                    'blue'  => 'GLfloat',
                    'alpha' => 'GLfloat',
                ],
            ],
            'glColor4fv'               => [
                'name' => 'color4fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glColor4i'                => [
                'name' => 'color4i',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLint',
                    'green' => 'GLint',
                    'blue'  => 'GLint',
                    'alpha' => 'GLint',
                ],
            ],
            'glColor4iv'               => [
                'name' => 'color4iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glColor4s'                => [
                'name' => 'color4s',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLshort',
                    'green' => 'GLshort',
                    'blue'  => 'GLshort',
                    'alpha' => 'GLshort',
                ],
            ],
            'glColor4sv'               => [
                'name' => 'color4sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glColor4ub'               => [
                'name' => 'color4ub',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLubyte',
                    'green' => 'GLubyte',
                    'blue'  => 'GLubyte',
                    'alpha' => 'GLubyte',
                ],
            ],
            'glColor4ubv'              => [
                'name' => 'color4ubv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLubyte *',
                ],
            ],
            'glColor4ui'               => [
                'name' => 'color4ui',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLuint',
                    'green' => 'GLuint',
                    'blue'  => 'GLuint',
                    'alpha' => 'GLuint',
                ],
            ],
            'glColor4uiv'              => [
                'name' => 'color4uiv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLuint *',
                ],
            ],
            'glColor4us'               => [
                'name' => 'color4us',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLushort',
                    'green' => 'GLushort',
                    'blue'  => 'GLushort',
                    'alpha' => 'GLushort',
                ],
            ],
            'glColor4usv'              => [
                'name' => 'color4usv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLushort *',
                ],
            ],
            'glColorMask'              => [
                'name' => 'colorMask',
                'type' => 'void',
                'args' => [
                    'red'   => 'GLboolean',
                    'green' => 'GLboolean',
                    'blue'  => 'GLboolean',
                    'alpha' => 'GLboolean',
                ],
            ],
            'glColorMaterial'          => [
                'name' => 'colorMaterial',
                'type' => 'void',
                'args' => [
                    'face' => 'GLenum',
                    'mode' => 'GLenum',
                ],
            ],
            'glColorPointer'           => [
                'name' => 'colorPointer',
                'type' => 'void',
                'args' => [
                    'size'    => 'GLint',
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glCopyPixels'             => [
                'name' => 'copyPixels',
                'type' => 'void',
                'args' => [
                    'x'      => 'GLint',
                    'y'      => 'GLint',
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                    'type'   => 'GLenum',
                ],
            ],
            'glCopyTexImage1D'         => [
                'name' => 'copyTexImage1D',
                'type' => 'void',
                'args' => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalFormat' => 'GLenum',
                    'x'              => 'GLint',
                    'y'              => 'GLint',
                    'width'          => 'GLsizei',
                    'border'         => 'GLint',
                ],
            ],
            'glCopyTexImage2D'         => [
                'name' => 'copyTexImage2D',
                'type' => 'void',
                'args' => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalFormat' => 'GLenum',
                    'x'              => 'GLint',
                    'y'              => 'GLint',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'border'         => 'GLint',
                ],
            ],
            'glCopyTexSubImage1D'      => [
                'name' => 'copyTexSubImage1D',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                ],
            ],
            'glCopyTexSubImage2D'      => [
                'name' => 'copyTexSubImage2D',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                ],
            ],
            'glCullFace'               => [
                'name' => 'cullFace',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glDeleteLists'            => [
                'name' => 'deleteLists',
                'type' => 'void',
                'args' => [
                    'list'  => 'GLuint',
                    'range' => 'GLsizei',
                ],
            ],
            'glDeleteTextures'         => [
                'name' => 'deleteTextures',
                'type' => 'void',
                'args' => [
                    'n'        => 'GLsizei',
                    'textures' => 'const GLuint *',
                ],
            ],
            'glDepthFunc'              => [
                'name' => 'depthFunc',
                'type' => 'void',
                'args' => [
                    'func' => 'GLenum',
                ],
            ],
            'glDepthMask'              => [
                'name' => 'depthMask',
                'type' => 'void',
                'args' => [
                    'flag' => 'GLboolean',
                ],
            ],
            'glDepthRange'             => [
                'name' => 'depthRange',
                'type' => 'void',
                'args' => [
                    'zNear' => 'GLclampd',
                    'zFar'  => 'GLclampd',
                ],
            ],
            'glDisable'                => [
                'name' => 'disable',
                'type' => 'void',
                'args' => [
                    'cap' => 'GLenum',
                ],
            ],
            'glDisableClientState'     => [
                'name' => 'disableClientState',
                'type' => 'void',
                'args' => [
                    'array' => 'GLenum',
                ],
            ],
            'glDrawArrays'             => [
                'name' => 'drawArrays',
                'type' => 'void',
                'args' => [
                    'mode'  => 'GLenum',
                    'first' => 'GLint',
                    'count' => 'GLsizei',
                ],
            ],
            'glDrawBuffer'             => [
                'name' => 'drawBuffer',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glDrawElements'           => [
                'name' => 'drawElements',
                'type' => 'void',
                'args' => [
                    'mode'    => 'GLenum',
                    'count'   => 'GLsizei',
                    'type'    => 'GLenum',
                    'indices' => 'const GLvoid *',
                ],
            ],
            'glDrawPixels'             => [
                'name' => 'drawPixels',
                'type' => 'void',
                'args' => [
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                    'format' => 'GLenum',
                    'type'   => 'GLenum',
                    'pixels' => 'const GLvoid *',
                ],
            ],
            'glEdgeFlag'               => [
                'name' => 'edgeFlag',
                'type' => 'void',
                'args' => [
                    'flag' => 'GLboolean',
                ],
            ],
            'glEdgeFlagPointer'        => [
                'name' => 'edgeFlagPointer',
                'type' => 'void',
                'args' => [
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glEdgeFlagv'              => [
                'name' => 'edgeFlagv',
                'type' => 'void',
                'args' => [
                    'flag' => 'const GLboolean *',
                ],
            ],
            'glEnable'                 => [
                'name' => 'enable',
                'type' => 'void',
                'args' => [
                    'cap' => 'GLenum',
                ],
            ],
            'glEnableClientState'      => [
                'name' => 'enableClientState',
                'type' => 'void',
                'args' => [
                    'array' => 'GLenum',
                ],
            ],
            'glEnd'                    => [
                'name' => 'end',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glEndList'                => [
                'name' => 'endList',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glEvalCoord1d'            => [
                'name' => 'evalCoord1d',
                'type' => 'void',
                'args' => [
                    'u' => 'GLdouble',
                ],
            ],
            'glEvalCoord1dv'           => [
                'name' => 'evalCoord1dv',
                'type' => 'void',
                'args' => [
                    'u' => 'const GLdouble *',
                ],
            ],
            'glEvalCoord1f'            => [
                'name' => 'evalCoord1f',
                'type' => 'void',
                'args' => [
                    'u' => 'GLfloat',
                ],
            ],
            'glEvalCoord1fv'           => [
                'name' => 'evalCoord1fv',
                'type' => 'void',
                'args' => [
                    'u' => 'const GLfloat *',
                ],
            ],
            'glEvalCoord2d'            => [
                'name' => 'evalCoord2d',
                'type' => 'void',
                'args' => [
                    'u' => 'GLdouble',
                    'v' => 'GLdouble',
                ],
            ],
            'glEvalCoord2dv'           => [
                'name' => 'evalCoord2dv',
                'type' => 'void',
                'args' => [
                    'u' => 'const GLdouble *',
                ],
            ],
            'glEvalCoord2f'            => [
                'name' => 'evalCoord2f',
                'type' => 'void',
                'args' => [
                    'u' => 'GLfloat',
                    'v' => 'GLfloat',
                ],
            ],
            'glEvalCoord2fv'           => [
                'name' => 'evalCoord2fv',
                'type' => 'void',
                'args' => [
                    'u' => 'const GLfloat *',
                ],
            ],
            'glEvalMesh1'              => [
                'name' => 'evalMesh1',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                    'i1'   => 'GLint',
                    'i2'   => 'GLint',
                ],
            ],
            'glEvalMesh2'              => [
                'name' => 'evalMesh2',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                    'i1'   => 'GLint',
                    'i2'   => 'GLint',
                    'j1'   => 'GLint',
                    'j2'   => 'GLint',
                ],
            ],
            'glEvalPoint1'             => [
                'name' => 'evalPoint1',
                'type' => 'void',
                'args' => [
                    'i' => 'GLint',
                ],
            ],
            'glEvalPoint2'             => [
                'name' => 'evalPoint2',
                'type' => 'void',
                'args' => [
                    'i' => 'GLint',
                    'j' => 'GLint',
                ],
            ],
            'glFeedbackBuffer'         => [
                'name' => 'feedbackBuffer',
                'type' => 'void',
                'args' => [
                    'size'   => 'GLsizei',
                    'type'   => 'GLenum',
                    'buffer' => 'GLfloat *',
                ],
            ],
            'glFinish'                 => [
                'name' => 'finish',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glFlush'                  => [
                'name' => 'flush',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glFogf'                   => [
                'name' => 'fogf',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glFogfv'                  => [
                'name' => 'fogfv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glFogi'                   => [
                'name' => 'fogi',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glFogiv'                  => [
                'name' => 'fogiv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glFrontFace'              => [
                'name' => 'frontFace',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glFrustum'                => [
                'name' => 'frustum',
                'type' => 'void',
                'args' => [
                    'left'   => 'GLdouble',
                    'right'  => 'GLdouble',
                    'bottom' => 'GLdouble',
                    'top'    => 'GLdouble',
                    'zNear'  => 'GLdouble',
                    'zFar'   => 'GLdouble',
                ],
            ],
            'glGenLists'               => [
                'name' => 'genLists',
                'type' => 'GLuint',
                'args' => [
                    'range' => 'GLsizei',
                ],
            ],
            'glGenTextures'            => [
                'name' => 'genTextures',
                'type' => 'void',
                'args' => [
                    'n'        => 'GLsizei',
                    'textures' => 'GLuint *',
                ],
            ],
            'glGetBooleanv'            => [
                'name' => 'getBooleanv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'GLboolean *',
                ],
            ],
            'glGetClipPlane'           => [
                'name' => 'getClipPlane',
                'type' => 'void',
                'args' => [
                    'plane'    => 'GLenum',
                    'equation' => 'GLdouble *',
                ],
            ],
            'glGetDoublev'             => [
                'name' => 'getDoublev',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'GLdouble *',
                ],
            ],
            'glGetError'               => [
                'name' => 'getError',
                'type' => 'GLenum',
                'args' => [
                ],
            ],
            'glGetFloatv'              => [
                'name' => 'getFloatv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetIntegerv'            => [
                'name' => 'getIntegerv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetLightfv'             => [
                'name' => 'getLightfv',
                'type' => 'void',
                'args' => [
                    'light'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetLightiv'             => [
                'name' => 'getLightiv',
                'type' => 'void',
                'args' => [
                    'light'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetMapdv'               => [
                'name' => 'getMapdv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'query'  => 'GLenum',
                    'v'      => 'GLdouble *',
                ],
            ],
            'glGetMapfv'               => [
                'name' => 'getMapfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'query'  => 'GLenum',
                    'v'      => 'GLfloat *',
                ],
            ],
            'glGetMapiv'               => [
                'name' => 'getMapiv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'query'  => 'GLenum',
                    'v'      => 'GLint *',
                ],
            ],
            'glGetMaterialfv'          => [
                'name' => 'getMaterialfv',
                'type' => 'void',
                'args' => [
                    'face'   => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetMaterialiv'          => [
                'name' => 'getMaterialiv',
                'type' => 'void',
                'args' => [
                    'face'   => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetPixelMapfv'          => [
                'name' => 'getPixelMapfv',
                'type' => 'void',
                'args' => [
                    'map'    => 'GLenum',
                    'values' => 'GLfloat *',
                ],
            ],
            'glGetPixelMapuiv'         => [
                'name' => 'getPixelMapuiv',
                'type' => 'void',
                'args' => [
                    'map'    => 'GLenum',
                    'values' => 'GLuint *',
                ],
            ],
            'glGetPixelMapusv'         => [
                'name' => 'getPixelMapusv',
                'type' => 'void',
                'args' => [
                    'map'    => 'GLenum',
                    'values' => 'GLushort *',
                ],
            ],
            'glGetPointerv'            => [
                'name' => 'getPointerv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'GLvoid **',
                ],
            ],
            'glGetPolygonStipple'      => [
                'name' => 'getPolygonStipple',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLubyte *',
                ],
            ],
            'glGetString'              => [
                'name' => 'getString',
                'type' => 'const GLubyte *',
                'args' => [
                    'name' => 'GLenum',
                ],
            ],
            'glGetTexEnvfv'            => [
                'name' => 'getTexEnvfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetTexEnviv'            => [
                'name' => 'getTexEnviv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetTexGendv'            => [
                'name' => 'getTexGendv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLdouble *',
                ],
            ],
            'glGetTexGenfv'            => [
                'name' => 'getTexGenfv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetTexGeniv'            => [
                'name' => 'getTexGeniv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetTexImage'            => [
                'name' => 'getTexImage',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'level'  => 'GLint',
                    'format' => 'GLenum',
                    'type'   => 'GLenum',
                    'pixels' => 'GLvoid *',
                ],
            ],
            'glGetTexLevelParameterfv' => [
                'name' => 'getTexLevelParameterfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'level'  => 'GLint',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetTexLevelParameteriv' => [
                'name' => 'getTexLevelParameteriv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'level'  => 'GLint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetTexParameterfv'      => [
                'name' => 'getTexParameterfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetTexParameteriv'      => [
                'name' => 'getTexParameteriv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glHint'                   => [
                'name' => 'hint',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'mode'   => 'GLenum',
                ],
            ],
            'glIndexMask'              => [
                'name' => 'indexMask',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLuint',
                ],
            ],
            'glIndexPointer'           => [
                'name' => 'indexPointer',
                'type' => 'void',
                'args' => [
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glIndexd'                 => [
                'name' => 'indexd',
                'type' => 'void',
                'args' => [
                    'c' => 'GLdouble',
                ],
            ],
            'glIndexdv'                => [
                'name' => 'indexdv',
                'type' => 'void',
                'args' => [
                    'c' => 'const GLdouble *',
                ],
            ],
            'glIndexf'                 => [
                'name' => 'indexf',
                'type' => 'void',
                'args' => [
                    'c' => 'GLfloat',
                ],
            ],
            'glIndexfv'                => [
                'name' => 'indexfv',
                'type' => 'void',
                'args' => [
                    'c' => 'const GLfloat *',
                ],
            ],
            'glIndexi'                 => [
                'name' => 'indexi',
                'type' => 'void',
                'args' => [
                    'c' => 'GLint',
                ],
            ],
            'glIndexiv'                => [
                'name' => 'indexiv',
                'type' => 'void',
                'args' => [
                    'c' => 'const GLint *',
                ],
            ],
            'glIndexs'                 => [
                'name' => 'indexs',
                'type' => 'void',
                'args' => [
                    'c' => 'GLshort',
                ],
            ],
            'glIndexsv'                => [
                'name' => 'indexsv',
                'type' => 'void',
                'args' => [
                    'c' => 'const GLshort *',
                ],
            ],
            'glIndexub'                => [
                'name' => 'indexub',
                'type' => 'void',
                'args' => [
                    'c' => 'GLubyte',
                ],
            ],
            'glIndexubv'               => [
                'name' => 'indexubv',
                'type' => 'void',
                'args' => [
                    'c' => 'const GLubyte *',
                ],
            ],
            'glInitNames'              => [
                'name' => 'initNames',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glInterleavedArrays'      => [
                'name' => 'interleavedArrays',
                'type' => 'void',
                'args' => [
                    'format'  => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glIsEnabled'              => [
                'name' => 'isEnabled',
                'type' => 'GLboolean',
                'args' => [
                    'cap' => 'GLenum',
                ],
            ],
            'glIsList'                 => [
                'name' => 'isList',
                'type' => 'GLboolean',
                'args' => [
                    'list' => 'GLuint',
                ],
            ],
            'glIsTexture'              => [
                'name' => 'isTexture',
                'type' => 'GLboolean',
                'args' => [
                    'texture' => 'GLuint',
                ],
            ],
            'glLightModelf'            => [
                'name' => 'lightModelf',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glLightModelfv'           => [
                'name' => 'lightModelfv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glLightModeli'            => [
                'name' => 'lightModeli',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glLightModeliv'           => [
                'name' => 'lightModeliv',
                'type' => 'void',
                'args' => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glLightf'                 => [
                'name' => 'lightf',
                'type' => 'void',
                'args' => [
                    'light' => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glLightfv'                => [
                'name' => 'lightfv',
                'type' => 'void',
                'args' => [
                    'light'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glLighti'                 => [
                'name' => 'lighti',
                'type' => 'void',
                'args' => [
                    'light' => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glLightiv'                => [
                'name' => 'lightiv',
                'type' => 'void',
                'args' => [
                    'light'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glLineStipple'            => [
                'name' => 'lineStipple',
                'type' => 'void',
                'args' => [
                    'factor'  => 'GLint',
                    'pattern' => 'GLushort',
                ],
            ],
            'glLineWidth'              => [
                'name' => 'lineWidth',
                'type' => 'void',
                'args' => [
                    'width' => 'GLfloat',
                ],
            ],
            'glListBase'               => [
                'name' => 'listBase',
                'type' => 'void',
                'args' => [
                    'base' => 'GLuint',
                ],
            ],
            'glLoadIdentity'           => [
                'name' => 'loadIdentity',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glLoadMatrixd'            => [
                'name' => 'loadMatrixd',
                'type' => 'void',
                'args' => [
                    'm' => 'const GLdouble *',
                ],
            ],
            'glLoadMatrixf'            => [
                'name' => 'loadMatrixf',
                'type' => 'void',
                'args' => [
                    'm' => 'const GLfloat *',
                ],
            ],
            'glLoadName'               => [
                'name' => 'loadName',
                'type' => 'void',
                'args' => [
                    'name' => 'GLuint',
                ],
            ],
            'glLogicOp'                => [
                'name' => 'logicOp',
                'type' => 'void',
                'args' => [
                    'opcode' => 'GLenum',
                ],
            ],
            'glMap1d'                  => [
                'name' => 'map1d',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'u1'     => 'GLdouble',
                    'u2'     => 'GLdouble',
                    'stride' => 'GLint',
                    'order'  => 'GLint',
                    'points' => 'const GLdouble *',
                ],
            ],
            'glMap1f'                  => [
                'name' => 'map1f',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'u1'     => 'GLfloat',
                    'u2'     => 'GLfloat',
                    'stride' => 'GLint',
                    'order'  => 'GLint',
                    'points' => 'const GLfloat *',
                ],
            ],
            'glMap2d'                  => [
                'name' => 'map2d',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'u1'      => 'GLdouble',
                    'u2'      => 'GLdouble',
                    'ustride' => 'GLint',
                    'uorder'  => 'GLint',
                    'v1'      => 'GLdouble',
                    'v2'      => 'GLdouble',
                    'vstride' => 'GLint',
                    'vorder'  => 'GLint',
                    'points'  => 'const GLdouble *',
                ],
            ],
            'glMap2f'                  => [
                'name' => 'map2f',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'u1'      => 'GLfloat',
                    'u2'      => 'GLfloat',
                    'ustride' => 'GLint',
                    'uorder'  => 'GLint',
                    'v1'      => 'GLfloat',
                    'v2'      => 'GLfloat',
                    'vstride' => 'GLint',
                    'vorder'  => 'GLint',
                    'points'  => 'const GLfloat *',
                ],
            ],
            'glMapGrid1d'              => [
                'name' => 'mapGrid1d',
                'type' => 'void',
                'args' => [
                    'un' => 'GLint',
                    'u1' => 'GLdouble',
                    'u2' => 'GLdouble',
                ],
            ],
            'glMapGrid1f'              => [
                'name' => 'mapGrid1f',
                'type' => 'void',
                'args' => [
                    'un' => 'GLint',
                    'u1' => 'GLfloat',
                    'u2' => 'GLfloat',
                ],
            ],
            'glMapGrid2d'              => [
                'name' => 'mapGrid2d',
                'type' => 'void',
                'args' => [
                    'un' => 'GLint',
                    'u1' => 'GLdouble',
                    'u2' => 'GLdouble',
                    'vn' => 'GLint',
                    'v1' => 'GLdouble',
                    'v2' => 'GLdouble',
                ],
            ],
            'glMapGrid2f'              => [
                'name' => 'mapGrid2f',
                'type' => 'void',
                'args' => [
                    'un' => 'GLint',
                    'u1' => 'GLfloat',
                    'u2' => 'GLfloat',
                    'vn' => 'GLint',
                    'v1' => 'GLfloat',
                    'v2' => 'GLfloat',
                ],
            ],
            'glMaterialf'              => [
                'name' => 'materialf',
                'type' => 'void',
                'args' => [
                    'face'  => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glMaterialfv'             => [
                'name' => 'materialfv',
                'type' => 'void',
                'args' => [
                    'face'   => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glMateriali'              => [
                'name' => 'materiali',
                'type' => 'void',
                'args' => [
                    'face'  => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glMaterialiv'             => [
                'name' => 'materialiv',
                'type' => 'void',
                'args' => [
                    'face'   => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glMatrixMode'             => [
                'name' => 'matrixMode',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glMultMatrixd'            => [
                'name' => 'multMatrixd',
                'type' => 'void',
                'args' => [
                    'm' => 'const GLdouble *',
                ],
            ],
            'glMultMatrixf'            => [
                'name' => 'multMatrixf',
                'type' => 'void',
                'args' => [
                    'm' => 'const GLfloat *',
                ],
            ],
            'glNewList'                => [
                'name' => 'newList',
                'type' => 'void',
                'args' => [
                    'list' => 'GLuint',
                    'mode' => 'GLenum',
                ],
            ],
            'glNormal3b'               => [
                'name' => 'normal3b',
                'type' => 'void',
                'args' => [
                    'nx' => 'GLbyte',
                    'ny' => 'GLbyte',
                    'nz' => 'GLbyte',
                ],
            ],
            'glNormal3bv'              => [
                'name' => 'normal3bv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLbyte *',
                ],
            ],
            'glNormal3d'               => [
                'name' => 'normal3d',
                'type' => 'void',
                'args' => [
                    'nx' => 'GLdouble',
                    'ny' => 'GLdouble',
                    'nz' => 'GLdouble',
                ],
            ],
            'glNormal3dv'              => [
                'name' => 'normal3dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glNormal3f'               => [
                'name' => 'normal3f',
                'type' => 'void',
                'args' => [
                    'nx' => 'GLfloat',
                    'ny' => 'GLfloat',
                    'nz' => 'GLfloat',
                ],
            ],
            'glNormal3fv'              => [
                'name' => 'normal3fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glNormal3i'               => [
                'name' => 'normal3i',
                'type' => 'void',
                'args' => [
                    'nx' => 'GLint',
                    'ny' => 'GLint',
                    'nz' => 'GLint',
                ],
            ],
            'glNormal3iv'              => [
                'name' => 'normal3iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glNormal3s'               => [
                'name' => 'normal3s',
                'type' => 'void',
                'args' => [
                    'nx' => 'GLshort',
                    'ny' => 'GLshort',
                    'nz' => 'GLshort',
                ],
            ],
            'glNormal3sv'              => [
                'name' => 'normal3sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glNormalPointer'          => [
                'name' => 'normalPointer',
                'type' => 'void',
                'args' => [
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glOrtho'                  => [
                'name' => 'ortho',
                'type' => 'void',
                'args' => [
                    'left'   => 'GLdouble',
                    'right'  => 'GLdouble',
                    'bottom' => 'GLdouble',
                    'top'    => 'GLdouble',
                    'zNear'  => 'GLdouble',
                    'zFar'   => 'GLdouble',
                ],
            ],
            'glPassThrough'            => [
                'name' => 'passThrough',
                'type' => 'void',
                'args' => [
                    'token' => 'GLfloat',
                ],
            ],
            'glPixelMapfv'             => [
                'name' => 'pixelMapfv',
                'type' => 'void',
                'args' => [
                    'map'     => 'GLenum',
                    'mapsize' => 'GLsizei',
                    'values'  => 'const GLfloat *',
                ],
            ],
            'glPixelMapuiv'            => [
                'name' => 'pixelMapuiv',
                'type' => 'void',
                'args' => [
                    'map'     => 'GLenum',
                    'mapsize' => 'GLsizei',
                    'values'  => 'const GLuint *',
                ],
            ],
            'glPixelMapusv'            => [
                'name' => 'pixelMapusv',
                'type' => 'void',
                'args' => [
                    'map'     => 'GLenum',
                    'mapsize' => 'GLsizei',
                    'values'  => 'const GLushort *',
                ],
            ],
            'glPixelStoref'            => [
                'name' => 'pixelStoref',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glPixelStorei'            => [
                'name' => 'pixelStorei',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glPixelTransferf'         => [
                'name' => 'pixelTransferf',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glPixelTransferi'         => [
                'name' => 'pixelTransferi',
                'type' => 'void',
                'args' => [
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glPixelZoom'              => [
                'name' => 'pixelZoom',
                'type' => 'void',
                'args' => [
                    'xfactor' => 'GLfloat',
                    'yfactor' => 'GLfloat',
                ],
            ],
            'glPointSize'              => [
                'name' => 'pointSize',
                'type' => 'void',
                'args' => [
                    'size' => 'GLfloat',
                ],
            ],
            'glPolygonMode'            => [
                'name' => 'polygonMode',
                'type' => 'void',
                'args' => [
                    'face' => 'GLenum',
                    'mode' => 'GLenum',
                ],
            ],
            'glPolygonOffset'          => [
                'name' => 'polygonOffset',
                'type' => 'void',
                'args' => [
                    'factor' => 'GLfloat',
                    'units'  => 'GLfloat',
                ],
            ],
            'glPolygonStipple'         => [
                'name' => 'polygonStipple',
                'type' => 'void',
                'args' => [
                    'mask' => 'const GLubyte *',
                ],
            ],
            'glPopAttrib'              => [
                'name' => 'popAttrib',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glPopClientAttrib'        => [
                'name' => 'popClientAttrib',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glPopMatrix'              => [
                'name' => 'popMatrix',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glPopName'                => [
                'name' => 'popName',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glPrioritizeTextures'     => [
                'name' => 'prioritizeTextures',
                'type' => 'void',
                'args' => [
                    'n'          => 'GLsizei',
                    'textures'   => 'const GLuint *',
                    'priorities' => 'const GLclampf *',
                ],
            ],
            'glPushAttrib'             => [
                'name' => 'pushAttrib',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLbitfield',
                ],
            ],
            'glPushClientAttrib'       => [
                'name' => 'pushClientAttrib',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLbitfield',
                ],
            ],
            'glPushMatrix'             => [
                'name' => 'pushMatrix',
                'type' => 'void',
                'args' => [
                ],
            ],
            'glPushName'               => [
                'name' => 'pushName',
                'type' => 'void',
                'args' => [
                    'name' => 'GLuint',
                ],
            ],
            'glRasterPos2d'            => [
                'name' => 'rasterPos2d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                ],
            ],
            'glRasterPos2dv'           => [
                'name' => 'rasterPos2dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glRasterPos2f'            => [
                'name' => 'rasterPos2f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                ],
            ],
            'glRasterPos2fv'           => [
                'name' => 'rasterPos2fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glRasterPos2i'            => [
                'name' => 'rasterPos2i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                ],
            ],
            'glRasterPos2iv'           => [
                'name' => 'rasterPos2iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glRasterPos2s'            => [
                'name' => 'rasterPos2s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                ],
            ],
            'glRasterPos2sv'           => [
                'name' => 'rasterPos2sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glRasterPos3d'            => [
                'name' => 'rasterPos3d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                ],
            ],
            'glRasterPos3dv'           => [
                'name' => 'rasterPos3dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glRasterPos3f'            => [
                'name' => 'rasterPos3f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                ],
            ],
            'glRasterPos3fv'           => [
                'name' => 'rasterPos3fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glRasterPos3i'            => [
                'name' => 'rasterPos3i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                    'z' => 'GLint',
                ],
            ],
            'glRasterPos3iv'           => [
                'name' => 'rasterPos3iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glRasterPos3s'            => [
                'name' => 'rasterPos3s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                    'z' => 'GLshort',
                ],
            ],
            'glRasterPos3sv'           => [
                'name' => 'rasterPos3sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glRasterPos4d'            => [
                'name' => 'rasterPos4d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                    'w' => 'GLdouble',
                ],
            ],
            'glRasterPos4dv'           => [
                'name' => 'rasterPos4dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glRasterPos4f'            => [
                'name' => 'rasterPos4f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                    'w' => 'GLfloat',
                ],
            ],
            'glRasterPos4fv'           => [
                'name' => 'rasterPos4fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glRasterPos4i'            => [
                'name' => 'rasterPos4i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                    'z' => 'GLint',
                    'w' => 'GLint',
                ],
            ],
            'glRasterPos4iv'           => [
                'name' => 'rasterPos4iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glRasterPos4s'            => [
                'name' => 'rasterPos4s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                    'z' => 'GLshort',
                    'w' => 'GLshort',
                ],
            ],
            'glRasterPos4sv'           => [
                'name' => 'rasterPos4sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glReadBuffer'             => [
                'name' => 'readBuffer',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glReadPixels'             => [
                'name' => 'readPixels',
                'type' => 'void',
                'args' => [
                    'x'      => 'GLint',
                    'y'      => 'GLint',
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                    'format' => 'GLenum',
                    'type'   => 'GLenum',
                    'pixels' => 'GLvoid *',
                ],
            ],
            'glRectd'                  => [
                'name' => 'rectd',
                'type' => 'void',
                'args' => [
                    'x1' => 'GLdouble',
                    'y1' => 'GLdouble',
                    'x2' => 'GLdouble',
                    'y2' => 'GLdouble',
                ],
            ],
            'glRectdv'                 => [
                'name' => 'rectdv',
                'type' => 'void',
                'args' => [
                    'v1' => 'const GLdouble *',
                    'v2' => 'const GLdouble *',
                ],
            ],
            'glRectf'                  => [
                'name' => 'rectf',
                'type' => 'void',
                'args' => [
                    'x1' => 'GLfloat',
                    'y1' => 'GLfloat',
                    'x2' => 'GLfloat',
                    'y2' => 'GLfloat',
                ],
            ],
            'glRectfv'                 => [
                'name' => 'rectfv',
                'type' => 'void',
                'args' => [
                    'v1' => 'const GLfloat *',
                    'v2' => 'const GLfloat *',
                ],
            ],
            'glRecti'                  => [
                'name' => 'recti',
                'type' => 'void',
                'args' => [
                    'x1' => 'GLint',
                    'y1' => 'GLint',
                    'x2' => 'GLint',
                    'y2' => 'GLint',
                ],
            ],
            'glRectiv'                 => [
                'name' => 'rectiv',
                'type' => 'void',
                'args' => [
                    'v1' => 'const GLint *',
                    'v2' => 'const GLint *',
                ],
            ],
            'glRects'                  => [
                'name' => 'rects',
                'type' => 'void',
                'args' => [
                    'x1' => 'GLshort',
                    'y1' => 'GLshort',
                    'x2' => 'GLshort',
                    'y2' => 'GLshort',
                ],
            ],
            'glRectsv'                 => [
                'name' => 'rectsv',
                'type' => 'void',
                'args' => [
                    'v1' => 'const GLshort *',
                    'v2' => 'const GLshort *',
                ],
            ],
            'glRenderMode'             => [
                'name' => 'renderMode',
                'type' => 'GLint',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glRotated'                => [
                'name' => 'rotated',
                'type' => 'void',
                'args' => [
                    'angle' => 'GLdouble',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                    'z'     => 'GLdouble',
                ],
            ],
            'glRotatef'                => [
                'name' => 'rotatef',
                'type' => 'void',
                'args' => [
                    'angle' => 'GLfloat',
                    'x'     => 'GLfloat',
                    'y'     => 'GLfloat',
                    'z'     => 'GLfloat',
                ],
            ],
            'glScaled'                 => [
                'name' => 'scaled',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                ],
            ],
            'glScalef'                 => [
                'name' => 'scalef',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                ],
            ],
            'glScissor'                => [
                'name' => 'scissor',
                'type' => 'void',
                'args' => [
                    'x'      => 'GLint',
                    'y'      => 'GLint',
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                ],
            ],
            'glSelectBuffer'           => [
                'name' => 'selectBuffer',
                'type' => 'void',
                'args' => [
                    'size'   => 'GLsizei',
                    'buffer' => 'GLuint *',
                ],
            ],
            'glShadeModel'             => [
                'name' => 'shadeModel',
                'type' => 'void',
                'args' => [
                    'mode' => 'GLenum',
                ],
            ],
            'glStencilFunc'            => [
                'name' => 'stencilFunc',
                'type' => 'void',
                'args' => [
                    'func' => 'GLenum',
                    'ref'  => 'GLint',
                    'mask' => 'GLuint',
                ],
            ],
            'glStencilMask'            => [
                'name' => 'stencilMask',
                'type' => 'void',
                'args' => [
                    'mask' => 'GLuint',
                ],
            ],
            'glStencilOp'              => [
                'name' => 'stencilOp',
                'type' => 'void',
                'args' => [
                    'fail'  => 'GLenum',
                    'zfail' => 'GLenum',
                    'zpass' => 'GLenum',
                ],
            ],
            'glTexCoord1d'             => [
                'name' => 'texCoord1d',
                'type' => 'void',
                'args' => [
                    's' => 'GLdouble',
                ],
            ],
            'glTexCoord1dv'            => [
                'name' => 'texCoord1dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glTexCoord1f'             => [
                'name' => 'texCoord1f',
                'type' => 'void',
                'args' => [
                    's' => 'GLfloat',
                ],
            ],
            'glTexCoord1fv'            => [
                'name' => 'texCoord1fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glTexCoord1i'             => [
                'name' => 'texCoord1i',
                'type' => 'void',
                'args' => [
                    's' => 'GLint',
                ],
            ],
            'glTexCoord1iv'            => [
                'name' => 'texCoord1iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glTexCoord1s'             => [
                'name' => 'texCoord1s',
                'type' => 'void',
                'args' => [
                    's' => 'GLshort',
                ],
            ],
            'glTexCoord1sv'            => [
                'name' => 'texCoord1sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glTexCoord2d'             => [
                'name' => 'texCoord2d',
                'type' => 'void',
                'args' => [
                    's' => 'GLdouble',
                    't' => 'GLdouble',
                ],
            ],
            'glTexCoord2dv'            => [
                'name' => 'texCoord2dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glTexCoord2f'             => [
                'name' => 'texCoord2f',
                'type' => 'void',
                'args' => [
                    's' => 'GLfloat',
                    't' => 'GLfloat',
                ],
            ],
            'glTexCoord2fv'            => [
                'name' => 'texCoord2fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glTexCoord2i'             => [
                'name' => 'texCoord2i',
                'type' => 'void',
                'args' => [
                    's' => 'GLint',
                    't' => 'GLint',
                ],
            ],
            'glTexCoord2iv'            => [
                'name' => 'texCoord2iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glTexCoord2s'             => [
                'name' => 'texCoord2s',
                'type' => 'void',
                'args' => [
                    's' => 'GLshort',
                    't' => 'GLshort',
                ],
            ],
            'glTexCoord2sv'            => [
                'name' => 'texCoord2sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glTexCoord3d'             => [
                'name' => 'texCoord3d',
                'type' => 'void',
                'args' => [
                    's' => 'GLdouble',
                    't' => 'GLdouble',
                    'r' => 'GLdouble',
                ],
            ],
            'glTexCoord3dv'            => [
                'name' => 'texCoord3dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glTexCoord3f'             => [
                'name' => 'texCoord3f',
                'type' => 'void',
                'args' => [
                    's' => 'GLfloat',
                    't' => 'GLfloat',
                    'r' => 'GLfloat',
                ],
            ],
            'glTexCoord3fv'            => [
                'name' => 'texCoord3fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glTexCoord3i'             => [
                'name' => 'texCoord3i',
                'type' => 'void',
                'args' => [
                    's' => 'GLint',
                    't' => 'GLint',
                    'r' => 'GLint',
                ],
            ],
            'glTexCoord3iv'            => [
                'name' => 'texCoord3iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glTexCoord3s'             => [
                'name' => 'texCoord3s',
                'type' => 'void',
                'args' => [
                    's' => 'GLshort',
                    't' => 'GLshort',
                    'r' => 'GLshort',
                ],
            ],
            'glTexCoord3sv'            => [
                'name' => 'texCoord3sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glTexCoord4d'             => [
                'name' => 'texCoord4d',
                'type' => 'void',
                'args' => [
                    's' => 'GLdouble',
                    't' => 'GLdouble',
                    'r' => 'GLdouble',
                    'q' => 'GLdouble',
                ],
            ],
            'glTexCoord4dv'            => [
                'name' => 'texCoord4dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glTexCoord4f'             => [
                'name' => 'texCoord4f',
                'type' => 'void',
                'args' => [
                    's' => 'GLfloat',
                    't' => 'GLfloat',
                    'r' => 'GLfloat',
                    'q' => 'GLfloat',
                ],
            ],
            'glTexCoord4fv'            => [
                'name' => 'texCoord4fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glTexCoord4i'             => [
                'name' => 'texCoord4i',
                'type' => 'void',
                'args' => [
                    's' => 'GLint',
                    't' => 'GLint',
                    'r' => 'GLint',
                    'q' => 'GLint',
                ],
            ],
            'glTexCoord4iv'            => [
                'name' => 'texCoord4iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glTexCoord4s'             => [
                'name' => 'texCoord4s',
                'type' => 'void',
                'args' => [
                    's' => 'GLshort',
                    't' => 'GLshort',
                    'r' => 'GLshort',
                    'q' => 'GLshort',
                ],
            ],
            'glTexCoord4sv'            => [
                'name' => 'texCoord4sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glTexCoordPointer'        => [
                'name' => 'texCoordPointer',
                'type' => 'void',
                'args' => [
                    'size'    => 'GLint',
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glTexEnvf'                => [
                'name' => 'texEnvf',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'param'  => 'GLfloat',
                ],
            ],
            'glTexEnvfv'               => [
                'name' => 'texEnvfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glTexEnvi'                => [
                'name' => 'texEnvi',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'param'  => 'GLint',
                ],
            ],
            'glTexEnviv'               => [
                'name' => 'texEnviv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glTexGend'                => [
                'name' => 'texGend',
                'type' => 'void',
                'args' => [
                    'coord' => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLdouble',
                ],
            ],
            'glTexGendv'               => [
                'name' => 'texGendv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLdouble *',
                ],
            ],
            'glTexGenf'                => [
                'name' => 'texGenf',
                'type' => 'void',
                'args' => [
                    'coord' => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glTexGenfv'               => [
                'name' => 'texGenfv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glTexGeni'                => [
                'name' => 'texGeni',
                'type' => 'void',
                'args' => [
                    'coord' => 'GLenum',
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glTexGeniv'               => [
                'name' => 'texGeniv',
                'type' => 'void',
                'args' => [
                    'coord'  => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glTexImage1D'             => [
                'name' => 'texImage1D',
                'type' => 'void',
                'args' => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLint',
                    'width'          => 'GLsizei',
                    'border'         => 'GLint',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'pixels'         => 'const GLvoid *',
                ],
            ],
            'glTexImage2D'             => [
                'name' => 'texImage2D',
                'type' => 'void',
                'args' => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLint',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'border'         => 'GLint',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'pixels'         => 'const GLvoid *',
                ],
            ],
            'glTexParameterf'          => [
                'name' => 'texParameterf',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'param'  => 'GLfloat',
                ],
            ],
            'glTexParameterfv'         => [
                'name' => 'texParameterfv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glTexParameteri'          => [
                'name' => 'texParameteri',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'param'  => 'GLint',
                ],
            ],
            'glTexParameteriv'         => [
                'name' => 'texParameteriv',
                'type' => 'void',
                'args' => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glTexSubImage1D'          => [
                'name' => 'texSubImage1D',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const GLvoid *',
                ],
            ],
            'glTexSubImage2D'          => [
                'name' => 'texSubImage2D',
                'type' => 'void',
                'args' => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const GLvoid *',
                ],
            ],
            'glTranslated'             => [
                'name' => 'translated',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                ],
            ],
            'glTranslatef'             => [
                'name' => 'translatef',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                ],
            ],
            'glVertex2d'               => [
                'name' => 'vertex2d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                ],
            ],
            'glVertex2dv'              => [
                'name' => 'vertex2dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glVertex2f'               => [
                'name' => 'vertex2f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                ],
            ],
            'glVertex2fv'              => [
                'name' => 'vertex2fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glVertex2i'               => [
                'name' => 'vertex2i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                ],
            ],
            'glVertex2iv'              => [
                'name' => 'vertex2iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glVertex2s'               => [
                'name' => 'vertex2s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                ],
            ],
            'glVertex2sv'              => [
                'name' => 'vertex2sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glVertex3d'               => [
                'name' => 'vertex3d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                ],
            ],
            'glVertex3dv'              => [
                'name' => 'vertex3dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glVertex3f'               => [
                'name' => 'vertex3f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                ],
            ],
            'glVertex3fv'              => [
                'name' => 'vertex3fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glVertex3i'               => [
                'name' => 'vertex3i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                    'z' => 'GLint',
                ],
            ],
            'glVertex3iv'              => [
                'name' => 'vertex3iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glVertex3s'               => [
                'name' => 'vertex3s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                    'z' => 'GLshort',
                ],
            ],
            'glVertex3sv'              => [
                'name' => 'vertex3sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glVertex4d'               => [
                'name' => 'vertex4d',
                'type' => 'void',
                'args' => [
                    'x' => 'GLdouble',
                    'y' => 'GLdouble',
                    'z' => 'GLdouble',
                    'w' => 'GLdouble',
                ],
            ],
            'glVertex4dv'              => [
                'name' => 'vertex4dv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLdouble *',
                ],
            ],
            'glVertex4f'               => [
                'name' => 'vertex4f',
                'type' => 'void',
                'args' => [
                    'x' => 'GLfloat',
                    'y' => 'GLfloat',
                    'z' => 'GLfloat',
                    'w' => 'GLfloat',
                ],
            ],
            'glVertex4fv'              => [
                'name' => 'vertex4fv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLfloat *',
                ],
            ],
            'glVertex4i'               => [
                'name' => 'vertex4i',
                'type' => 'void',
                'args' => [
                    'x' => 'GLint',
                    'y' => 'GLint',
                    'z' => 'GLint',
                    'w' => 'GLint',
                ],
            ],
            'glVertex4iv'              => [
                'name' => 'vertex4iv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLint *',
                ],
            ],
            'glVertex4s'               => [
                'name' => 'vertex4s',
                'type' => 'void',
                'args' => [
                    'x' => 'GLshort',
                    'y' => 'GLshort',
                    'z' => 'GLshort',
                    'w' => 'GLshort',
                ],
            ],
            'glVertex4sv'              => [
                'name' => 'vertex4sv',
                'type' => 'void',
                'args' => [
                    'v' => 'const GLshort *',
                ],
            ],
            'glVertexPointer'          => [
                'name' => 'vertexPointer',
                'type' => 'void',
                'args' => [
                    'size'    => 'GLint',
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const GLvoid *',
                ],
            ],
            'glViewport'               => [
                'name' => 'viewport',
                'type' => 'void',
                'args' => [
                    'x'      => 'GLint',
                    'y'      => 'GLint',
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                ],
            ],
        ],
    ],
    'GL12' => [
        'name'      => 'Serafim\\OpenGL\\GL12',
        'extends'   => 'Serafim\\OpenGL\\GL11',
        'version'   => '1.2',
        'comment'   => 'The OpenGL functionality up to version 1.2. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:
- EXT_texture3D @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture3D.txt
- EXT_bgra @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_bgra.txt
- EXT_packed_pixels @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_packed_pixels.txt
- EXT_rescale_normal @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_rescale_normal.txt
- EXT_separate_specular_color @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_separate_specular_color.txt
- SGIS_texture_edge_clamp @see https://www.khronos.org/registry/OpenGL/extensions/SGIS/SGIS_texture_edge_clamp.txt
- SGIS_texture_lod @see https://www.khronos.org/registry/OpenGL/extensions/SGIS/SGIS_texture_lod.txt
- EXT_draw_range_elements @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_draw_range_elements.txt

Extensions part of the imaging subset:

- EXT_color_table @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_color_table.txt
- EXT_color_subtable @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_color_subtable.txt
- EXT_convolution @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_convolution.txt
- HP_convolution_border_modes @see https://www.khronos.org/registry/OpenGL/extensions/HP/HP_convolution_border_modes.txt
- SGI_color_matrix @see https://www.khronos.org/registry/OpenGL/extensions/SGI/SGI_color_matrix.txt
- EXT_histogram @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_histogram.txt
- EXT_blend_color @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_blend_color.txt
- EXT_blend_minmax @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_blend_minmax.txt
- EXT_blend_subtract @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_blend_subtract.txt',
        'constants' => [
            'GL_ALIASED_POINT_SIZE_RANGE'      => 33901,
            'GL_ALIASED_LINE_WIDTH_RANGE'      => 33902,
            'GL_SMOOTH_POINT_SIZE_RANGE'       => 2834,
            'GL_SMOOTH_POINT_SIZE_GRANULARITY' => 2835,
            'GL_SMOOTH_LINE_WIDTH_RANGE'       => 2850,
            'GL_SMOOTH_LINE_WIDTH_GRANULARITY' => 2851,
            'GL_TEXTURE_BINDING_3D'            => 32874,
            'GL_PACK_SKIP_IMAGES'              => 32875,
            'GL_PACK_IMAGE_HEIGHT'             => 32876,
            'GL_UNPACK_SKIP_IMAGES'            => 32877,
            'GL_UNPACK_IMAGE_HEIGHT'           => 32878,
            'GL_TEXTURE_3D'                    => 32879,
            'GL_PROXY_TEXTURE_3D'              => 32880,
            'GL_TEXTURE_DEPTH'                 => 32881,
            'GL_TEXTURE_WRAP_R'                => 32882,
            'GL_MAX_3D_TEXTURE_SIZE'           => 32883,
            'GL_BGR'                           => 32992,
            'GL_BGRA'                          => 32993,
            'GL_UNSIGNED_BYTE_3_3_2'           => 32818,
            'GL_UNSIGNED_BYTE_2_3_3_REV'       => 33634,
            'GL_UNSIGNED_SHORT_5_6_5'          => 33635,
            'GL_UNSIGNED_SHORT_5_6_5_REV'      => 33636,
            'GL_UNSIGNED_SHORT_4_4_4_4'        => 32819,
            'GL_UNSIGNED_SHORT_4_4_4_4_REV'    => 33637,
            'GL_UNSIGNED_SHORT_5_5_5_1'        => 32820,
            'GL_UNSIGNED_SHORT_1_5_5_5_REV'    => 33638,
            'GL_UNSIGNED_INT_8_8_8_8'          => 32821,
            'GL_UNSIGNED_INT_8_8_8_8_REV'      => 33639,
            'GL_UNSIGNED_INT_10_10_10_2'       => 32822,
            'GL_UNSIGNED_INT_2_10_10_10_REV'   => 33640,
            'GL_RESCALE_NORMAL'                => 32826,
            'GL_LIGHT_MODEL_COLOR_CONTROL'     => 33272,
            'GL_SINGLE_COLOR'                  => 33273,
            'GL_SEPARATE_SPECULAR_COLOR'       => 33274,
            'GL_CLAMP_TO_EDGE'                 => 33071,
            'GL_TEXTURE_MIN_LOD'               => 33082,
            'GL_TEXTURE_MAX_LOD'               => 33083,
            'GL_TEXTURE_BASE_LEVEL'            => 33084,
            'GL_TEXTURE_MAX_LEVEL'             => 33085,
            'GL_MAX_ELEMENTS_VERTICES'         => 33000,
            'GL_MAX_ELEMENTS_INDICES'          => 33001,
        ],
        'methods'   => [
            'glCopyTexSubImage3D' => [
                'virtual' => true,
                'name'    => 'copyTexSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                ],
            ],
            'glDrawRangeElements' => [
                'virtual' => true,
                'name'    => 'drawRangeElements',
                'type'    => 'void',
                'args'    => [
                    'mode'    => 'GLenum',
                    'start'   => 'GLuint',
                    'end'     => 'GLuint',
                    'count'   => 'GLsizei',
                    'type'    => 'GLenum',
                    'indices' => 'const void *',
                ],
            ],
            'glTexImage3D'        => [
                'virtual' => true,
                'name'    => 'texImage3D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLint',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'depth'          => 'GLsizei',
                    'border'         => 'GLint',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'pixels'         => 'const void *',
                ],
            ],
            'glTexSubImage3D'     => [
                'virtual' => true,
                'name'    => 'texSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const void *',
                ],
            ],
        ],
    ],
    'GL13' => [
        'name'      => 'Serafim\\OpenGL\\GL13',
        'extends'   => 'Serafim\\OpenGL\\GL12',
        'version'   => '1.3',
        'comment'   => 'The OpenGL functionality up to version 1.3. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:

- ARB_texture_compression @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_compression.txt
- ARB_texture_cube_map @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_cube_map.txt
- ARB_multisample @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_multisample.txt
- ARB_multitexture @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_multitexture.txt
- ARB_texture_env_add @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_env_add.txt
- ARB_texture_env_combine @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_env_combine.txt
- ARB_texture_env_dot3 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_env_dot3.txt
- ARB_texture_border_clamp @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_border_clamp.txt
- ARB_transpose_matrix @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_transpose_matrix.txt',
        'constants' => [
            'GL_TEXTURE0'                       => 33984,
            'GL_TEXTURE1'                       => 33985,
            'GL_TEXTURE2'                       => 33986,
            'GL_TEXTURE3'                       => 33987,
            'GL_TEXTURE4'                       => 33988,
            'GL_TEXTURE5'                       => 33989,
            'GL_TEXTURE6'                       => 33990,
            'GL_TEXTURE7'                       => 33991,
            'GL_TEXTURE8'                       => 33992,
            'GL_TEXTURE9'                       => 33993,
            'GL_TEXTURE10'                      => 33994,
            'GL_TEXTURE11'                      => 33995,
            'GL_TEXTURE12'                      => 33996,
            'GL_TEXTURE13'                      => 33997,
            'GL_TEXTURE14'                      => 33998,
            'GL_TEXTURE15'                      => 33999,
            'GL_TEXTURE16'                      => 34000,
            'GL_TEXTURE17'                      => 34001,
            'GL_TEXTURE18'                      => 34002,
            'GL_TEXTURE19'                      => 34003,
            'GL_TEXTURE20'                      => 34004,
            'GL_TEXTURE21'                      => 34005,
            'GL_TEXTURE22'                      => 34006,
            'GL_TEXTURE23'                      => 34007,
            'GL_TEXTURE24'                      => 34008,
            'GL_TEXTURE25'                      => 34009,
            'GL_TEXTURE26'                      => 34010,
            'GL_TEXTURE27'                      => 34011,
            'GL_TEXTURE28'                      => 34012,
            'GL_TEXTURE29'                      => 34013,
            'GL_TEXTURE30'                      => 34014,
            'GL_TEXTURE31'                      => 34015,
            'GL_ACTIVE_TEXTURE'                 => 34016,
            'GL_MULTISAMPLE'                    => 32925,
            'GL_SAMPLE_ALPHA_TO_COVERAGE'       => 32926,
            'GL_SAMPLE_ALPHA_TO_ONE'            => 32927,
            'GL_SAMPLE_COVERAGE'                => 32928,
            'GL_SAMPLE_BUFFERS'                 => 32936,
            'GL_SAMPLES'                        => 32937,
            'GL_SAMPLE_COVERAGE_VALUE'          => 32938,
            'GL_SAMPLE_COVERAGE_INVERT'         => 32939,
            'GL_TEXTURE_CUBE_MAP'               => 34067,
            'GL_TEXTURE_BINDING_CUBE_MAP'       => 34068,
            'GL_TEXTURE_CUBE_MAP_POSITIVE_X'    => 34069,
            'GL_TEXTURE_CUBE_MAP_NEGATIVE_X'    => 34070,
            'GL_TEXTURE_CUBE_MAP_POSITIVE_Y'    => 34071,
            'GL_TEXTURE_CUBE_MAP_NEGATIVE_Y'    => 34072,
            'GL_TEXTURE_CUBE_MAP_POSITIVE_Z'    => 34073,
            'GL_TEXTURE_CUBE_MAP_NEGATIVE_Z'    => 34074,
            'GL_PROXY_TEXTURE_CUBE_MAP'         => 34075,
            'GL_MAX_CUBE_MAP_TEXTURE_SIZE'      => 34076,
            'GL_COMPRESSED_RGB'                 => 34029,
            'GL_COMPRESSED_RGBA'                => 34030,
            'GL_TEXTURE_COMPRESSION_HINT'       => 34031,
            'GL_TEXTURE_COMPRESSED_IMAGE_SIZE'  => 34464,
            'GL_TEXTURE_COMPRESSED'             => 34465,
            'GL_NUM_COMPRESSED_TEXTURE_FORMATS' => 34466,
            'GL_COMPRESSED_TEXTURE_FORMATS'     => 34467,
            'GL_CLAMP_TO_BORDER'                => 33069,
        ],
        'methods'   => [
            'glActiveTexture'           => [
                'virtual' => true,
                'name'    => 'activeTexture',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLenum',
                ],
            ],
            'glCompressedTexImage1D'    => [
                'virtual' => true,
                'name'    => 'compressedTexImage1D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'border'         => 'GLint',
                    'imageSize'      => 'GLsizei',
                    'data'           => 'const void *',
                ],
            ],
            'glCompressedTexImage2D'    => [
                'virtual' => true,
                'name'    => 'compressedTexImage2D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'border'         => 'GLint',
                    'imageSize'      => 'GLsizei',
                    'data'           => 'const void *',
                ],
            ],
            'glCompressedTexImage3D'    => [
                'virtual' => true,
                'name'    => 'compressedTexImage3D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'level'          => 'GLint',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'depth'          => 'GLsizei',
                    'border'         => 'GLint',
                    'imageSize'      => 'GLsizei',
                    'data'           => 'const void *',
                ],
            ],
            'glCompressedTexSubImage1D' => [
                'virtual' => true,
                'name'    => 'compressedTexSubImage1D',
                'type'    => 'void',
                'args'    => [
                    'target'    => 'GLenum',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glCompressedTexSubImage2D' => [
                'virtual' => true,
                'name'    => 'compressedTexSubImage2D',
                'type'    => 'void',
                'args'    => [
                    'target'    => 'GLenum',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'yoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'height'    => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glCompressedTexSubImage3D' => [
                'virtual' => true,
                'name'    => 'compressedTexSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'target'    => 'GLenum',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'yoffset'   => 'GLint',
                    'zoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'height'    => 'GLsizei',
                    'depth'     => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glGetCompressedTexImage'   => [
                'virtual' => true,
                'name'    => 'getCompressedTexImage',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'level'  => 'GLint',
                    'img'    => 'void *',
                ],
            ],
            'glSampleCoverage'          => [
                'virtual' => true,
                'name'    => 'sampleCoverage',
                'type'    => 'void',
                'args'    => [
                    'value'  => 'GLfloat',
                    'invert' => 'GLboolean',
                ],
            ],
        ],
    ],
    'GL14' => [
        'name'      => 'Serafim\\OpenGL\\GL14',
        'extends'   => 'Serafim\\OpenGL\\GL13',
        'version'   => '1.4',
        'comment'   => 'The OpenGL functionality up to version 1.4. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:

- SGIS_generate_mipmap @see https://www.khronos.org/registry/OpenGL/extensions/SGIS/SGIS_generate_mipmap.txt
- NV_blend_square @see https://www.khronos.org/registry/OpenGL/extensions/NV/NV_blend_square.txt
- ARB_depth_texture @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_depth_texture.txt
- ARB_shadow @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shadow.txt
- EXT_fog_coord @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_fog_coord.txt
- EXT_multi_draw_arrays @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_multi_draw_arrays.txt
- ARB_point_parameters @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_point_parameters.txt
- EXT_secondary_color @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_secondary_color.txt
- EXT_blend_func_separate @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_blend_func_separate.txt
- EXT_stencil_wrap @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_stencil_wrap.txt
- ARB_texture_env_crossbar @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_env_crossbar.txt
- EXT_texture_lod_bias @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_lod_bias.txt
- ARB_texture_mirrored_repeat @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_mirrored_repeat.txt
- ARB_window_pos @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_window_pos.txt',
        'constants' => [
            'GL_BLEND_DST_RGB'             => 32968,
            'GL_BLEND_SRC_RGB'             => 32969,
            'GL_BLEND_DST_ALPHA'           => 32970,
            'GL_BLEND_SRC_ALPHA'           => 32971,
            'GL_POINT_FADE_THRESHOLD_SIZE' => 33064,
            'GL_DEPTH_COMPONENT16'         => 33189,
            'GL_DEPTH_COMPONENT24'         => 33190,
            'GL_DEPTH_COMPONENT32'         => 33191,
            'GL_MIRRORED_REPEAT'           => 33648,
            'GL_MAX_TEXTURE_LOD_BIAS'      => 34045,
            'GL_TEXTURE_LOD_BIAS'          => 34049,
            'GL_INCR_WRAP'                 => 34055,
            'GL_DECR_WRAP'                 => 34056,
            'GL_TEXTURE_DEPTH_SIZE'        => 34890,
            'GL_TEXTURE_COMPARE_MODE'      => 34892,
            'GL_TEXTURE_COMPARE_FUNC'      => 34893,
            'GL_FUNC_ADD'                  => 32774,
            'GL_FUNC_SUBTRACT'             => 32778,
            'GL_FUNC_REVERSE_SUBTRACT'     => 32779,
            'GL_MIN'                       => 32775,
            'GL_MAX'                       => 32776,
            'GL_CONSTANT_COLOR'            => 32769,
            'GL_ONE_MINUS_CONSTANT_COLOR'  => 32770,
            'GL_CONSTANT_ALPHA'            => 32771,
            'GL_ONE_MINUS_CONSTANT_ALPHA'  => 32772,
        ],
        'methods'   => [
            'glBlendColor'        => [
                'virtual' => true,
                'name'    => 'blendColor',
                'type'    => 'void',
                'args'    => [
                    'red'   => 'GLfloat',
                    'green' => 'GLfloat',
                    'blue'  => 'GLfloat',
                    'alpha' => 'GLfloat',
                ],
            ],
            'glBlendEquation'     => [
                'virtual' => true,
                'name'    => 'blendEquation',
                'type'    => 'void',
                'args'    => [
                    'mode' => 'GLenum',
                ],
            ],
            'glBlendFuncSeparate' => [
                'virtual' => true,
                'name'    => 'blendFuncSeparate',
                'type'    => 'void',
                'args'    => [
                    'sfactorRGB'   => 'GLenum',
                    'dfactorRGB'   => 'GLenum',
                    'sfactorAlpha' => 'GLenum',
                    'dfactorAlpha' => 'GLenum',
                ],
            ],
            'glMultiDrawArrays'   => [
                'virtual' => true,
                'name'    => 'multiDrawArrays',
                'type'    => 'void',
                'args'    => [
                    'mode'      => 'GLenum',
                    'first'     => 'const GLint *',
                    'count'     => 'const GLsizei *',
                    'drawcount' => 'GLsizei',
                ],
            ],
            'glMultiDrawElements' => [
                'virtual' => true,
                'name'    => 'multiDrawElements',
                'type'    => 'void',
                'args'    => [
                    'mode'      => 'GLenum',
                    'count'     => 'const GLsizei *',
                    'type'      => 'GLenum',
                    'indices'   => 'const void *const *',
                    'drawcount' => 'GLsizei',
                ],
            ],
            'glPointParameterf'   => [
                'virtual' => true,
                'name'    => 'pointParameterf',
                'type'    => 'void',
                'args'    => [
                    'pname' => 'GLenum',
                    'param' => 'GLfloat',
                ],
            ],
            'glPointParameterfv'  => [
                'virtual' => true,
                'name'    => 'pointParameterfv',
                'type'    => 'void',
                'args'    => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLfloat *',
                ],
            ],
            'glPointParameteri'   => [
                'virtual' => true,
                'name'    => 'pointParameteri',
                'type'    => 'void',
                'args'    => [
                    'pname' => 'GLenum',
                    'param' => 'GLint',
                ],
            ],
            'glPointParameteriv'  => [
                'virtual' => true,
                'name'    => 'pointParameteriv',
                'type'    => 'void',
                'args'    => [
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
        ],
    ],
    'GL15' => [
        'name'      => 'Serafim\\OpenGL\\GL15',
        'extends'   => 'Serafim\\OpenGL\\GL14',
        'version'   => '1.5',
        'comment'   => 'The OpenGL functionality up to version 1.5. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:

- ARB_vertex_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_buffer_object.txt
- ARB_occlusion_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_occlusion_query.txt
- EXT_shadow_funcs @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_shadow_funcs.txt',
        'constants' => [
            'GL_BUFFER_SIZE'                        => 34660,
            'GL_BUFFER_USAGE'                       => 34661,
            'GL_QUERY_COUNTER_BITS'                 => 34916,
            'GL_CURRENT_QUERY'                      => 34917,
            'GL_QUERY_RESULT'                       => 34918,
            'GL_QUERY_RESULT_AVAILABLE'             => 34919,
            'GL_ARRAY_BUFFER'                       => 34962,
            'GL_ELEMENT_ARRAY_BUFFER'               => 34963,
            'GL_ARRAY_BUFFER_BINDING'               => 34964,
            'GL_ELEMENT_ARRAY_BUFFER_BINDING'       => 34965,
            'GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING' => 34975,
            'GL_READ_ONLY'                          => 35000,
            'GL_WRITE_ONLY'                         => 35001,
            'GL_READ_WRITE'                         => 35002,
            'GL_BUFFER_ACCESS'                      => 35003,
            'GL_BUFFER_MAPPED'                      => 35004,
            'GL_BUFFER_MAP_POINTER'                 => 35005,
            'GL_STREAM_DRAW'                        => 35040,
            'GL_STREAM_READ'                        => 35041,
            'GL_STREAM_COPY'                        => 35042,
            'GL_STATIC_DRAW'                        => 35044,
            'GL_STATIC_READ'                        => 35045,
            'GL_STATIC_COPY'                        => 35046,
            'GL_DYNAMIC_DRAW'                       => 35048,
            'GL_DYNAMIC_READ'                       => 35049,
            'GL_DYNAMIC_COPY'                       => 35050,
            'GL_SAMPLES_PASSED'                     => 35092,
            'GL_SRC1_ALPHA'                         => 34185,
        ],
        'methods'   => [
            'glBeginQuery'           => [
                'virtual' => true,
                'name'    => 'beginQuery',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'id'     => 'GLuint',
                ],
            ],
            'glBindBuffer'           => [
                'virtual' => true,
                'name'    => 'bindBuffer',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'buffer' => 'GLuint',
                ],
            ],
            'glBufferData'           => [
                'virtual' => true,
                'name'    => 'bufferData',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                    'usage'  => 'GLenum',
                ],
            ],
            'glBufferSubData'        => [
                'virtual' => true,
                'name'    => 'bufferSubData',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                ],
            ],
            'glDeleteBuffers'        => [
                'virtual' => true,
                'name'    => 'deleteBuffers',
                'type'    => 'void',
                'args'    => [
                    'n'       => 'GLsizei',
                    'buffers' => 'const GLuint *',
                ],
            ],
            'glDeleteQueries'        => [
                'virtual' => true,
                'name'    => 'deleteQueries',
                'type'    => 'void',
                'args'    => [
                    'n'   => 'GLsizei',
                    'ids' => 'const GLuint *',
                ],
            ],
            'glEndQuery'             => [
                'virtual' => true,
                'name'    => 'endQuery',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                ],
            ],
            'glGenBuffers'           => [
                'virtual' => true,
                'name'    => 'genBuffers',
                'type'    => 'void',
                'args'    => [
                    'n'       => 'GLsizei',
                    'buffers' => 'GLuint *',
                ],
            ],
            'glGenQueries'           => [
                'virtual' => true,
                'name'    => 'genQueries',
                'type'    => 'void',
                'args'    => [
                    'n'   => 'GLsizei',
                    'ids' => 'GLuint *',
                ],
            ],
            'glGetBufferParameteriv' => [
                'virtual' => true,
                'name'    => 'getBufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetBufferPointerv'    => [
                'virtual' => true,
                'name'    => 'getBufferPointerv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'void **',
                ],
            ],
            'glGetBufferSubData'     => [
                'virtual' => true,
                'name'    => 'getBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'void *',
                ],
            ],
            'glGetQueryObjectiv'     => [
                'virtual' => true,
                'name'    => 'getQueryObjectiv',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetQueryObjectuiv'    => [
                'virtual' => true,
                'name'    => 'getQueryObjectuiv',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLuint *',
                ],
            ],
            'glGetQueryiv'           => [
                'virtual' => true,
                'name'    => 'getQueryiv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glIsBuffer'             => [
                'virtual' => true,
                'name'    => 'isBuffer',
                'type'    => 'GLboolean',
                'args'    => [
                    'buffer' => 'GLuint',
                ],
            ],
            'glIsQuery'              => [
                'virtual' => true,
                'name'    => 'isQuery',
                'type'    => 'GLboolean',
                'args'    => [
                    'id' => 'GLuint',
                ],
            ],
            'glMapBuffer'            => [
                'virtual' => true,
                'name'    => 'mapBuffer',
                'type'    => 'void *',
                'args'    => [
                    'target' => 'GLenum',
                    'access' => 'GLenum',
                ],
            ],
            'glUnmapBuffer'          => [
                'virtual' => true,
                'name'    => 'unmapBuffer',
                'type'    => 'GLboolean',
                'args'    => [
                    'target' => 'GLenum',
                ],
            ],
        ],
    ],
    'GL20' => [
        'name'      => 'Serafim\\OpenGL\\GL20',
        'extends'   => 'Serafim\\OpenGL\\GL15',
        'version'   => '2.0',
        'comment'   => 'The OpenGL functionality up to version 2.0. Includes the deprecated symbols of the Compatibility Profile.

Extensions promoted to core in this release:

- ARB_shader_objects @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_objects.txt
- ARB_vertex_shader @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_shader.txt
- ARB_fragment_shader @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_fragment_shader.txt
- ARB_shading_language_100 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shading_language_100.txt
- ARB_draw_buffers @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_draw_buffers.txt
- ARB_texture_non_power_of_two @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_non_power_of_two.txt
- ARB_point_sprite @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_point_sprite.txt
- ATI_separate_stencil @see https://www.khronos.org/registry/OpenGL/extensions/ATI/ATI_separate_stencil.txt
- EXT_stencil_two_side @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_stencil_two_side.txt',
        'constants' => [
            'GL_BLEND_EQUATION_RGB'               => 32777,
            'GL_VERTEX_ATTRIB_ARRAY_ENABLED'      => 34338,
            'GL_VERTEX_ATTRIB_ARRAY_SIZE'         => 34339,
            'GL_VERTEX_ATTRIB_ARRAY_STRIDE'       => 34340,
            'GL_VERTEX_ATTRIB_ARRAY_TYPE'         => 34341,
            'GL_CURRENT_VERTEX_ATTRIB'            => 34342,
            'GL_VERTEX_PROGRAM_POINT_SIZE'        => 34370,
            'GL_VERTEX_ATTRIB_ARRAY_POINTER'      => 34373,
            'GL_STENCIL_BACK_FUNC'                => 34816,
            'GL_STENCIL_BACK_FAIL'                => 34817,
            'GL_STENCIL_BACK_PASS_DEPTH_FAIL'     => 34818,
            'GL_STENCIL_BACK_PASS_DEPTH_PASS'     => 34819,
            'GL_MAX_DRAW_BUFFERS'                 => 34852,
            'GL_DRAW_BUFFER0'                     => 34853,
            'GL_DRAW_BUFFER1'                     => 34854,
            'GL_DRAW_BUFFER2'                     => 34855,
            'GL_DRAW_BUFFER3'                     => 34856,
            'GL_DRAW_BUFFER4'                     => 34857,
            'GL_DRAW_BUFFER5'                     => 34858,
            'GL_DRAW_BUFFER6'                     => 34859,
            'GL_DRAW_BUFFER7'                     => 34860,
            'GL_DRAW_BUFFER8'                     => 34861,
            'GL_DRAW_BUFFER9'                     => 34862,
            'GL_DRAW_BUFFER10'                    => 34863,
            'GL_DRAW_BUFFER11'                    => 34864,
            'GL_DRAW_BUFFER12'                    => 34865,
            'GL_DRAW_BUFFER13'                    => 34866,
            'GL_DRAW_BUFFER14'                    => 34867,
            'GL_DRAW_BUFFER15'                    => 34868,
            'GL_BLEND_EQUATION_ALPHA'             => 34877,
            'GL_MAX_VERTEX_ATTRIBS'               => 34921,
            'GL_VERTEX_ATTRIB_ARRAY_NORMALIZED'   => 34922,
            'GL_MAX_TEXTURE_IMAGE_UNITS'          => 34930,
            'GL_FRAGMENT_SHADER'                  => 35632,
            'GL_VERTEX_SHADER'                    => 35633,
            'GL_MAX_FRAGMENT_UNIFORM_COMPONENTS'  => 35657,
            'GL_MAX_VERTEX_UNIFORM_COMPONENTS'    => 35658,
            'GL_MAX_VARYING_FLOATS'               => 35659,
            'GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS'   => 35660,
            'GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS' => 35661,
            'GL_SHADER_TYPE'                      => 35663,
            'GL_FLOAT_VEC2'                       => 35664,
            'GL_FLOAT_VEC3'                       => 35665,
            'GL_FLOAT_VEC4'                       => 35666,
            'GL_INT_VEC2'                         => 35667,
            'GL_INT_VEC3'                         => 35668,
            'GL_INT_VEC4'                         => 35669,
            'GL_BOOL'                             => 35670,
            'GL_BOOL_VEC2'                        => 35671,
            'GL_BOOL_VEC3'                        => 35672,
            'GL_BOOL_VEC4'                        => 35673,
            'GL_FLOAT_MAT2'                       => 35674,
            'GL_FLOAT_MAT3'                       => 35675,
            'GL_FLOAT_MAT4'                       => 35676,
            'GL_SAMPLER_1D'                       => 35677,
            'GL_SAMPLER_2D'                       => 35678,
            'GL_SAMPLER_3D'                       => 35679,
            'GL_SAMPLER_CUBE'                     => 35680,
            'GL_SAMPLER_1D_SHADOW'                => 35681,
            'GL_SAMPLER_2D_SHADOW'                => 35682,
            'GL_DELETE_STATUS'                    => 35712,
            'GL_COMPILE_STATUS'                   => 35713,
            'GL_LINK_STATUS'                      => 35714,
            'GL_VALIDATE_STATUS'                  => 35715,
            'GL_INFO_LOG_LENGTH'                  => 35716,
            'GL_ATTACHED_SHADERS'                 => 35717,
            'GL_ACTIVE_UNIFORMS'                  => 35718,
            'GL_ACTIVE_UNIFORM_MAX_LENGTH'        => 35719,
            'GL_SHADER_SOURCE_LENGTH'             => 35720,
            'GL_ACTIVE_ATTRIBUTES'                => 35721,
            'GL_ACTIVE_ATTRIBUTE_MAX_LENGTH'      => 35722,
            'GL_FRAGMENT_SHADER_DERIVATIVE_HINT'  => 35723,
            'GL_SHADING_LANGUAGE_VERSION'         => 35724,
            'GL_CURRENT_PROGRAM'                  => 35725,
            'GL_POINT_SPRITE_COORD_ORIGIN'        => 36000,
            'GL_LOWER_LEFT'                       => 36001,
            'GL_UPPER_LEFT'                       => 36002,
            'GL_STENCIL_BACK_REF'                 => 36003,
            'GL_STENCIL_BACK_VALUE_MASK'          => 36004,
            'GL_STENCIL_BACK_WRITEMASK'           => 36005,
        ],
        'methods'   => [
            'glAttachShader'             => [
                'virtual' => true,
                'name'    => 'attachShader',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'shader'  => 'GLuint',
                ],
            ],
            'glBindAttribLocation'       => [
                'virtual' => true,
                'name'    => 'bindAttribLocation',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'index'   => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glBlendEquationSeparate'    => [
                'virtual' => true,
                'name'    => 'blendEquationSeparate',
                'type'    => 'void',
                'args'    => [
                    'modeRGB'   => 'GLenum',
                    'modeAlpha' => 'GLenum',
                ],
            ],
            'glCompileShader'            => [
                'virtual' => true,
                'name'    => 'compileShader',
                'type'    => 'void',
                'args'    => [
                    'shader' => 'GLuint',
                ],
            ],
            'glCreateProgram'            => [
                'virtual' => true,
                'name'    => 'createProgram',
                'type'    => 'GLuint',
                'args'    => [
                ],
            ],
            'glCreateShader'             => [
                'virtual' => true,
                'name'    => 'createShader',
                'type'    => 'GLuint',
                'args'    => [
                    'type' => 'GLenum',
                ],
            ],
            'glDeleteProgram'            => [
                'virtual' => true,
                'name'    => 'deleteProgram',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                ],
            ],
            'glDeleteShader'             => [
                'virtual' => true,
                'name'    => 'deleteShader',
                'type'    => 'void',
                'args'    => [
                    'shader' => 'GLuint',
                ],
            ],
            'glDetachShader'             => [
                'virtual' => true,
                'name'    => 'detachShader',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'shader'  => 'GLuint',
                ],
            ],
            'glDisableVertexAttribArray' => [
                'virtual' => true,
                'name'    => 'disableVertexAttribArray',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                ],
            ],
            'glDrawBuffers'              => [
                'virtual' => true,
                'name'    => 'drawBuffers',
                'type'    => 'void',
                'args'    => [
                    'n'    => 'GLsizei',
                    'bufs' => 'const GLenum *',
                ],
            ],
            'glEnableVertexAttribArray'  => [
                'virtual' => true,
                'name'    => 'enableVertexAttribArray',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                ],
            ],
            'glGetActiveAttrib'          => [
                'virtual' => true,
                'name'    => 'getActiveAttrib',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'index'   => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'size'    => 'GLint *',
                    'type'    => 'GLenum *',
                    'name'    => 'GLchar *',
                ],
            ],
            'glGetActiveUniform'         => [
                'virtual' => true,
                'name'    => 'getActiveUniform',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'index'   => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'size'    => 'GLint *',
                    'type'    => 'GLenum *',
                    'name'    => 'GLchar *',
                ],
            ],
            'glGetAttachedShaders'       => [
                'virtual' => true,
                'name'    => 'getAttachedShaders',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'maxCount' => 'GLsizei',
                    'count'    => 'GLsizei *',
                    'shaders'  => 'GLuint *',
                ],
            ],
            'glGetAttribLocation'        => [
                'virtual' => true,
                'name'    => 'getAttribLocation',
                'type'    => 'GLint',
                'args'    => [
                    'program' => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glGetProgramInfoLog'        => [
                'virtual' => true,
                'name'    => 'getProgramInfoLog',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'infoLog' => 'GLchar *',
                ],
            ],
            'glGetProgramiv'             => [
                'virtual' => true,
                'name'    => 'getProgramiv',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glGetShaderInfoLog'         => [
                'virtual' => true,
                'name'    => 'getShaderInfoLog',
                'type'    => 'void',
                'args'    => [
                    'shader'  => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'infoLog' => 'GLchar *',
                ],
            ],
            'glGetShaderSource'          => [
                'virtual' => true,
                'name'    => 'getShaderSource',
                'type'    => 'void',
                'args'    => [
                    'shader'  => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'source'  => 'GLchar *',
                ],
            ],
            'glGetShaderiv'              => [
                'virtual' => true,
                'name'    => 'getShaderiv',
                'type'    => 'void',
                'args'    => [
                    'shader' => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetUniformLocation'       => [
                'virtual' => true,
                'name'    => 'getUniformLocation',
                'type'    => 'GLint',
                'args'    => [
                    'program' => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glGetUniformfv'             => [
                'virtual' => true,
                'name'    => 'getUniformfv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'params'   => 'GLfloat *',
                ],
            ],
            'glGetUniformiv'             => [
                'virtual' => true,
                'name'    => 'getUniformiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'params'   => 'GLint *',
                ],
            ],
            'glGetVertexAttribPointerv'  => [
                'virtual' => true,
                'name'    => 'getVertexAttribPointerv',
                'type'    => 'void',
                'args'    => [
                    'index'   => 'GLuint',
                    'pname'   => 'GLenum',
                    'pointer' => 'void **',
                ],
            ],
            'glGetVertexAttribdv'        => [
                'virtual' => true,
                'name'    => 'getVertexAttribdv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLdouble *',
                ],
            ],
            'glGetVertexAttribfv'        => [
                'virtual' => true,
                'name'    => 'getVertexAttribfv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLfloat *',
                ],
            ],
            'glGetVertexAttribiv'        => [
                'virtual' => true,
                'name'    => 'getVertexAttribiv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glIsProgram'                => [
                'virtual' => true,
                'name'    => 'isProgram',
                'type'    => 'GLboolean',
                'args'    => [
                    'program' => 'GLuint',
                ],
            ],
            'glIsShader'                 => [
                'virtual' => true,
                'name'    => 'isShader',
                'type'    => 'GLboolean',
                'args'    => [
                    'shader' => 'GLuint',
                ],
            ],
            'glLinkProgram'              => [
                'virtual' => true,
                'name'    => 'linkProgram',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                ],
            ],
            'glShaderSource'             => [
                'virtual' => true,
                'name'    => 'shaderSource',
                'type'    => 'void',
                'args'    => [
                    'shader' => 'GLuint',
                    'count'  => 'GLsizei',
                    'string' => 'const GLchar *const *',
                    'length' => 'const GLint *',
                ],
            ],
            'glStencilFuncSeparate'      => [
                'virtual' => true,
                'name'    => 'stencilFuncSeparate',
                'type'    => 'void',
                'args'    => [
                    'face' => 'GLenum',
                    'func' => 'GLenum',
                    'ref'  => 'GLint',
                    'mask' => 'GLuint',
                ],
            ],
            'glStencilMaskSeparate'      => [
                'virtual' => true,
                'name'    => 'stencilMaskSeparate',
                'type'    => 'void',
                'args'    => [
                    'face' => 'GLenum',
                    'mask' => 'GLuint',
                ],
            ],
            'glStencilOpSeparate'        => [
                'virtual' => true,
                'name'    => 'stencilOpSeparate',
                'type'    => 'void',
                'args'    => [
                    'face'   => 'GLenum',
                    'sfail'  => 'GLenum',
                    'dpfail' => 'GLenum',
                    'dppass' => 'GLenum',
                ],
            ],
            'glUniform1f'                => [
                'virtual' => true,
                'name'    => 'uniform1f',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                ],
            ],
            'glUniform1fv'               => [
                'virtual' => true,
                'name'    => 'uniform1fv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glUniform1i'                => [
                'virtual' => true,
                'name'    => 'uniform1i',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                ],
            ],
            'glUniform1iv'               => [
                'virtual' => true,
                'name'    => 'uniform1iv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glUniform2f'                => [
                'virtual' => true,
                'name'    => 'uniform2f',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                ],
            ],
            'glUniform2fv'               => [
                'virtual' => true,
                'name'    => 'uniform2fv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glUniform2i'                => [
                'virtual' => true,
                'name'    => 'uniform2i',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                ],
            ],
            'glUniform2iv'               => [
                'virtual' => true,
                'name'    => 'uniform2iv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glUniform3f'                => [
                'virtual' => true,
                'name'    => 'uniform3f',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                    'v2'       => 'GLfloat',
                ],
            ],
            'glUniform3fv'               => [
                'virtual' => true,
                'name'    => 'uniform3fv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glUniform3i'                => [
                'virtual' => true,
                'name'    => 'uniform3i',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                    'v2'       => 'GLint',
                ],
            ],
            'glUniform3iv'               => [
                'virtual' => true,
                'name'    => 'uniform3iv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glUniform4f'                => [
                'virtual' => true,
                'name'    => 'uniform4f',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                    'v2'       => 'GLfloat',
                    'v3'       => 'GLfloat',
                ],
            ],
            'glUniform4fv'               => [
                'virtual' => true,
                'name'    => 'uniform4fv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glUniform4i'                => [
                'virtual' => true,
                'name'    => 'uniform4i',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                    'v2'       => 'GLint',
                    'v3'       => 'GLint',
                ],
            ],
            'glUniform4iv'               => [
                'virtual' => true,
                'name'    => 'uniform4iv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glUniformMatrix2fv'         => [
                'virtual' => true,
                'name'    => 'uniformMatrix2fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix3fv'         => [
                'virtual' => true,
                'name'    => 'uniformMatrix3fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix4fv'         => [
                'virtual' => true,
                'name'    => 'uniformMatrix4fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUseProgram'               => [
                'virtual' => true,
                'name'    => 'useProgram',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                ],
            ],
            'glValidateProgram'          => [
                'virtual' => true,
                'name'    => 'validateProgram',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                ],
            ],
            'glVertexAttrib1d'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib1d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                ],
            ],
            'glVertexAttrib1dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib1dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttrib1f'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib1f',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLfloat',
                ],
            ],
            'glVertexAttrib1fv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib1fv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLfloat *',
                ],
            ],
            'glVertexAttrib1s'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib1s',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLshort',
                ],
            ],
            'glVertexAttrib1sv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib1sv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttrib2d'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib2d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                ],
            ],
            'glVertexAttrib2dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib2dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttrib2f'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib2f',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLfloat',
                    'y'     => 'GLfloat',
                ],
            ],
            'glVertexAttrib2fv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib2fv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLfloat *',
                ],
            ],
            'glVertexAttrib2s'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib2s',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLshort',
                    'y'     => 'GLshort',
                ],
            ],
            'glVertexAttrib2sv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib2sv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttrib3d'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib3d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                    'z'     => 'GLdouble',
                ],
            ],
            'glVertexAttrib3dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib3dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttrib3f'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib3f',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLfloat',
                    'y'     => 'GLfloat',
                    'z'     => 'GLfloat',
                ],
            ],
            'glVertexAttrib3fv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib3fv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLfloat *',
                ],
            ],
            'glVertexAttrib3s'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib3s',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLshort',
                    'y'     => 'GLshort',
                    'z'     => 'GLshort',
                ],
            ],
            'glVertexAttrib3sv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib3sv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttrib4Nbv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nbv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLbyte *',
                ],
            ],
            'glVertexAttrib4Niv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Niv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttrib4Nsv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nsv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttrib4Nub'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nub',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLubyte',
                    'y'     => 'GLubyte',
                    'z'     => 'GLubyte',
                    'w'     => 'GLubyte',
                ],
            ],
            'glVertexAttrib4Nubv'        => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nubv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLubyte *',
                ],
            ],
            'glVertexAttrib4Nuiv'        => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nuiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttrib4Nusv'        => [
                'virtual' => true,
                'name'    => 'vertexAttrib4Nusv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLushort *',
                ],
            ],
            'glVertexAttrib4bv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib4bv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLbyte *',
                ],
            ],
            'glVertexAttrib4d'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib4d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                    'z'     => 'GLdouble',
                    'w'     => 'GLdouble',
                ],
            ],
            'glVertexAttrib4dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib4dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttrib4f'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib4f',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLfloat',
                    'y'     => 'GLfloat',
                    'z'     => 'GLfloat',
                    'w'     => 'GLfloat',
                ],
            ],
            'glVertexAttrib4fv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib4fv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLfloat *',
                ],
            ],
            'glVertexAttrib4iv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib4iv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttrib4s'           => [
                'virtual' => true,
                'name'    => 'vertexAttrib4s',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLshort',
                    'y'     => 'GLshort',
                    'z'     => 'GLshort',
                    'w'     => 'GLshort',
                ],
            ],
            'glVertexAttrib4sv'          => [
                'virtual' => true,
                'name'    => 'vertexAttrib4sv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttrib4ubv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4ubv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLubyte *',
                ],
            ],
            'glVertexAttrib4uiv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4uiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttrib4usv'         => [
                'virtual' => true,
                'name'    => 'vertexAttrib4usv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLushort *',
                ],
            ],
            'glVertexAttribPointer'      => [
                'virtual' => true,
                'name'    => 'vertexAttribPointer',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'size'       => 'GLint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'stride'     => 'GLsizei',
                    'pointer'    => 'const void *',
                ],
            ],
        ],
    ],
    'GL21' => [
        'name'      => 'Serafim\\OpenGL\\GL21',
        'extends'   => 'Serafim\\OpenGL\\GL20',
        'version'   => '2.1',
        'comment'   => 'The OpenGL functionality up to version 2.1. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 2.1 implementations must support at least revision 1.20 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_pixel_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_pixel_buffer_object.txt
- EXT_texture_sRGB @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_sRGB.txt',
        'constants' => [
            'GL_PIXEL_PACK_BUFFER'           => 35051,
            'GL_PIXEL_UNPACK_BUFFER'         => 35052,
            'GL_PIXEL_PACK_BUFFER_BINDING'   => 35053,
            'GL_PIXEL_UNPACK_BUFFER_BINDING' => 35055,
            'GL_FLOAT_MAT2x3'                => 35685,
            'GL_FLOAT_MAT2x4'                => 35686,
            'GL_FLOAT_MAT3x2'                => 35687,
            'GL_FLOAT_MAT3x4'                => 35688,
            'GL_FLOAT_MAT4x2'                => 35689,
            'GL_FLOAT_MAT4x3'                => 35690,
            'GL_SRGB'                        => 35904,
            'GL_SRGB8'                       => 35905,
            'GL_SRGB_ALPHA'                  => 35906,
            'GL_SRGB8_ALPHA8'                => 35907,
            'GL_COMPRESSED_SRGB'             => 35912,
            'GL_COMPRESSED_SRGB_ALPHA'       => 35913,
        ],
        'methods'   => [
            'glUniformMatrix2x3fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix2x3fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix2x4fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix2x4fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix3x2fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix3x2fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix3x4fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix3x4fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix4x2fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix4x2fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glUniformMatrix4x3fv' => [
                'virtual' => true,
                'name'    => 'uniformMatrix4x3fv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
        ],
    ],
    'GL30' => [
        'name'      => 'Serafim\\OpenGL\\GL30',
        'extends'   => 'Serafim\\OpenGL\\GL21',
        'version'   => '3.0',
        'comment'   => 'The OpenGL functionality up to version 3.0. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 3.0 implementations are guaranteed to support at least versions 1.10, 1.20 and 1.30 of the shading language,
although versions 1.10 and 1.20 are deprecated in a forward-compatible context.

Extensions promoted to core in this release:

- EXT_gpu_shader4 @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_gpu_shader4.txt
- NV_conditional_render @see https://www.khronos.org/registry/OpenGL/extensions/NV/NV_conditional_render.txt
- APPLE_flush_buffer_range @see https://www.khronos.org/registry/OpenGL/extensions/APPLE/APPLE_flush_buffer_range.txt
- ARB_color_buffer_float @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_color_buffer_float.txt
- NV_depth_buffer_float @see https://www.khronos.org/registry/OpenGL/extensions/NV/NV_depth_buffer_float.txt
- ARB_texture_float @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_float.txt
- EXT_packed_float @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_packed_float.txt
- EXT_texture_shared_exponent @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_shared_exponent.txt
- EXT_framebuffer_object @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_framebuffer_object.txt
- NV_half_float](https://www.khronos.org/registry/OpenGL/extensions/NV/NV_half_float.txt
- ARB_half_FLOAT_pixel @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_half_FLOAT_pixel.txt
- EXT_framebuffer_multisample](https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_framebuffer_multisample.txt
- EXT_framebuffer_blit @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_framebuffer_blit.txt
- EXT_texture_integer @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_integer.txt
- EXT_texture_array @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_array.txt
- EXT_packed_depth_stencil @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_packed_depth_stencil.txt
- EXT_draw_buffers2 @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_draw_buffers2.txt
- EXT_texture_compression_rgtc @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_rgtc.txt
- EXT_transform_feedback @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_transform_feedback.txt
- APPLE_vertex_array_object @see https://www.khronos.org/registry/OpenGL/extensions/APPLE/APPLE_vertex_array_object.txt
- EXT_framebuffer_sRGB @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_framebuffer_sRGB.txt',
        'constants' => [
            'GL_COMPARE_REF_TO_TEXTURE'                        => 34894,
            'GL_CLIP_DISTANCE0'                                => 12288,
            'GL_CLIP_DISTANCE1'                                => 12289,
            'GL_CLIP_DISTANCE2'                                => 12290,
            'GL_CLIP_DISTANCE3'                                => 12291,
            'GL_CLIP_DISTANCE4'                                => 12292,
            'GL_CLIP_DISTANCE5'                                => 12293,
            'GL_CLIP_DISTANCE6'                                => 12294,
            'GL_CLIP_DISTANCE7'                                => 12295,
            'GL_MAX_CLIP_DISTANCES'                            => 3378,
            'GL_MAJOR_VERSION'                                 => 33307,
            'GL_MINOR_VERSION'                                 => 33308,
            'GL_NUM_EXTENSIONS'                                => 33309,
            'GL_CONTEXT_FLAGS'                                 => 33310,
            'GL_COMPRESSED_RED'                                => 33317,
            'GL_COMPRESSED_RG'                                 => 33318,
            'GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT'           => 1,
            'GL_RGBA32F'                                       => 34836,
            'GL_RGB32F'                                        => 34837,
            'GL_RGBA16F'                                       => 34842,
            'GL_RGB16F'                                        => 34843,
            'GL_VERTEX_ATTRIB_ARRAY_INTEGER'                   => 35069,
            'GL_MAX_ARRAY_TEXTURE_LAYERS'                      => 35071,
            'GL_MIN_PROGRAM_TEXEL_OFFSET'                      => 35076,
            'GL_MAX_PROGRAM_TEXEL_OFFSET'                      => 35077,
            'GL_CLAMP_READ_COLOR'                              => 35100,
            'GL_FIXED_ONLY'                                    => 35101,
            'GL_MAX_VARYING_COMPONENTS'                        => 35659,
            'GL_TEXTURE_1D_ARRAY'                              => 35864,
            'GL_PROXY_TEXTURE_1D_ARRAY'                        => 35865,
            'GL_TEXTURE_2D_ARRAY'                              => 35866,
            'GL_PROXY_TEXTURE_2D_ARRAY'                        => 35867,
            'GL_TEXTURE_BINDING_1D_ARRAY'                      => 35868,
            'GL_TEXTURE_BINDING_2D_ARRAY'                      => 35869,
            'GL_R11F_G11F_B10F'                                => 35898,
            'GL_UNSIGNED_INT_10F_11F_11F_REV'                  => 35899,
            'GL_RGB9_E5'                                       => 35901,
            'GL_UNSIGNED_INT_5_9_9_9_REV'                      => 35902,
            'GL_TEXTURE_SHARED_SIZE'                           => 35903,
            'GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH'         => 35958,
            'GL_TRANSFORM_FEEDBACK_BUFFER_MODE'                => 35967,
            'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS'    => 35968,
            'GL_TRANSFORM_FEEDBACK_VARYINGS'                   => 35971,
            'GL_TRANSFORM_FEEDBACK_BUFFER_START'               => 35972,
            'GL_TRANSFORM_FEEDBACK_BUFFER_SIZE'                => 35973,
            'GL_PRIMITIVES_GENERATED'                          => 35975,
            'GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN'         => 35976,
            'GL_RASTERIZER_DISCARD'                            => 35977,
            'GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS' => 35978,
            'GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS'       => 35979,
            'GL_INTERLEAVED_ATTRIBS'                           => 35980,
            'GL_SEPARATE_ATTRIBS'                              => 35981,
            'GL_TRANSFORM_FEEDBACK_BUFFER'                     => 35982,
            'GL_TRANSFORM_FEEDBACK_BUFFER_BINDING'             => 35983,
            'GL_RGBA32UI'                                      => 36208,
            'GL_RGB32UI'                                       => 36209,
            'GL_RGBA16UI'                                      => 36214,
            'GL_RGB16UI'                                       => 36215,
            'GL_RGBA8UI'                                       => 36220,
            'GL_RGB8UI'                                        => 36221,
            'GL_RGBA32I'                                       => 36226,
            'GL_RGB32I'                                        => 36227,
            'GL_RGBA16I'                                       => 36232,
            'GL_RGB16I'                                        => 36233,
            'GL_RGBA8I'                                        => 36238,
            'GL_RGB8I'                                         => 36239,
            'GL_RED_INTEGER'                                   => 36244,
            'GL_GREEN_INTEGER'                                 => 36245,
            'GL_BLUE_INTEGER'                                  => 36246,
            'GL_RGB_INTEGER'                                   => 36248,
            'GL_RGBA_INTEGER'                                  => 36249,
            'GL_BGR_INTEGER'                                   => 36250,
            'GL_BGRA_INTEGER'                                  => 36251,
            'GL_SAMPLER_1D_ARRAY'                              => 36288,
            'GL_SAMPLER_2D_ARRAY'                              => 36289,
            'GL_SAMPLER_1D_ARRAY_SHADOW'                       => 36291,
            'GL_SAMPLER_2D_ARRAY_SHADOW'                       => 36292,
            'GL_SAMPLER_CUBE_SHADOW'                           => 36293,
            'GL_UNSIGNED_INT_VEC2'                             => 36294,
            'GL_UNSIGNED_INT_VEC3'                             => 36295,
            'GL_UNSIGNED_INT_VEC4'                             => 36296,
            'GL_INT_SAMPLER_1D'                                => 36297,
            'GL_INT_SAMPLER_2D'                                => 36298,
            'GL_INT_SAMPLER_3D'                                => 36299,
            'GL_INT_SAMPLER_CUBE'                              => 36300,
            'GL_INT_SAMPLER_1D_ARRAY'                          => 36302,
            'GL_INT_SAMPLER_2D_ARRAY'                          => 36303,
            'GL_UNSIGNED_INT_SAMPLER_1D'                       => 36305,
            'GL_UNSIGNED_INT_SAMPLER_2D'                       => 36306,
            'GL_UNSIGNED_INT_SAMPLER_3D'                       => 36307,
            'GL_UNSIGNED_INT_SAMPLER_CUBE'                     => 36308,
            'GL_UNSIGNED_INT_SAMPLER_1D_ARRAY'                 => 36310,
            'GL_UNSIGNED_INT_SAMPLER_2D_ARRAY'                 => 36311,
            'GL_QUERY_WAIT'                                    => 36371,
            'GL_QUERY_NO_WAIT'                                 => 36372,
            'GL_QUERY_BY_REGION_WAIT'                          => 36373,
            'GL_QUERY_BY_REGION_NO_WAIT'                       => 36374,
            'GL_BUFFER_ACCESS_FLAGS'                           => 37151,
            'GL_BUFFER_MAP_LENGTH'                             => 37152,
            'GL_BUFFER_MAP_OFFSET'                             => 37153,
            'GL_DEPTH_COMPONENT32F'                            => 36012,
            'GL_DEPTH32F_STENCIL8'                             => 36013,
            'GL_FLOAT_32_UNSIGNED_INT_24_8_REV'                => 36269,
            'GL_INVALID_FRAMEBUFFER_OPERATION'                 => 1286,
            'GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING'         => 33296,
            'GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE'         => 33297,
            'GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE'               => 33298,
            'GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE'             => 33299,
            'GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE'              => 33300,
            'GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE'             => 33301,
            'GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE'             => 33302,
            'GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE'           => 33303,
            'GL_FRAMEBUFFER_DEFAULT'                           => 33304,
            'GL_FRAMEBUFFER_UNDEFINED'                         => 33305,
            'GL_DEPTH_STENCIL_ATTACHMENT'                      => 33306,
            'GL_MAX_RENDERBUFFER_SIZE'                         => 34024,
            'GL_DEPTH_STENCIL'                                 => 34041,
            'GL_UNSIGNED_INT_24_8'                             => 34042,
            'GL_DEPTH24_STENCIL8'                              => 35056,
            'GL_TEXTURE_STENCIL_SIZE'                          => 35057,
            'GL_TEXTURE_RED_TYPE'                              => 35856,
            'GL_TEXTURE_GREEN_TYPE'                            => 35857,
            'GL_TEXTURE_BLUE_TYPE'                             => 35858,
            'GL_TEXTURE_ALPHA_TYPE'                            => 35859,
            'GL_TEXTURE_DEPTH_TYPE'                            => 35862,
            'GL_UNSIGNED_NORMALIZED'                           => 35863,
            'GL_FRAMEBUFFER_BINDING'                           => 36006,
            'GL_DRAW_FRAMEBUFFER_BINDING'                      => 36006,
            'GL_RENDERBUFFER_BINDING'                          => 36007,
            'GL_READ_FRAMEBUFFER'                              => 36008,
            'GL_DRAW_FRAMEBUFFER'                              => 36009,
            'GL_READ_FRAMEBUFFER_BINDING'                      => 36010,
            'GL_RENDERBUFFER_SAMPLES'                          => 36011,
            'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE'            => 36048,
            'GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME'            => 36049,
            'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL'          => 36050,
            'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE'  => 36051,
            'GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER'          => 36052,
            'GL_FRAMEBUFFER_COMPLETE'                          => 36053,
            'GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT'             => 36054,
            'GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT'     => 36055,
            'GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER'            => 36059,
            'GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER'            => 36060,
            'GL_FRAMEBUFFER_UNSUPPORTED'                       => 36061,
            'GL_MAX_COLOR_ATTACHMENTS'                         => 36063,
            'GL_COLOR_ATTACHMENT0'                             => 36064,
            'GL_COLOR_ATTACHMENT1'                             => 36065,
            'GL_COLOR_ATTACHMENT2'                             => 36066,
            'GL_COLOR_ATTACHMENT3'                             => 36067,
            'GL_COLOR_ATTACHMENT4'                             => 36068,
            'GL_COLOR_ATTACHMENT5'                             => 36069,
            'GL_COLOR_ATTACHMENT6'                             => 36070,
            'GL_COLOR_ATTACHMENT7'                             => 36071,
            'GL_COLOR_ATTACHMENT8'                             => 36072,
            'GL_COLOR_ATTACHMENT9'                             => 36073,
            'GL_COLOR_ATTACHMENT10'                            => 36074,
            'GL_COLOR_ATTACHMENT11'                            => 36075,
            'GL_COLOR_ATTACHMENT12'                            => 36076,
            'GL_COLOR_ATTACHMENT13'                            => 36077,
            'GL_COLOR_ATTACHMENT14'                            => 36078,
            'GL_COLOR_ATTACHMENT15'                            => 36079,
            'GL_COLOR_ATTACHMENT16'                            => 36080,
            'GL_COLOR_ATTACHMENT17'                            => 36081,
            'GL_COLOR_ATTACHMENT18'                            => 36082,
            'GL_COLOR_ATTACHMENT19'                            => 36083,
            'GL_COLOR_ATTACHMENT20'                            => 36084,
            'GL_COLOR_ATTACHMENT21'                            => 36085,
            'GL_COLOR_ATTACHMENT22'                            => 36086,
            'GL_COLOR_ATTACHMENT23'                            => 36087,
            'GL_COLOR_ATTACHMENT24'                            => 36088,
            'GL_COLOR_ATTACHMENT25'                            => 36089,
            'GL_COLOR_ATTACHMENT26'                            => 36090,
            'GL_COLOR_ATTACHMENT27'                            => 36091,
            'GL_COLOR_ATTACHMENT28'                            => 36092,
            'GL_COLOR_ATTACHMENT29'                            => 36093,
            'GL_COLOR_ATTACHMENT30'                            => 36094,
            'GL_COLOR_ATTACHMENT31'                            => 36095,
            'GL_DEPTH_ATTACHMENT'                              => 36096,
            'GL_STENCIL_ATTACHMENT'                            => 36128,
            'GL_FRAMEBUFFER'                                   => 36160,
            'GL_RENDERBUFFER'                                  => 36161,
            'GL_RENDERBUFFER_WIDTH'                            => 36162,
            'GL_RENDERBUFFER_HEIGHT'                           => 36163,
            'GL_RENDERBUFFER_INTERNAL_FORMAT'                  => 36164,
            'GL_STENCIL_INDEX1'                                => 36166,
            'GL_STENCIL_INDEX4'                                => 36167,
            'GL_STENCIL_INDEX8'                                => 36168,
            'GL_STENCIL_INDEX16'                               => 36169,
            'GL_RENDERBUFFER_RED_SIZE'                         => 36176,
            'GL_RENDERBUFFER_GREEN_SIZE'                       => 36177,
            'GL_RENDERBUFFER_BLUE_SIZE'                        => 36178,
            'GL_RENDERBUFFER_ALPHA_SIZE'                       => 36179,
            'GL_RENDERBUFFER_DEPTH_SIZE'                       => 36180,
            'GL_RENDERBUFFER_STENCIL_SIZE'                     => 36181,
            'GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE'            => 36182,
            'GL_MAX_SAMPLES'                                   => 36183,
            'GL_FRAMEBUFFER_SRGB'                              => 36281,
            'GL_HALF_FLOAT'                                    => 5131,
            'GL_MAP_READ_BIT'                                  => 1,
            'GL_MAP_WRITE_BIT'                                 => 2,
            'GL_MAP_INVALIDATE_RANGE_BIT'                      => 4,
            'GL_MAP_INVALIDATE_BUFFER_BIT'                     => 8,
            'GL_MAP_FLUSH_EXPLICIT_BIT'                        => 16,
            'GL_MAP_UNSYNCHRONIZED_BIT'                        => 32,
            'GL_COMPRESSED_RED_RGTC1'                          => 36283,
            'GL_COMPRESSED_SIGNED_RED_RGTC1'                   => 36284,
            'GL_COMPRESSED_RG_RGTC2'                           => 36285,
            'GL_COMPRESSED_SIGNED_RG_RGTC2'                    => 36286,
            'GL_RG'                                            => 33319,
            'GL_RG_INTEGER'                                    => 33320,
            'GL_R8'                                            => 33321,
            'GL_R16'                                           => 33322,
            'GL_RG8'                                           => 33323,
            'GL_RG16'                                          => 33324,
            'GL_R16F'                                          => 33325,
            'GL_R32F'                                          => 33326,
            'GL_RG16F'                                         => 33327,
            'GL_RG32F'                                         => 33328,
            'GL_R8I'                                           => 33329,
            'GL_R8UI'                                          => 33330,
            'GL_R16I'                                          => 33331,
            'GL_R16UI'                                         => 33332,
            'GL_R32I'                                          => 33333,
            'GL_R32UI'                                         => 33334,
            'GL_RG8I'                                          => 33335,
            'GL_RG8UI'                                         => 33336,
            'GL_RG16I'                                         => 33337,
            'GL_RG16UI'                                        => 33338,
            'GL_RG32I'                                         => 33339,
            'GL_RG32UI'                                        => 33340,
            'GL_VERTEX_ARRAY_BINDING'                          => 34229,
        ],
        'methods'   => [
            'glBeginConditionalRender'              => [
                'virtual' => true,
                'name'    => 'beginConditionalRender',
                'type'    => 'void',
                'args'    => [
                    'id'   => 'GLuint',
                    'mode' => 'GLenum',
                ],
            ],
            'glBeginTransformFeedback'              => [
                'virtual' => true,
                'name'    => 'beginTransformFeedback',
                'type'    => 'void',
                'args'    => [
                    'primitiveMode' => 'GLenum',
                ],
            ],
            'glBindBufferBase'                      => [
                'virtual' => true,
                'name'    => 'bindBufferBase',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'buffer' => 'GLuint',
                ],
            ],
            'glBindBufferRange'                     => [
                'virtual' => true,
                'name'    => 'bindBufferRange',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                ],
            ],
            'glBindFragDataLocation'                => [
                'virtual' => true,
                'name'    => 'bindFragDataLocation',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'color'   => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glBindFramebuffer'                     => [
                'virtual' => true,
                'name'    => 'bindFramebuffer',
                'type'    => 'void',
                'args'    => [
                    'target'      => 'GLenum',
                    'framebuffer' => 'GLuint',
                ],
            ],
            'glBindRenderbuffer'                    => [
                'virtual' => true,
                'name'    => 'bindRenderbuffer',
                'type'    => 'void',
                'args'    => [
                    'target'       => 'GLenum',
                    'renderbuffer' => 'GLuint',
                ],
            ],
            'glBindVertexArray'                     => [
                'virtual' => true,
                'name'    => 'bindVertexArray',
                'type'    => 'void',
                'args'    => [
                    'array' => 'GLuint',
                ],
            ],
            'glBlitFramebuffer'                     => [
                'virtual' => true,
                'name'    => 'blitFramebuffer',
                'type'    => 'void',
                'args'    => [
                    'srcX0'  => 'GLint',
                    'srcY0'  => 'GLint',
                    'srcX1'  => 'GLint',
                    'srcY1'  => 'GLint',
                    'dstX0'  => 'GLint',
                    'dstY0'  => 'GLint',
                    'dstX1'  => 'GLint',
                    'dstY1'  => 'GLint',
                    'mask'   => 'GLbitfield',
                    'filter' => 'GLenum',
                ],
            ],
            'glCheckFramebufferStatus'              => [
                'virtual' => true,
                'name'    => 'checkFramebufferStatus',
                'type'    => 'GLenum',
                'args'    => [
                    'target' => 'GLenum',
                ],
            ],
            'glClampColor'                          => [
                'virtual' => true,
                'name'    => 'clampColor',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'clamp'  => 'GLenum',
                ],
            ],
            'glClearBufferfi'                       => [
                'virtual' => true,
                'name'    => 'clearBufferfi',
                'type'    => 'void',
                'args'    => [
                    'buffer'     => 'GLenum',
                    'drawbuffer' => 'GLint',
                    'depth'      => 'GLfloat',
                    'stencil'    => 'GLint',
                ],
            ],
            'glClearBufferfv'                       => [
                'virtual' => true,
                'name'    => 'clearBufferfv',
                'type'    => 'void',
                'args'    => [
                    'buffer'     => 'GLenum',
                    'drawbuffer' => 'GLint',
                    'value'      => 'const GLfloat *',
                ],
            ],
            'glClearBufferiv'                       => [
                'virtual' => true,
                'name'    => 'clearBufferiv',
                'type'    => 'void',
                'args'    => [
                    'buffer'     => 'GLenum',
                    'drawbuffer' => 'GLint',
                    'value'      => 'const GLint *',
                ],
            ],
            'glClearBufferuiv'                      => [
                'virtual' => true,
                'name'    => 'clearBufferuiv',
                'type'    => 'void',
                'args'    => [
                    'buffer'     => 'GLenum',
                    'drawbuffer' => 'GLint',
                    'value'      => 'const GLuint *',
                ],
            ],
            'glColorMaski'                          => [
                'virtual' => true,
                'name'    => 'colorMaski',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'r'     => 'GLboolean',
                    'g'     => 'GLboolean',
                    'b'     => 'GLboolean',
                    'a'     => 'GLboolean',
                ],
            ],
            'glDeleteFramebuffers'                  => [
                'virtual' => true,
                'name'    => 'deleteFramebuffers',
                'type'    => 'void',
                'args'    => [
                    'n'            => 'GLsizei',
                    'framebuffers' => 'const GLuint *',
                ],
            ],
            'glDeleteRenderbuffers'                 => [
                'virtual' => true,
                'name'    => 'deleteRenderbuffers',
                'type'    => 'void',
                'args'    => [
                    'n'             => 'GLsizei',
                    'renderbuffers' => 'const GLuint *',
                ],
            ],
            'glDeleteVertexArrays'                  => [
                'virtual' => true,
                'name'    => 'deleteVertexArrays',
                'type'    => 'void',
                'args'    => [
                    'n'      => 'GLsizei',
                    'arrays' => 'const GLuint *',
                ],
            ],
            'glDisablei'                            => [
                'virtual' => true,
                'name'    => 'disablei',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                ],
            ],
            'glEnablei'                             => [
                'virtual' => true,
                'name'    => 'enablei',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                ],
            ],
            'glEndConditionalRender'                => [
                'virtual' => true,
                'name'    => 'endConditionalRender',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glEndTransformFeedback'                => [
                'virtual' => true,
                'name'    => 'endTransformFeedback',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glFlushMappedBufferRange'              => [
                'virtual' => true,
                'name'    => 'flushMappedBufferRange',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'offset' => 'GLintptr',
                    'length' => 'GLsizeiptr',
                ],
            ],
            'glFramebufferRenderbuffer'             => [
                'virtual' => true,
                'name'    => 'framebufferRenderbuffer',
                'type'    => 'void',
                'args'    => [
                    'target'             => 'GLenum',
                    'attachment'         => 'GLenum',
                    'renderbuffertarget' => 'GLenum',
                    'renderbuffer'       => 'GLuint',
                ],
            ],
            'glFramebufferTexture1D'                => [
                'virtual' => true,
                'name'    => 'framebufferTexture1D',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'textarget'  => 'GLenum',
                    'texture'    => 'GLuint',
                    'level'      => 'GLint',
                ],
            ],
            'glFramebufferTexture2D'                => [
                'virtual' => true,
                'name'    => 'framebufferTexture2D',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'textarget'  => 'GLenum',
                    'texture'    => 'GLuint',
                    'level'      => 'GLint',
                ],
            ],
            'glFramebufferTexture3D'                => [
                'virtual' => true,
                'name'    => 'framebufferTexture3D',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'textarget'  => 'GLenum',
                    'texture'    => 'GLuint',
                    'level'      => 'GLint',
                    'zoffset'    => 'GLint',
                ],
            ],
            'glFramebufferTextureLayer'             => [
                'virtual' => true,
                'name'    => 'framebufferTextureLayer',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'texture'    => 'GLuint',
                    'level'      => 'GLint',
                    'layer'      => 'GLint',
                ],
            ],
            'glGenFramebuffers'                     => [
                'virtual' => true,
                'name'    => 'genFramebuffers',
                'type'    => 'void',
                'args'    => [
                    'n'            => 'GLsizei',
                    'framebuffers' => 'GLuint *',
                ],
            ],
            'glGenRenderbuffers'                    => [
                'virtual' => true,
                'name'    => 'genRenderbuffers',
                'type'    => 'void',
                'args'    => [
                    'n'             => 'GLsizei',
                    'renderbuffers' => 'GLuint *',
                ],
            ],
            'glGenVertexArrays'                     => [
                'virtual' => true,
                'name'    => 'genVertexArrays',
                'type'    => 'void',
                'args'    => [
                    'n'      => 'GLsizei',
                    'arrays' => 'GLuint *',
                ],
            ],
            'glGenerateMipmap'                      => [
                'virtual' => true,
                'name'    => 'generateMipmap',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                ],
            ],
            'glGetBooleani_v'                       => [
                'virtual' => true,
                'name'    => 'getBooleani_v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'data'   => 'GLboolean *',
                ],
            ],
            'glGetFragDataLocation'                 => [
                'virtual' => true,
                'name'    => 'getFragDataLocation',
                'type'    => 'GLint',
                'args'    => [
                    'program' => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glGetFramebufferAttachmentParameteriv' => [
                'virtual' => true,
                'name'    => 'getFramebufferAttachmentParameteriv',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'pname'      => 'GLenum',
                    'params'     => 'GLint *',
                ],
            ],
            'glGetIntegeri_v'                       => [
                'virtual' => true,
                'name'    => 'getIntegeri_v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'data'   => 'GLint *',
                ],
            ],
            'glGetRenderbufferParameteriv'          => [
                'virtual' => true,
                'name'    => 'getRenderbufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetStringi'                          => [
                'virtual' => true,
                'name'    => 'getStringi',
                'type'    => 'const GLubyte *',
                'args'    => [
                    'name'  => 'GLenum',
                    'index' => 'GLuint',
                ],
            ],
            'glGetTexParameterIiv'                  => [
                'virtual' => true,
                'name'    => 'getTexParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetTexParameterIuiv'                 => [
                'virtual' => true,
                'name'    => 'getTexParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLuint *',
                ],
            ],
            'glGetTransformFeedbackVarying'         => [
                'virtual' => true,
                'name'    => 'getTransformFeedbackVarying',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'index'   => 'GLuint',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'size'    => 'GLsizei *',
                    'type'    => 'GLenum *',
                    'name'    => 'GLchar *',
                ],
            ],
            'glGetUniformuiv'                       => [
                'virtual' => true,
                'name'    => 'getUniformuiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'params'   => 'GLuint *',
                ],
            ],
            'glGetVertexAttribIiv'                  => [
                'virtual' => true,
                'name'    => 'getVertexAttribIiv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetVertexAttribIuiv'                 => [
                'virtual' => true,
                'name'    => 'getVertexAttribIuiv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLuint *',
                ],
            ],
            'glIsEnabledi'                          => [
                'virtual' => true,
                'name'    => 'isEnabledi',
                'type'    => 'GLboolean',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                ],
            ],
            'glIsFramebuffer'                       => [
                'virtual' => true,
                'name'    => 'isFramebuffer',
                'type'    => 'GLboolean',
                'args'    => [
                    'framebuffer' => 'GLuint',
                ],
            ],
            'glIsRenderbuffer'                      => [
                'virtual' => true,
                'name'    => 'isRenderbuffer',
                'type'    => 'GLboolean',
                'args'    => [
                    'renderbuffer' => 'GLuint',
                ],
            ],
            'glIsVertexArray'                       => [
                'virtual' => true,
                'name'    => 'isVertexArray',
                'type'    => 'GLboolean',
                'args'    => [
                    'array' => 'GLuint',
                ],
            ],
            'glMapBufferRange'                      => [
                'virtual' => true,
                'name'    => 'mapBufferRange',
                'type'    => 'void *',
                'args'    => [
                    'target' => 'GLenum',
                    'offset' => 'GLintptr',
                    'length' => 'GLsizeiptr',
                    'access' => 'GLbitfield',
                ],
            ],
            'glRenderbufferStorage'                 => [
                'virtual' => true,
                'name'    => 'renderbufferStorage',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glRenderbufferStorageMultisample'      => [
                'virtual' => true,
                'name'    => 'renderbufferStorageMultisample',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'samples'        => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glTexParameterIiv'                     => [
                'virtual' => true,
                'name'    => 'texParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLint *',
                ],
            ],
            'glTexParameterIuiv'                    => [
                'virtual' => true,
                'name'    => 'texParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'const GLuint *',
                ],
            ],
            'glTransformFeedbackVaryings'           => [
                'virtual' => true,
                'name'    => 'transformFeedbackVaryings',
                'type'    => 'void',
                'args'    => [
                    'program'    => 'GLuint',
                    'count'      => 'GLsizei',
                    'varyings'   => 'const GLchar *const *',
                    'bufferMode' => 'GLenum',
                ],
            ],
            'glUniform1ui'                          => [
                'virtual' => true,
                'name'    => 'uniform1ui',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                ],
            ],
            'glUniform1uiv'                         => [
                'virtual' => true,
                'name'    => 'uniform1uiv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glUniform2ui'                          => [
                'virtual' => true,
                'name'    => 'uniform2ui',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                ],
            ],
            'glUniform2uiv'                         => [
                'virtual' => true,
                'name'    => 'uniform2uiv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glUniform3ui'                          => [
                'virtual' => true,
                'name'    => 'uniform3ui',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                    'v2'       => 'GLuint',
                ],
            ],
            'glUniform3uiv'                         => [
                'virtual' => true,
                'name'    => 'uniform3uiv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glUniform4ui'                          => [
                'virtual' => true,
                'name'    => 'uniform4ui',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                    'v2'       => 'GLuint',
                    'v3'       => 'GLuint',
                ],
            ],
            'glUniform4uiv'                         => [
                'virtual' => true,
                'name'    => 'uniform4uiv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glVertexAttribI1i'                     => [
                'virtual' => true,
                'name'    => 'vertexAttribI1i',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLint',
                ],
            ],
            'glVertexAttribI1iv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI1iv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttribI1ui'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI1ui',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLuint',
                ],
            ],
            'glVertexAttribI1uiv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI1uiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttribI2i'                     => [
                'virtual' => true,
                'name'    => 'vertexAttribI2i',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLint',
                    'y'     => 'GLint',
                ],
            ],
            'glVertexAttribI2iv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI2iv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttribI2ui'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI2ui',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLuint',
                    'y'     => 'GLuint',
                ],
            ],
            'glVertexAttribI2uiv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI2uiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttribI3i'                     => [
                'virtual' => true,
                'name'    => 'vertexAttribI3i',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLint',
                    'y'     => 'GLint',
                    'z'     => 'GLint',
                ],
            ],
            'glVertexAttribI3iv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI3iv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttribI3ui'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI3ui',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLuint',
                    'y'     => 'GLuint',
                    'z'     => 'GLuint',
                ],
            ],
            'glVertexAttribI3uiv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI3uiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttribI4bv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI4bv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLbyte *',
                ],
            ],
            'glVertexAttribI4i'                     => [
                'virtual' => true,
                'name'    => 'vertexAttribI4i',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLint',
                    'y'     => 'GLint',
                    'z'     => 'GLint',
                    'w'     => 'GLint',
                ],
            ],
            'glVertexAttribI4iv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI4iv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glVertexAttribI4sv'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI4sv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLshort *',
                ],
            ],
            'glVertexAttribI4ubv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI4ubv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLubyte *',
                ],
            ],
            'glVertexAttribI4ui'                    => [
                'virtual' => true,
                'name'    => 'vertexAttribI4ui',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLuint',
                    'y'     => 'GLuint',
                    'z'     => 'GLuint',
                    'w'     => 'GLuint',
                ],
            ],
            'glVertexAttribI4uiv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI4uiv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLuint *',
                ],
            ],
            'glVertexAttribI4usv'                   => [
                'virtual' => true,
                'name'    => 'vertexAttribI4usv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLushort *',
                ],
            ],
            'glVertexAttribIPointer'                => [
                'virtual' => true,
                'name'    => 'vertexAttribIPointer',
                'type'    => 'void',
                'args'    => [
                    'index'   => 'GLuint',
                    'size'    => 'GLint',
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const void *',
                ],
            ],
        ],
    ],
    'GL31' => [
        'name'      => 'Serafim\\OpenGL\\GL31',
        'extends'   => 'Serafim\\OpenGL\\GL30',
        'version'   => '3.1',
        'comment'   => 'The OpenGL functionality up to version 3.1. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 3.1 implementations support revision 1.40 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_draw_instanced @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_draw_instanced.txt
- ARB_copy_buffer @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_copy_buffer.txt
- NV_primitive_restart @see https://www.khronos.org/registry/OpenGL/extensions/NV/NV_primitive_restart.txt
- ARB_texture_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_buffer_object.txt
- ARB_texture_rectangle @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_rectangle.txt
- ARB_uniform_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_uniform_buffer_object.txt',
        'constants' => [
            'GL_SAMPLER_2D_RECT'                             => 35683,
            'GL_SAMPLER_2D_RECT_SHADOW'                      => 35684,
            'GL_SAMPLER_BUFFER'                              => 36290,
            'GL_INT_SAMPLER_2D_RECT'                         => 36301,
            'GL_INT_SAMPLER_BUFFER'                          => 36304,
            'GL_UNSIGNED_INT_SAMPLER_2D_RECT'                => 36309,
            'GL_UNSIGNED_INT_SAMPLER_BUFFER'                 => 36312,
            'GL_TEXTURE_BUFFER'                              => 35882,
            'GL_MAX_TEXTURE_BUFFER_SIZE'                     => 35883,
            'GL_TEXTURE_BINDING_BUFFER'                      => 35884,
            'GL_TEXTURE_BUFFER_DATA_STORE_BINDING'           => 35885,
            'GL_TEXTURE_RECTANGLE'                           => 34037,
            'GL_TEXTURE_BINDING_RECTANGLE'                   => 34038,
            'GL_PROXY_TEXTURE_RECTANGLE'                     => 34039,
            'GL_MAX_RECTANGLE_TEXTURE_SIZE'                  => 34040,
            'GL_R8_SNORM'                                    => 36756,
            'GL_RG8_SNORM'                                   => 36757,
            'GL_RGB8_SNORM'                                  => 36758,
            'GL_RGBA8_SNORM'                                 => 36759,
            'GL_R16_SNORM'                                   => 36760,
            'GL_RG16_SNORM'                                  => 36761,
            'GL_RGB16_SNORM'                                 => 36762,
            'GL_RGBA16_SNORM'                                => 36763,
            'GL_SIGNED_NORMALIZED'                           => 36764,
            'GL_PRIMITIVE_RESTART'                           => 36765,
            'GL_PRIMITIVE_RESTART_INDEX'                     => 36766,
            'GL_COPY_READ_BUFFER'                            => 36662,
            'GL_COPY_WRITE_BUFFER'                           => 36663,
            'GL_UNIFORM_BUFFER'                              => 35345,
            'GL_UNIFORM_BUFFER_BINDING'                      => 35368,
            'GL_UNIFORM_BUFFER_START'                        => 35369,
            'GL_UNIFORM_BUFFER_SIZE'                         => 35370,
            'GL_MAX_VERTEX_UNIFORM_BLOCKS'                   => 35371,
            'GL_MAX_GEOMETRY_UNIFORM_BLOCKS'                 => 35372,
            'GL_MAX_FRAGMENT_UNIFORM_BLOCKS'                 => 35373,
            'GL_MAX_COMBINED_UNIFORM_BLOCKS'                 => 35374,
            'GL_MAX_UNIFORM_BUFFER_BINDINGS'                 => 35375,
            'GL_MAX_UNIFORM_BLOCK_SIZE'                      => 35376,
            'GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS'      => 35377,
            'GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS'    => 35378,
            'GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS'    => 35379,
            'GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT'             => 35380,
            'GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH'        => 35381,
            'GL_ACTIVE_UNIFORM_BLOCKS'                       => 35382,
            'GL_UNIFORM_TYPE'                                => 35383,
            'GL_UNIFORM_SIZE'                                => 35384,
            'GL_UNIFORM_NAME_LENGTH'                         => 35385,
            'GL_UNIFORM_BLOCK_INDEX'                         => 35386,
            'GL_UNIFORM_OFFSET'                              => 35387,
            'GL_UNIFORM_ARRAY_STRIDE'                        => 35388,
            'GL_UNIFORM_MATRIX_STRIDE'                       => 35389,
            'GL_UNIFORM_IS_ROW_MAJOR'                        => 35390,
            'GL_UNIFORM_BLOCK_BINDING'                       => 35391,
            'GL_UNIFORM_BLOCK_DATA_SIZE'                     => 35392,
            'GL_UNIFORM_BLOCK_NAME_LENGTH'                   => 35393,
            'GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS'               => 35394,
            'GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES'        => 35395,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER'   => 35396,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER' => 35397,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER' => 35398,
            'GL_INVALID_INDEX'                               => 4294967295,
        ],
        'methods'   => [
            'glCopyBufferSubData'         => [
                'virtual' => true,
                'name'    => 'copyBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'readTarget'  => 'GLenum',
                    'writeTarget' => 'GLenum',
                    'readOffset'  => 'GLintptr',
                    'writeOffset' => 'GLintptr',
                    'size'        => 'GLsizeiptr',
                ],
            ],
            'glDrawArraysInstanced'       => [
                'virtual' => true,
                'name'    => 'drawArraysInstanced',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'first'         => 'GLint',
                    'count'         => 'GLsizei',
                    'instancecount' => 'GLsizei',
                ],
            ],
            'glDrawElementsInstanced'     => [
                'virtual' => true,
                'name'    => 'drawElementsInstanced',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'count'         => 'GLsizei',
                    'type'          => 'GLenum',
                    'indices'       => 'const void *',
                    'instancecount' => 'GLsizei',
                ],
            ],
            'glGetActiveUniformBlockName' => [
                'virtual' => true,
                'name'    => 'getActiveUniformBlockName',
                'type'    => 'void',
                'args'    => [
                    'program'           => 'GLuint',
                    'uniformBlockIndex' => 'GLuint',
                    'bufSize'           => 'GLsizei',
                    'length'            => 'GLsizei *',
                    'uniformBlockName'  => 'GLchar *',
                ],
            ],
            'glGetActiveUniformBlockiv'   => [
                'virtual' => true,
                'name'    => 'getActiveUniformBlockiv',
                'type'    => 'void',
                'args'    => [
                    'program'           => 'GLuint',
                    'uniformBlockIndex' => 'GLuint',
                    'pname'             => 'GLenum',
                    'params'            => 'GLint *',
                ],
            ],
            'glGetActiveUniformName'      => [
                'virtual' => true,
                'name'    => 'getActiveUniformName',
                'type'    => 'void',
                'args'    => [
                    'program'      => 'GLuint',
                    'uniformIndex' => 'GLuint',
                    'bufSize'      => 'GLsizei',
                    'length'       => 'GLsizei *',
                    'uniformName'  => 'GLchar *',
                ],
            ],
            'glGetActiveUniformsiv'       => [
                'virtual' => true,
                'name'    => 'getActiveUniformsiv',
                'type'    => 'void',
                'args'    => [
                    'program'        => 'GLuint',
                    'uniformCount'   => 'GLsizei',
                    'uniformIndices' => 'const GLuint *',
                    'pname'          => 'GLenum',
                    'params'         => 'GLint *',
                ],
            ],
            'glGetUniformBlockIndex'      => [
                'virtual' => true,
                'name'    => 'getUniformBlockIndex',
                'type'    => 'GLuint',
                'args'    => [
                    'program'          => 'GLuint',
                    'uniformBlockName' => 'const GLchar *',
                ],
            ],
            'glGetUniformIndices'         => [
                'virtual' => true,
                'name'    => 'getUniformIndices',
                'type'    => 'void',
                'args'    => [
                    'program'        => 'GLuint',
                    'uniformCount'   => 'GLsizei',
                    'uniformNames'   => 'const GLchar *const *',
                    'uniformIndices' => 'GLuint *',
                ],
            ],
            'glPrimitiveRestartIndex'     => [
                'virtual' => true,
                'name'    => 'primitiveRestartIndex',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                ],
            ],
            'glTexBuffer'                 => [
                'virtual' => true,
                'name'    => 'texBuffer',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'buffer'         => 'GLuint',
                ],
            ],
            'glUniformBlockBinding'       => [
                'virtual' => true,
                'name'    => 'uniformBlockBinding',
                'type'    => 'void',
                'args'    => [
                    'program'             => 'GLuint',
                    'uniformBlockIndex'   => 'GLuint',
                    'uniformBlockBinding' => 'GLuint',
                ],
            ],
        ],
    ],
    'GL32' => [
        'name'      => 'Serafim\\OpenGL\\GL32',
        'extends'   => 'Serafim\\OpenGL\\GL31',
        'version'   => '3.2',
        'comment'   => 'The OpenGL functionality up to version 3.2. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 3.2 implementations support revision 1.50 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_vertex_array_bgra @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_array_bgra.txt
- ARB_draw_elements_base_vertex @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_draw_elements_base_vertex.txt
- ARB_fragment_coord_conventions @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_fragment_coord_conventions.txt
- ARB_provoking_vertex @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_provoking_vertex.txt
- ARB_seamless_cube_map @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_seamless_cube_map.txt
- ARB_texture_multisample @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_multisample.txt
- ARB_depth_clamp @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_depth_clamp.txt
- ARB_geometry_shader4 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_geometry_shader4.txt
- ARB_sync @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sync.txt',
        'constants' => [
            'GL_CONTEXT_CORE_PROFILE_BIT'                  => 1,
            'GL_CONTEXT_COMPATIBILITY_PROFILE_BIT'         => 2,
            'GL_LINES_ADJACENCY'                           => 10,
            'GL_LINE_STRIP_ADJACENCY'                      => 11,
            'GL_TRIANGLES_ADJACENCY'                       => 12,
            'GL_TRIANGLE_STRIP_ADJACENCY'                  => 13,
            'GL_PROGRAM_POINT_SIZE'                        => 34370,
            'GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS'          => 35881,
            'GL_FRAMEBUFFER_ATTACHMENT_LAYERED'            => 36263,
            'GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS'      => 36264,
            'GL_GEOMETRY_SHADER'                           => 36313,
            'GL_GEOMETRY_VERTICES_OUT'                     => 35094,
            'GL_GEOMETRY_INPUT_TYPE'                       => 35095,
            'GL_GEOMETRY_OUTPUT_TYPE'                      => 35096,
            'GL_MAX_GEOMETRY_UNIFORM_COMPONENTS'           => 36319,
            'GL_MAX_GEOMETRY_OUTPUT_VERTICES'              => 36320,
            'GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS'      => 36321,
            'GL_MAX_VERTEX_OUTPUT_COMPONENTS'              => 37154,
            'GL_MAX_GEOMETRY_INPUT_COMPONENTS'             => 37155,
            'GL_MAX_GEOMETRY_OUTPUT_COMPONENTS'            => 37156,
            'GL_MAX_FRAGMENT_INPUT_COMPONENTS'             => 37157,
            'GL_CONTEXT_PROFILE_MASK'                      => 37158,
            'GL_DEPTH_CLAMP'                               => 34383,
            'GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION'  => 36428,
            'GL_FIRST_VERTEX_CONVENTION'                   => 36429,
            'GL_LAST_VERTEX_CONVENTION'                    => 36430,
            'GL_PROVOKING_VERTEX'                          => 36431,
            'GL_TEXTURE_CUBE_MAP_SEAMLESS'                 => 34895,
            'GL_MAX_SERVER_WAIT_TIMEOUT'                   => 37137,
            'GL_OBJECT_TYPE'                               => 37138,
            'GL_SYNC_CONDITION'                            => 37139,
            'GL_SYNC_STATUS'                               => 37140,
            'GL_SYNC_FLAGS'                                => 37141,
            'GL_SYNC_FENCE'                                => 37142,
            'GL_SYNC_GPU_COMMANDS_COMPLETE'                => 37143,
            'GL_UNSIGNALED'                                => 37144,
            'GL_SIGNALED'                                  => 37145,
            'GL_ALREADY_SIGNALED'                          => 37146,
            'GL_TIMEOUT_EXPIRED'                           => 37147,
            'GL_CONDITION_SATISFIED'                       => 37148,
            'GL_WAIT_FAILED'                               => 37149,
            'GL_TIMEOUT_IGNORED'                           => 1.8446744073709552E+19,
            'GL_SYNC_FLUSH_COMMANDS_BIT'                   => 1,
            'GL_SAMPLE_POSITION'                           => 36432,
            'GL_SAMPLE_MASK'                               => 36433,
            'GL_SAMPLE_MASK_VALUE'                         => 36434,
            'GL_MAX_SAMPLE_MASK_WORDS'                     => 36441,
            'GL_TEXTURE_2D_MULTISAMPLE'                    => 37120,
            'GL_PROXY_TEXTURE_2D_MULTISAMPLE'              => 37121,
            'GL_TEXTURE_2D_MULTISAMPLE_ARRAY'              => 37122,
            'GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY'        => 37123,
            'GL_TEXTURE_BINDING_2D_MULTISAMPLE'            => 37124,
            'GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY'      => 37125,
            'GL_TEXTURE_SAMPLES'                           => 37126,
            'GL_TEXTURE_FIXED_SAMPLE_LOCATIONS'            => 37127,
            'GL_SAMPLER_2D_MULTISAMPLE'                    => 37128,
            'GL_INT_SAMPLER_2D_MULTISAMPLE'                => 37129,
            'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE'       => 37130,
            'GL_SAMPLER_2D_MULTISAMPLE_ARRAY'              => 37131,
            'GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY'          => 37132,
            'GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY' => 37133,
            'GL_MAX_COLOR_TEXTURE_SAMPLES'                 => 37134,
            'GL_MAX_DEPTH_TEXTURE_SAMPLES'                 => 37135,
            'GL_MAX_INTEGER_SAMPLES'                       => 37136,
        ],
        'methods'   => [
            'glClientWaitSync'                  => [
                'virtual' => true,
                'name'    => 'clientWaitSync',
                'type'    => 'GLenum',
                'args'    => [
                    'sync'    => 'GLsync',
                    'flags'   => 'GLbitfield',
                    'timeout' => 'GLuint64',
                ],
            ],
            'glDeleteSync'                      => [
                'virtual' => true,
                'name'    => 'deleteSync',
                'type'    => 'void',
                'args'    => [
                    'sync' => 'GLsync',
                ],
            ],
            'glDrawElementsBaseVertex'          => [
                'virtual' => true,
                'name'    => 'drawElementsBaseVertex',
                'type'    => 'void',
                'args'    => [
                    'mode'       => 'GLenum',
                    'count'      => 'GLsizei',
                    'type'       => 'GLenum',
                    'indices'    => 'const void *',
                    'basevertex' => 'GLint',
                ],
            ],
            'glDrawElementsInstancedBaseVertex' => [
                'virtual' => true,
                'name'    => 'drawElementsInstancedBaseVertex',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'count'         => 'GLsizei',
                    'type'          => 'GLenum',
                    'indices'       => 'const void *',
                    'instancecount' => 'GLsizei',
                    'basevertex'    => 'GLint',
                ],
            ],
            'glDrawRangeElementsBaseVertex'     => [
                'virtual' => true,
                'name'    => 'drawRangeElementsBaseVertex',
                'type'    => 'void',
                'args'    => [
                    'mode'       => 'GLenum',
                    'start'      => 'GLuint',
                    'end'        => 'GLuint',
                    'count'      => 'GLsizei',
                    'type'       => 'GLenum',
                    'indices'    => 'const void *',
                    'basevertex' => 'GLint',
                ],
            ],
            'glFenceSync'                       => [
                'virtual' => true,
                'name'    => 'fenceSync',
                'type'    => 'GLsync',
                'args'    => [
                    'condition' => 'GLenum',
                    'flags'     => 'GLbitfield',
                ],
            ],
            'glFramebufferTexture'              => [
                'virtual' => true,
                'name'    => 'framebufferTexture',
                'type'    => 'void',
                'args'    => [
                    'target'     => 'GLenum',
                    'attachment' => 'GLenum',
                    'texture'    => 'GLuint',
                    'level'      => 'GLint',
                ],
            ],
            'glGetBufferParameteri64v'          => [
                'virtual' => true,
                'name'    => 'getBufferParameteri64v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint64 *',
                ],
            ],
            'glGetInteger64i_v'                 => [
                'virtual' => true,
                'name'    => 'getInteger64i_v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'data'   => 'GLint64 *',
                ],
            ],
            'glGetInteger64v'                   => [
                'virtual' => true,
                'name'    => 'getInteger64v',
                'type'    => 'void',
                'args'    => [
                    'pname' => 'GLenum',
                    'data'  => 'GLint64 *',
                ],
            ],
            'glGetMultisamplefv'                => [
                'virtual' => true,
                'name'    => 'getMultisamplefv',
                'type'    => 'void',
                'args'    => [
                    'pname' => 'GLenum',
                    'index' => 'GLuint',
                    'val'   => 'GLfloat *',
                ],
            ],
            'glGetSynciv'                       => [
                'virtual' => true,
                'name'    => 'getSynciv',
                'type'    => 'void',
                'args'    => [
                    'sync'    => 'GLsync',
                    'pname'   => 'GLenum',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'values'  => 'GLint *',
                ],
            ],
            'glIsSync'                          => [
                'virtual' => true,
                'name'    => 'isSync',
                'type'    => 'GLboolean',
                'args'    => [
                    'sync' => 'GLsync',
                ],
            ],
            'glMultiDrawElementsBaseVertex'     => [
                'virtual' => true,
                'name'    => 'multiDrawElementsBaseVertex',
                'type'    => 'void',
                'args'    => [
                    'mode'       => 'GLenum',
                    'count'      => 'const GLsizei *',
                    'type'       => 'GLenum',
                    'indices'    => 'const void *const *',
                    'drawcount'  => 'GLsizei',
                    'basevertex' => 'const GLint *',
                ],
            ],
            'glProvokingVertex'                 => [
                'virtual' => true,
                'name'    => 'provokingVertex',
                'type'    => 'void',
                'args'    => [
                    'mode' => 'GLenum',
                ],
            ],
            'glSampleMaski'                     => [
                'virtual' => true,
                'name'    => 'sampleMaski',
                'type'    => 'void',
                'args'    => [
                    'maskNumber' => 'GLuint',
                    'mask'       => 'GLbitfield',
                ],
            ],
            'glTexImage2DMultisample'           => [
                'virtual' => true,
                'name'    => 'texImage2DMultisample',
                'type'    => 'void',
                'args'    => [
                    'target'               => 'GLenum',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glTexImage3DMultisample'           => [
                'virtual' => true,
                'name'    => 'texImage3DMultisample',
                'type'    => 'void',
                'args'    => [
                    'target'               => 'GLenum',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'depth'                => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glWaitSync'                        => [
                'virtual' => true,
                'name'    => 'waitSync',
                'type'    => 'void',
                'args'    => [
                    'sync'    => 'GLsync',
                    'flags'   => 'GLbitfield',
                    'timeout' => 'GLuint64',
                ],
            ],
        ],
    ],
    'GL33' => [
        'name'      => 'Serafim\\OpenGL\\GL33',
        'extends'   => 'Serafim\\OpenGL\\GL32',
        'version'   => '3.3',
        'comment'   => 'The OpenGL functionality up to version 3.3. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 3.3 implementations support revision 3.30 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_shader_bit_encoding @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_bit_encoding.txt
- ARB_blend_func_extended @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_blend_func_extended.txt
- ARB_explicit_attrib_location @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_explicit_attrib_location.txt
- ARB_occlusion_query2 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_occlusion_query2.txt
- ARB_sampler_objects @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sampler_objects.txt
- ARB_texture_rgb10_a2ui @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_rgb10_a2ui.txt
- ARB_texture_swizzle @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_swizzle.txt
- ARB_timer_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_timer_query.txt
- ARB_instanced_arrays @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_instanced_arrays.txt
- ARB_vertex_type_2_10_10_10_rev @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_type_2_10_10_10_rev.txt',
        'constants' => [
            'GL_VERTEX_ATTRIB_ARRAY_DIVISOR'  => 35070,
            'GL_SRC1_COLOR'                   => 35065,
            'GL_ONE_MINUS_SRC1_COLOR'         => 35066,
            'GL_ONE_MINUS_SRC1_ALPHA'         => 35067,
            'GL_MAX_DUAL_SOURCE_DRAW_BUFFERS' => 35068,
            'GL_ANY_SAMPLES_PASSED'           => 35887,
            'GL_SAMPLER_BINDING'              => 35097,
            'GL_RGB10_A2UI'                   => 36975,
            'GL_TEXTURE_SWIZZLE_R'            => 36418,
            'GL_TEXTURE_SWIZZLE_G'            => 36419,
            'GL_TEXTURE_SWIZZLE_B'            => 36420,
            'GL_TEXTURE_SWIZZLE_A'            => 36421,
            'GL_TEXTURE_SWIZZLE_RGBA'         => 36422,
            'GL_TIME_ELAPSED'                 => 35007,
            'GL_TIMESTAMP'                    => 36392,
            'GL_INT_2_10_10_10_REV'           => 36255,
        ],
        'methods'   => [
            'glBindFragDataLocationIndexed' => [
                'virtual' => true,
                'name'    => 'bindFragDataLocationIndexed',
                'type'    => 'void',
                'args'    => [
                    'program'     => 'GLuint',
                    'colorNumber' => 'GLuint',
                    'index'       => 'GLuint',
                    'name'        => 'const GLchar *',
                ],
            ],
            'glBindSampler'                 => [
                'virtual' => true,
                'name'    => 'bindSampler',
                'type'    => 'void',
                'args'    => [
                    'unit'    => 'GLuint',
                    'sampler' => 'GLuint',
                ],
            ],
            'glDeleteSamplers'              => [
                'virtual' => true,
                'name'    => 'deleteSamplers',
                'type'    => 'void',
                'args'    => [
                    'count'    => 'GLsizei',
                    'samplers' => 'const GLuint *',
                ],
            ],
            'glGenSamplers'                 => [
                'virtual' => true,
                'name'    => 'genSamplers',
                'type'    => 'void',
                'args'    => [
                    'count'    => 'GLsizei',
                    'samplers' => 'GLuint *',
                ],
            ],
            'glGetFragDataIndex'            => [
                'virtual' => true,
                'name'    => 'getFragDataIndex',
                'type'    => 'GLint',
                'args'    => [
                    'program' => 'GLuint',
                    'name'    => 'const GLchar *',
                ],
            ],
            'glGetQueryObjecti64v'          => [
                'virtual' => true,
                'name'    => 'getQueryObjecti64v',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint64 *',
                ],
            ],
            'glGetQueryObjectui64v'         => [
                'virtual' => true,
                'name'    => 'getQueryObjectui64v',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLuint64 *',
                ],
            ],
            'glGetSamplerParameterIiv'      => [
                'virtual' => true,
                'name'    => 'getSamplerParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glGetSamplerParameterIuiv'     => [
                'virtual' => true,
                'name'    => 'getSamplerParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLuint *',
                ],
            ],
            'glGetSamplerParameterfv'       => [
                'virtual' => true,
                'name'    => 'getSamplerParameterfv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLfloat *',
                ],
            ],
            'glGetSamplerParameteriv'       => [
                'virtual' => true,
                'name'    => 'getSamplerParameteriv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glIsSampler'                   => [
                'virtual' => true,
                'name'    => 'isSampler',
                'type'    => 'GLboolean',
                'args'    => [
                    'sampler' => 'GLuint',
                ],
            ],
            'glQueryCounter'                => [
                'virtual' => true,
                'name'    => 'queryCounter',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'target' => 'GLenum',
                ],
            ],
            'glSamplerParameterIiv'         => [
                'virtual' => true,
                'name'    => 'samplerParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLint *',
                ],
            ],
            'glSamplerParameterIuiv'        => [
                'virtual' => true,
                'name'    => 'samplerParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLuint *',
                ],
            ],
            'glSamplerParameterf'           => [
                'virtual' => true,
                'name'    => 'samplerParameterf',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'GLfloat',
                ],
            ],
            'glSamplerParameterfv'          => [
                'virtual' => true,
                'name'    => 'samplerParameterfv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLfloat *',
                ],
            ],
            'glSamplerParameteri'           => [
                'virtual' => true,
                'name'    => 'samplerParameteri',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'GLint',
                ],
            ],
            'glSamplerParameteriv'          => [
                'virtual' => true,
                'name'    => 'samplerParameteriv',
                'type'    => 'void',
                'args'    => [
                    'sampler' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLint *',
                ],
            ],
            'glVertexAttribDivisor'         => [
                'virtual' => true,
                'name'    => 'vertexAttribDivisor',
                'type'    => 'void',
                'args'    => [
                    'index'   => 'GLuint',
                    'divisor' => 'GLuint',
                ],
            ],
            'glVertexAttribP1ui'            => [
                'virtual' => true,
                'name'    => 'vertexAttribP1ui',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'GLuint',
                ],
            ],
            'glVertexAttribP1uiv'           => [
                'virtual' => true,
                'name'    => 'vertexAttribP1uiv',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'const GLuint *',
                ],
            ],
            'glVertexAttribP2ui'            => [
                'virtual' => true,
                'name'    => 'vertexAttribP2ui',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'GLuint',
                ],
            ],
            'glVertexAttribP2uiv'           => [
                'virtual' => true,
                'name'    => 'vertexAttribP2uiv',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'const GLuint *',
                ],
            ],
            'glVertexAttribP3ui'            => [
                'virtual' => true,
                'name'    => 'vertexAttribP3ui',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'GLuint',
                ],
            ],
            'glVertexAttribP3uiv'           => [
                'virtual' => true,
                'name'    => 'vertexAttribP3uiv',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'const GLuint *',
                ],
            ],
            'glVertexAttribP4ui'            => [
                'virtual' => true,
                'name'    => 'vertexAttribP4ui',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'GLuint',
                ],
            ],
            'glVertexAttribP4uiv'           => [
                'virtual' => true,
                'name'    => 'vertexAttribP4uiv',
                'type'    => 'void',
                'args'    => [
                    'index'      => 'GLuint',
                    'type'       => 'GLenum',
                    'normalized' => 'GLboolean',
                    'value'      => 'const GLuint *',
                ],
            ],
        ],
    ],
    'GL40' => [
        'name'      => 'Serafim\\OpenGL\\GL40',
        'extends'   => 'Serafim\\OpenGL\\GL33',
        'version'   => '4.0',
        'comment'   => 'The OpenGL functionality up to version 4.0. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.0 implementations support revision 4.00 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_texture_query_lod @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_query_lod.txt
- ARB_draw_buffers_blend @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_draw_buffers_blend.txt
- ARB_draw_indirect @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_draw_indirect.txt
- ARB_gpu_shader5 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_gpu_shader5.txt
- ARB_gpu_shader_fp64 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_gpu_shader_fp64.txt
- ARB_sample_shading @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_sample_shading.txt
- ARB_shader_subroutine @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_subroutine.txt
- ARB_tessellation_shader @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_tessellation_shader.txt
- ARB_texture_buffer_object_rgb32 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_buffer_object_rgb32.txt
- ARB_texture_cube_map_array @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_cube_map_array.txt
- ARB_texture_gather @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_gather.txt
- ARB_transform_feedback2 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_transform_feedback2.txt
- ARB_transform_feedback3 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_transform_feedback3.txt',
        'constants' => [
            'GL_SAMPLE_SHADING'                                     => 35894,
            'GL_MIN_SAMPLE_SHADING_VALUE'                           => 35895,
            'GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET'                  => 36446,
            'GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET'                  => 36447,
            'GL_TEXTURE_CUBE_MAP_ARRAY'                             => 36873,
            'GL_TEXTURE_BINDING_CUBE_MAP_ARRAY'                     => 36874,
            'GL_PROXY_TEXTURE_CUBE_MAP_ARRAY'                       => 36875,
            'GL_SAMPLER_CUBE_MAP_ARRAY'                             => 36876,
            'GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW'                      => 36877,
            'GL_INT_SAMPLER_CUBE_MAP_ARRAY'                         => 36878,
            'GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY'                => 36879,
            'GL_DRAW_INDIRECT_BUFFER'                               => 36671,
            'GL_DRAW_INDIRECT_BUFFER_BINDING'                       => 36675,
            'GL_GEOMETRY_SHADER_INVOCATIONS'                        => 34943,
            'GL_MAX_GEOMETRY_SHADER_INVOCATIONS'                    => 36442,
            'GL_MIN_FRAGMENT_INTERPOLATION_OFFSET'                  => 36443,
            'GL_MAX_FRAGMENT_INTERPOLATION_OFFSET'                  => 36444,
            'GL_FRAGMENT_INTERPOLATION_OFFSET_BITS'                 => 36445,
            'GL_MAX_VERTEX_STREAMS'                                 => 36465,
            'GL_DOUBLE_VEC2'                                        => 36860,
            'GL_DOUBLE_VEC3'                                        => 36861,
            'GL_DOUBLE_VEC4'                                        => 36862,
            'GL_DOUBLE_MAT2'                                        => 36678,
            'GL_DOUBLE_MAT3'                                        => 36679,
            'GL_DOUBLE_MAT4'                                        => 36680,
            'GL_DOUBLE_MAT2x3'                                      => 36681,
            'GL_DOUBLE_MAT2x4'                                      => 36682,
            'GL_DOUBLE_MAT3x2'                                      => 36683,
            'GL_DOUBLE_MAT3x4'                                      => 36684,
            'GL_DOUBLE_MAT4x2'                                      => 36685,
            'GL_DOUBLE_MAT4x3'                                      => 36686,
            'GL_ACTIVE_SUBROUTINES'                                 => 36325,
            'GL_ACTIVE_SUBROUTINE_UNIFORMS'                         => 36326,
            'GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS'                => 36423,
            'GL_ACTIVE_SUBROUTINE_MAX_LENGTH'                       => 36424,
            'GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH'               => 36425,
            'GL_MAX_SUBROUTINES'                                    => 36327,
            'GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS'                   => 36328,
            'GL_NUM_COMPATIBLE_SUBROUTINES'                         => 36426,
            'GL_COMPATIBLE_SUBROUTINES'                             => 36427,
            'GL_PATCHES'                                            => 14,
            'GL_PATCH_VERTICES'                                     => 36466,
            'GL_PATCH_DEFAULT_INNER_LEVEL'                          => 36467,
            'GL_PATCH_DEFAULT_OUTER_LEVEL'                          => 36468,
            'GL_TESS_CONTROL_OUTPUT_VERTICES'                       => 36469,
            'GL_TESS_GEN_MODE'                                      => 36470,
            'GL_TESS_GEN_SPACING'                                   => 36471,
            'GL_TESS_GEN_VERTEX_ORDER'                              => 36472,
            'GL_TESS_GEN_POINT_MODE'                                => 36473,
            'GL_ISOLINES'                                           => 36474,
            'GL_FRACTIONAL_ODD'                                     => 36475,
            'GL_FRACTIONAL_EVEN'                                    => 36476,
            'GL_MAX_PATCH_VERTICES'                                 => 36477,
            'GL_MAX_TESS_GEN_LEVEL'                                 => 36478,
            'GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS'                => 36479,
            'GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS'             => 36480,
            'GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS'               => 36481,
            'GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS'            => 36482,
            'GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS'                 => 36483,
            'GL_MAX_TESS_PATCH_COMPONENTS'                          => 36484,
            'GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS'           => 36485,
            'GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS'              => 36486,
            'GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS'                    => 36489,
            'GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS'                 => 36490,
            'GL_MAX_TESS_CONTROL_INPUT_COMPONENTS'                  => 34924,
            'GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS'               => 34925,
            'GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS'       => 36382,
            'GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS'    => 36383,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER'    => 34032,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER' => 34033,
            'GL_TESS_EVALUATION_SHADER'                             => 36487,
            'GL_TESS_CONTROL_SHADER'                                => 36488,
            'GL_TRANSFORM_FEEDBACK'                                 => 36386,
            'GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED'                   => 36387,
            'GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE'                   => 36388,
            'GL_TRANSFORM_FEEDBACK_BINDING'                         => 36389,
            'GL_MAX_TRANSFORM_FEEDBACK_BUFFERS'                     => 36464,
        ],
        'methods'   => [
            'glBeginQueryIndexed'              => [
                'virtual' => true,
                'name'    => 'beginQueryIndexed',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'id'     => 'GLuint',
                ],
            ],
            'glBindTransformFeedback'          => [
                'virtual' => true,
                'name'    => 'bindTransformFeedback',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'id'     => 'GLuint',
                ],
            ],
            'glBlendEquationSeparatei'         => [
                'virtual' => true,
                'name'    => 'blendEquationSeparatei',
                'type'    => 'void',
                'args'    => [
                    'buf'       => 'GLuint',
                    'modeRGB'   => 'GLenum',
                    'modeAlpha' => 'GLenum',
                ],
            ],
            'glBlendEquationi'                 => [
                'virtual' => true,
                'name'    => 'blendEquationi',
                'type'    => 'void',
                'args'    => [
                    'buf'  => 'GLuint',
                    'mode' => 'GLenum',
                ],
            ],
            'glBlendFuncSeparatei'             => [
                'virtual' => true,
                'name'    => 'blendFuncSeparatei',
                'type'    => 'void',
                'args'    => [
                    'buf'      => 'GLuint',
                    'srcRGB'   => 'GLenum',
                    'dstRGB'   => 'GLenum',
                    'srcAlpha' => 'GLenum',
                    'dstAlpha' => 'GLenum',
                ],
            ],
            'glBlendFunci'                     => [
                'virtual' => true,
                'name'    => 'blendFunci',
                'type'    => 'void',
                'args'    => [
                    'buf' => 'GLuint',
                    'src' => 'GLenum',
                    'dst' => 'GLenum',
                ],
            ],
            'glDeleteTransformFeedbacks'       => [
                'virtual' => true,
                'name'    => 'deleteTransformFeedbacks',
                'type'    => 'void',
                'args'    => [
                    'n'   => 'GLsizei',
                    'ids' => 'const GLuint *',
                ],
            ],
            'glDrawArraysIndirect'             => [
                'virtual' => true,
                'name'    => 'drawArraysIndirect',
                'type'    => 'void',
                'args'    => [
                    'mode'     => 'GLenum',
                    'indirect' => 'const void *',
                ],
            ],
            'glDrawElementsIndirect'           => [
                'virtual' => true,
                'name'    => 'drawElementsIndirect',
                'type'    => 'void',
                'args'    => [
                    'mode'     => 'GLenum',
                    'type'     => 'GLenum',
                    'indirect' => 'const void *',
                ],
            ],
            'glDrawTransformFeedback'          => [
                'virtual' => true,
                'name'    => 'drawTransformFeedback',
                'type'    => 'void',
                'args'    => [
                    'mode' => 'GLenum',
                    'id'   => 'GLuint',
                ],
            ],
            'glDrawTransformFeedbackStream'    => [
                'virtual' => true,
                'name'    => 'drawTransformFeedbackStream',
                'type'    => 'void',
                'args'    => [
                    'mode'   => 'GLenum',
                    'id'     => 'GLuint',
                    'stream' => 'GLuint',
                ],
            ],
            'glEndQueryIndexed'                => [
                'virtual' => true,
                'name'    => 'endQueryIndexed',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                ],
            ],
            'glGenTransformFeedbacks'          => [
                'virtual' => true,
                'name'    => 'genTransformFeedbacks',
                'type'    => 'void',
                'args'    => [
                    'n'   => 'GLsizei',
                    'ids' => 'GLuint *',
                ],
            ],
            'glGetActiveSubroutineName'        => [
                'virtual' => true,
                'name'    => 'getActiveSubroutineName',
                'type'    => 'void',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'index'      => 'GLuint',
                    'bufsize'    => 'GLsizei',
                    'length'     => 'GLsizei *',
                    'name'       => 'GLchar *',
                ],
            ],
            'glGetActiveSubroutineUniformName' => [
                'virtual' => true,
                'name'    => 'getActiveSubroutineUniformName',
                'type'    => 'void',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'index'      => 'GLuint',
                    'bufsize'    => 'GLsizei',
                    'length'     => 'GLsizei *',
                    'name'       => 'GLchar *',
                ],
            ],
            'glGetActiveSubroutineUniformiv'   => [
                'virtual' => true,
                'name'    => 'getActiveSubroutineUniformiv',
                'type'    => 'void',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'index'      => 'GLuint',
                    'pname'      => 'GLenum',
                    'values'     => 'GLint *',
                ],
            ],
            'glGetProgramStageiv'              => [
                'virtual' => true,
                'name'    => 'getProgramStageiv',
                'type'    => 'void',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'pname'      => 'GLenum',
                    'values'     => 'GLint *',
                ],
            ],
            'glGetQueryIndexediv'              => [
                'virtual' => true,
                'name'    => 'getQueryIndexediv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetSubroutineIndex'             => [
                'virtual' => true,
                'name'    => 'getSubroutineIndex',
                'type'    => 'GLuint',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'name'       => 'const GLchar *',
                ],
            ],
            'glGetSubroutineUniformLocation'   => [
                'virtual' => true,
                'name'    => 'getSubroutineUniformLocation',
                'type'    => 'GLint',
                'args'    => [
                    'program'    => 'GLuint',
                    'shadertype' => 'GLenum',
                    'name'       => 'const GLchar *',
                ],
            ],
            'glGetUniformSubroutineuiv'        => [
                'virtual' => true,
                'name'    => 'getUniformSubroutineuiv',
                'type'    => 'void',
                'args'    => [
                    'shadertype' => 'GLenum',
                    'location'   => 'GLint',
                    'params'     => 'GLuint *',
                ],
            ],
            'glGetUniformdv'                   => [
                'virtual' => true,
                'name'    => 'getUniformdv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'params'   => 'GLdouble *',
                ],
            ],
            'glIsTransformFeedback'            => [
                'virtual' => true,
                'name'    => 'isTransformFeedback',
                'type'    => 'GLboolean',
                'args'    => [
                    'id' => 'GLuint',
                ],
            ],
            'glMinSampleShading'               => [
                'virtual' => true,
                'name'    => 'minSampleShading',
                'type'    => 'void',
                'args'    => [
                    'value' => 'GLfloat',
                ],
            ],
            'glPatchParameterfv'               => [
                'virtual' => true,
                'name'    => 'patchParameterfv',
                'type'    => 'void',
                'args'    => [
                    'pname'  => 'GLenum',
                    'values' => 'const GLfloat *',
                ],
            ],
            'glPatchParameteri'                => [
                'virtual' => true,
                'name'    => 'patchParameteri',
                'type'    => 'void',
                'args'    => [
                    'pname' => 'GLenum',
                    'value' => 'GLint',
                ],
            ],
            'glPauseTransformFeedback'         => [
                'virtual' => true,
                'name'    => 'pauseTransformFeedback',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glResumeTransformFeedback'        => [
                'virtual' => true,
                'name'    => 'resumeTransformFeedback',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glUniform1d'                      => [
                'virtual' => true,
                'name'    => 'uniform1d',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'x'        => 'GLdouble',
                ],
            ],
            'glUniform1dv'                     => [
                'virtual' => true,
                'name'    => 'uniform1dv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glUniform2d'                      => [
                'virtual' => true,
                'name'    => 'uniform2d',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'x'        => 'GLdouble',
                    'y'        => 'GLdouble',
                ],
            ],
            'glUniform2dv'                     => [
                'virtual' => true,
                'name'    => 'uniform2dv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glUniform3d'                      => [
                'virtual' => true,
                'name'    => 'uniform3d',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'x'        => 'GLdouble',
                    'y'        => 'GLdouble',
                    'z'        => 'GLdouble',
                ],
            ],
            'glUniform3dv'                     => [
                'virtual' => true,
                'name'    => 'uniform3dv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glUniform4d'                      => [
                'virtual' => true,
                'name'    => 'uniform4d',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'x'        => 'GLdouble',
                    'y'        => 'GLdouble',
                    'z'        => 'GLdouble',
                    'w'        => 'GLdouble',
                ],
            ],
            'glUniform4dv'                     => [
                'virtual' => true,
                'name'    => 'uniform4dv',
                'type'    => 'void',
                'args'    => [
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix2dv'               => [
                'virtual' => true,
                'name'    => 'uniformMatrix2dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix2x3dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix2x3dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix2x4dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix2x4dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix3dv'               => [
                'virtual' => true,
                'name'    => 'uniformMatrix3dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix3x2dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix3x2dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix3x4dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix3x4dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix4dv'               => [
                'virtual' => true,
                'name'    => 'uniformMatrix4dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix4x2dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix4x2dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformMatrix4x3dv'             => [
                'virtual' => true,
                'name'    => 'uniformMatrix4x3dv',
                'type'    => 'void',
                'args'    => [
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glUniformSubroutinesuiv'          => [
                'virtual' => true,
                'name'    => 'uniformSubroutinesuiv',
                'type'    => 'void',
                'args'    => [
                    'shadertype' => 'GLenum',
                    'count'      => 'GLsizei',
                    'indices'    => 'const GLuint *',
                ],
            ],
        ],
    ],
    'GL41' => [
        'name'      => 'Serafim\\OpenGL\\GL41',
        'extends'   => 'Serafim\\OpenGL\\GL40',
        'version'   => '4.1',
        'comment'   => 'The OpenGL functionality up to version 4.1. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.1 implementations support revision 4.10 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_ES2_compatibility @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_ES2_compatibility.txt
- ARB_get_program_binary @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_get_program_binary.txt
- ARB_separate_shader_objects @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_separate_shader_objects.txt
- ARB_shader_precision @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_precision.txt
- ARB_vertex_attrib_64bit @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_attrib_64bit.txt
- ARB_viewport_array @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_viewport_array.txt',
        'constants' => [
            'GL_FIXED'                            => 5132,
            'GL_IMPLEMENTATION_COLOR_READ_TYPE'   => 35738,
            'GL_IMPLEMENTATION_COLOR_READ_FORMAT' => 35739,
            'GL_LOW_FLOAT'                        => 36336,
            'GL_MEDIUM_FLOAT'                     => 36337,
            'GL_HIGH_FLOAT'                       => 36338,
            'GL_LOW_INT'                          => 36339,
            'GL_MEDIUM_INT'                       => 36340,
            'GL_HIGH_INT'                         => 36341,
            'GL_SHADER_COMPILER'                  => 36346,
            'GL_SHADER_BINARY_FORMATS'            => 36344,
            'GL_NUM_SHADER_BINARY_FORMATS'        => 36345,
            'GL_MAX_VERTEX_UNIFORM_VECTORS'       => 36347,
            'GL_MAX_VARYING_VECTORS'              => 36348,
            'GL_MAX_FRAGMENT_UNIFORM_VECTORS'     => 36349,
            'GL_RGB565'                           => 36194,
            'GL_PROGRAM_BINARY_RETRIEVABLE_HINT'  => 33367,
            'GL_PROGRAM_BINARY_LENGTH'            => 34625,
            'GL_NUM_PROGRAM_BINARY_FORMATS'       => 34814,
            'GL_PROGRAM_BINARY_FORMATS'           => 34815,
            'GL_VERTEX_SHADER_BIT'                => 1,
            'GL_FRAGMENT_SHADER_BIT'              => 2,
            'GL_GEOMETRY_SHADER_BIT'              => 4,
            'GL_TESS_CONTROL_SHADER_BIT'          => 8,
            'GL_TESS_EVALUATION_SHADER_BIT'       => 16,
            'GL_ALL_SHADER_BITS'                  => 4294967295,
            'GL_PROGRAM_SEPARABLE'                => 33368,
            'GL_ACTIVE_PROGRAM'                   => 33369,
            'GL_PROGRAM_PIPELINE_BINDING'         => 33370,
            'GL_MAX_VIEWPORTS'                    => 33371,
            'GL_VIEWPORT_SUBPIXEL_BITS'           => 33372,
            'GL_VIEWPORT_BOUNDS_RANGE'            => 33373,
            'GL_LAYER_PROVOKING_VERTEX'           => 33374,
            'GL_VIEWPORT_INDEX_PROVOKING_VERTEX'  => 33375,
            'GL_UNDEFINED_VERTEX'                 => 33376,
        ],
        'methods'   => [
            'glActiveShaderProgram'       => [
                'virtual' => true,
                'name'    => 'activeShaderProgram',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                    'program'  => 'GLuint',
                ],
            ],
            'glBindProgramPipeline'       => [
                'virtual' => true,
                'name'    => 'bindProgramPipeline',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                ],
            ],
            'glClearDepthf'               => [
                'virtual' => true,
                'name'    => 'clearDepthf',
                'type'    => 'void',
                'args'    => [
                    'd' => 'GLfloat',
                ],
            ],
            'glCreateShaderProgramv'      => [
                'virtual' => true,
                'name'    => 'createShaderProgramv',
                'type'    => 'GLuint',
                'args'    => [
                    'type'    => 'GLenum',
                    'count'   => 'GLsizei',
                    'strings' => 'const GLchar *const *',
                ],
            ],
            'glDeleteProgramPipelines'    => [
                'virtual' => true,
                'name'    => 'deleteProgramPipelines',
                'type'    => 'void',
                'args'    => [
                    'n'         => 'GLsizei',
                    'pipelines' => 'const GLuint *',
                ],
            ],
            'glDepthRangeArrayv'          => [
                'virtual' => true,
                'name'    => 'depthRangeArrayv',
                'type'    => 'void',
                'args'    => [
                    'first' => 'GLuint',
                    'count' => 'GLsizei',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glDepthRangeIndexed'         => [
                'virtual' => true,
                'name'    => 'depthRangeIndexed',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'n'     => 'GLdouble',
                    'f'     => 'GLdouble',
                ],
            ],
            'glDepthRangef'               => [
                'virtual' => true,
                'name'    => 'depthRangef',
                'type'    => 'void',
                'args'    => [
                    'n' => 'GLfloat',
                    'f' => 'GLfloat',
                ],
            ],
            'glGenProgramPipelines'       => [
                'virtual' => true,
                'name'    => 'genProgramPipelines',
                'type'    => 'void',
                'args'    => [
                    'n'         => 'GLsizei',
                    'pipelines' => 'GLuint *',
                ],
            ],
            'glGetDoublei_v'              => [
                'virtual' => true,
                'name'    => 'getDoublei_v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'data'   => 'GLdouble *',
                ],
            ],
            'glGetFloati_v'               => [
                'virtual' => true,
                'name'    => 'getFloati_v',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'index'  => 'GLuint',
                    'data'   => 'GLfloat *',
                ],
            ],
            'glGetProgramBinary'          => [
                'virtual' => true,
                'name'    => 'getProgramBinary',
                'type'    => 'void',
                'args'    => [
                    'program'      => 'GLuint',
                    'bufSize'      => 'GLsizei',
                    'length'       => 'GLsizei *',
                    'binaryFormat' => 'GLenum *',
                    'binary'       => 'void *',
                ],
            ],
            'glGetProgramPipelineInfoLog' => [
                'virtual' => true,
                'name'    => 'getProgramPipelineInfoLog',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                    'bufSize'  => 'GLsizei',
                    'length'   => 'GLsizei *',
                    'infoLog'  => 'GLchar *',
                ],
            ],
            'glGetProgramPipelineiv'      => [
                'virtual' => true,
                'name'    => 'getProgramPipelineiv',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                    'pname'    => 'GLenum',
                    'params'   => 'GLint *',
                ],
            ],
            'glGetShaderPrecisionFormat'  => [
                'virtual' => true,
                'name'    => 'getShaderPrecisionFormat',
                'type'    => 'void',
                'args'    => [
                    'shadertype'    => 'GLenum',
                    'precisiontype' => 'GLenum',
                    'range'         => 'GLint *',
                    'precision'     => 'GLint *',
                ],
            ],
            'glGetVertexAttribLdv'        => [
                'virtual' => true,
                'name'    => 'getVertexAttribLdv',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLdouble *',
                ],
            ],
            'glIsProgramPipeline'         => [
                'virtual' => true,
                'name'    => 'isProgramPipeline',
                'type'    => 'GLboolean',
                'args'    => [
                    'pipeline' => 'GLuint',
                ],
            ],
            'glProgramBinary'             => [
                'virtual' => true,
                'name'    => 'programBinary',
                'type'    => 'void',
                'args'    => [
                    'program'      => 'GLuint',
                    'binaryFormat' => 'GLenum',
                    'binary'       => 'const void *',
                    'length'       => 'GLsizei',
                ],
            ],
            'glProgramParameteri'         => [
                'virtual' => true,
                'name'    => 'programParameteri',
                'type'    => 'void',
                'args'    => [
                    'program' => 'GLuint',
                    'pname'   => 'GLenum',
                    'value'   => 'GLint',
                ],
            ],
            'glProgramUniform1d'          => [
                'virtual' => true,
                'name'    => 'programUniform1d',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLdouble',
                ],
            ],
            'glProgramUniform1dv'         => [
                'virtual' => true,
                'name'    => 'programUniform1dv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glProgramUniform1f'          => [
                'virtual' => true,
                'name'    => 'programUniform1f',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                ],
            ],
            'glProgramUniform1fv'         => [
                'virtual' => true,
                'name'    => 'programUniform1fv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glProgramUniform1i'          => [
                'virtual' => true,
                'name'    => 'programUniform1i',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                ],
            ],
            'glProgramUniform1iv'         => [
                'virtual' => true,
                'name'    => 'programUniform1iv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glProgramUniform1ui'         => [
                'virtual' => true,
                'name'    => 'programUniform1ui',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                ],
            ],
            'glProgramUniform1uiv'        => [
                'virtual' => true,
                'name'    => 'programUniform1uiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glProgramUniform2d'          => [
                'virtual' => true,
                'name'    => 'programUniform2d',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLdouble',
                    'v1'       => 'GLdouble',
                ],
            ],
            'glProgramUniform2dv'         => [
                'virtual' => true,
                'name'    => 'programUniform2dv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glProgramUniform2f'          => [
                'virtual' => true,
                'name'    => 'programUniform2f',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                ],
            ],
            'glProgramUniform2fv'         => [
                'virtual' => true,
                'name'    => 'programUniform2fv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glProgramUniform2i'          => [
                'virtual' => true,
                'name'    => 'programUniform2i',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                ],
            ],
            'glProgramUniform2iv'         => [
                'virtual' => true,
                'name'    => 'programUniform2iv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glProgramUniform2ui'         => [
                'virtual' => true,
                'name'    => 'programUniform2ui',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                ],
            ],
            'glProgramUniform2uiv'        => [
                'virtual' => true,
                'name'    => 'programUniform2uiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glProgramUniform3d'          => [
                'virtual' => true,
                'name'    => 'programUniform3d',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLdouble',
                    'v1'       => 'GLdouble',
                    'v2'       => 'GLdouble',
                ],
            ],
            'glProgramUniform3dv'         => [
                'virtual' => true,
                'name'    => 'programUniform3dv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glProgramUniform3f'          => [
                'virtual' => true,
                'name'    => 'programUniform3f',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                    'v2'       => 'GLfloat',
                ],
            ],
            'glProgramUniform3fv'         => [
                'virtual' => true,
                'name'    => 'programUniform3fv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glProgramUniform3i'          => [
                'virtual' => true,
                'name'    => 'programUniform3i',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                    'v2'       => 'GLint',
                ],
            ],
            'glProgramUniform3iv'         => [
                'virtual' => true,
                'name'    => 'programUniform3iv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glProgramUniform3ui'         => [
                'virtual' => true,
                'name'    => 'programUniform3ui',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                    'v2'       => 'GLuint',
                ],
            ],
            'glProgramUniform3uiv'        => [
                'virtual' => true,
                'name'    => 'programUniform3uiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glProgramUniform4d'          => [
                'virtual' => true,
                'name'    => 'programUniform4d',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLdouble',
                    'v1'       => 'GLdouble',
                    'v2'       => 'GLdouble',
                    'v3'       => 'GLdouble',
                ],
            ],
            'glProgramUniform4dv'         => [
                'virtual' => true,
                'name'    => 'programUniform4dv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLdouble *',
                ],
            ],
            'glProgramUniform4f'          => [
                'virtual' => true,
                'name'    => 'programUniform4f',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLfloat',
                    'v1'       => 'GLfloat',
                    'v2'       => 'GLfloat',
                    'v3'       => 'GLfloat',
                ],
            ],
            'glProgramUniform4fv'         => [
                'virtual' => true,
                'name'    => 'programUniform4fv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLfloat *',
                ],
            ],
            'glProgramUniform4i'          => [
                'virtual' => true,
                'name'    => 'programUniform4i',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLint',
                    'v1'       => 'GLint',
                    'v2'       => 'GLint',
                    'v3'       => 'GLint',
                ],
            ],
            'glProgramUniform4iv'         => [
                'virtual' => true,
                'name'    => 'programUniform4iv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLint *',
                ],
            ],
            'glProgramUniform4ui'         => [
                'virtual' => true,
                'name'    => 'programUniform4ui',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'v0'       => 'GLuint',
                    'v1'       => 'GLuint',
                    'v2'       => 'GLuint',
                    'v3'       => 'GLuint',
                ],
            ],
            'glProgramUniform4uiv'        => [
                'virtual' => true,
                'name'    => 'programUniform4uiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'count'    => 'GLsizei',
                    'value'    => 'const GLuint *',
                ],
            ],
            'glProgramUniformMatrix2dv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix2fv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix2x3dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2x3dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix2x3fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2x3fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix2x4dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2x4dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix2x4fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix2x4fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix3dv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix3fv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix3x2dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3x2dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix3x2fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3x2fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix3x4dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3x4dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix3x4fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix3x4fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix4dv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix4fv'   => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix4x2dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4x2dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix4x2fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4x2fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glProgramUniformMatrix4x3dv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4x3dv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLdouble *',
                ],
            ],
            'glProgramUniformMatrix4x3fv' => [
                'virtual' => true,
                'name'    => 'programUniformMatrix4x3fv',
                'type'    => 'void',
                'args'    => [
                    'program'   => 'GLuint',
                    'location'  => 'GLint',
                    'count'     => 'GLsizei',
                    'transpose' => 'GLboolean',
                    'value'     => 'const GLfloat *',
                ],
            ],
            'glReleaseShaderCompiler'     => [
                'virtual' => true,
                'name'    => 'releaseShaderCompiler',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glScissorArrayv'             => [
                'virtual' => true,
                'name'    => 'scissorArrayv',
                'type'    => 'void',
                'args'    => [
                    'first' => 'GLuint',
                    'count' => 'GLsizei',
                    'v'     => 'const GLint *',
                ],
            ],
            'glScissorIndexed'            => [
                'virtual' => true,
                'name'    => 'scissorIndexed',
                'type'    => 'void',
                'args'    => [
                    'index'  => 'GLuint',
                    'left'   => 'GLint',
                    'bottom' => 'GLint',
                    'width'  => 'GLsizei',
                    'height' => 'GLsizei',
                ],
            ],
            'glScissorIndexedv'           => [
                'virtual' => true,
                'name'    => 'scissorIndexedv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLint *',
                ],
            ],
            'glShaderBinary'              => [
                'virtual' => true,
                'name'    => 'shaderBinary',
                'type'    => 'void',
                'args'    => [
                    'count'        => 'GLsizei',
                    'shaders'      => 'const GLuint *',
                    'binaryformat' => 'GLenum',
                    'binary'       => 'const void *',
                    'length'       => 'GLsizei',
                ],
            ],
            'glUseProgramStages'          => [
                'virtual' => true,
                'name'    => 'useProgramStages',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                    'stages'   => 'GLbitfield',
                    'program'  => 'GLuint',
                ],
            ],
            'glValidateProgramPipeline'   => [
                'virtual' => true,
                'name'    => 'validateProgramPipeline',
                'type'    => 'void',
                'args'    => [
                    'pipeline' => 'GLuint',
                ],
            ],
            'glVertexAttribL1d'           => [
                'virtual' => true,
                'name'    => 'vertexAttribL1d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                ],
            ],
            'glVertexAttribL1dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttribL1dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttribL2d'           => [
                'virtual' => true,
                'name'    => 'vertexAttribL2d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                ],
            ],
            'glVertexAttribL2dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttribL2dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttribL3d'           => [
                'virtual' => true,
                'name'    => 'vertexAttribL3d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                    'z'     => 'GLdouble',
                ],
            ],
            'glVertexAttribL3dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttribL3dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttribL4d'           => [
                'virtual' => true,
                'name'    => 'vertexAttribL4d',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLdouble',
                    'y'     => 'GLdouble',
                    'z'     => 'GLdouble',
                    'w'     => 'GLdouble',
                ],
            ],
            'glVertexAttribL4dv'          => [
                'virtual' => true,
                'name'    => 'vertexAttribL4dv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLdouble *',
                ],
            ],
            'glVertexAttribLPointer'      => [
                'virtual' => true,
                'name'    => 'vertexAttribLPointer',
                'type'    => 'void',
                'args'    => [
                    'index'   => 'GLuint',
                    'size'    => 'GLint',
                    'type'    => 'GLenum',
                    'stride'  => 'GLsizei',
                    'pointer' => 'const void *',
                ],
            ],
            'glViewportArrayv'            => [
                'virtual' => true,
                'name'    => 'viewportArrayv',
                'type'    => 'void',
                'args'    => [
                    'first' => 'GLuint',
                    'count' => 'GLsizei',
                    'v'     => 'const GLfloat *',
                ],
            ],
            'glViewportIndexedf'          => [
                'virtual' => true,
                'name'    => 'viewportIndexedf',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'x'     => 'GLfloat',
                    'y'     => 'GLfloat',
                    'w'     => 'GLfloat',
                    'h'     => 'GLfloat',
                ],
            ],
            'glViewportIndexedfv'         => [
                'virtual' => true,
                'name'    => 'viewportIndexedfv',
                'type'    => 'void',
                'args'    => [
                    'index' => 'GLuint',
                    'v'     => 'const GLfloat *',
                ],
            ],
        ],
    ],
    'GL42' => [
        'name'      => 'Serafim\\OpenGL\\GL42',
        'extends'   => 'Serafim\\OpenGL\\GL41',
        'version'   => '4.2',
        'comment'   => 'The OpenGL functionality up to version 4.2. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.2 implementations support revision 4.20 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_texture_compression_bptc @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_compression_bptc.txt
- ARB_compressed_texture_pixel_storage @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_compressed_texture_pixel_storage.txt
- ARB_shader_atomic_counters @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_atomic_counters.txt
- ARB_texture_storage @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_storage.txt
- ARB_transform_feedback_instanced @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_transform_feedback_instanced.txt
- ARB_base_instance @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_base_instance.txt
- ARB_shader_image_load_store @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_image_load_store.txt
- ARB_conservative_depth @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conservative_depth.txt
- ARB_shading_language_420pack @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shading_language_420pack.txt
- ARB_internalformat_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_internalformat_query.txt
- ARB_map_buffer_alignment @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_map_buffer_alignment.txt',
        'constants' => [
            'GL_COPY_READ_BUFFER_BINDING'                                   => 36662,
            'GL_COPY_WRITE_BUFFER_BINDING'                                  => 36663,
            'GL_TRANSFORM_FEEDBACK_ACTIVE'                                  => 36388,
            'GL_TRANSFORM_FEEDBACK_PAUSED'                                  => 36387,
            'GL_UNPACK_COMPRESSED_BLOCK_WIDTH'                              => 37159,
            'GL_UNPACK_COMPRESSED_BLOCK_HEIGHT'                             => 37160,
            'GL_UNPACK_COMPRESSED_BLOCK_DEPTH'                              => 37161,
            'GL_UNPACK_COMPRESSED_BLOCK_SIZE'                               => 37162,
            'GL_PACK_COMPRESSED_BLOCK_WIDTH'                                => 37163,
            'GL_PACK_COMPRESSED_BLOCK_HEIGHT'                               => 37164,
            'GL_PACK_COMPRESSED_BLOCK_DEPTH'                                => 37165,
            'GL_PACK_COMPRESSED_BLOCK_SIZE'                                 => 37166,
            'GL_NUM_SAMPLE_COUNTS'                                          => 37760,
            'GL_MIN_MAP_BUFFER_ALIGNMENT'                                   => 37052,
            'GL_ATOMIC_COUNTER_BUFFER'                                      => 37568,
            'GL_ATOMIC_COUNTER_BUFFER_BINDING'                              => 37569,
            'GL_ATOMIC_COUNTER_BUFFER_START'                                => 37570,
            'GL_ATOMIC_COUNTER_BUFFER_SIZE'                                 => 37571,
            'GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE'                            => 37572,
            'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS'               => 37573,
            'GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES'        => 37574,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER'          => 37575,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER'    => 37576,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER' => 37577,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER'        => 37578,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER'        => 37579,
            'GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS'                          => 37580,
            'GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS'                    => 37581,
            'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS'                 => 37582,
            'GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS'                        => 37583,
            'GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS'                        => 37584,
            'GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS'                        => 37585,
            'GL_MAX_VERTEX_ATOMIC_COUNTERS'                                 => 37586,
            'GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS'                           => 37587,
            'GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS'                        => 37588,
            'GL_MAX_GEOMETRY_ATOMIC_COUNTERS'                               => 37589,
            'GL_MAX_FRAGMENT_ATOMIC_COUNTERS'                               => 37590,
            'GL_MAX_COMBINED_ATOMIC_COUNTERS'                               => 37591,
            'GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE'                             => 37592,
            'GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS'                         => 37596,
            'GL_ACTIVE_ATOMIC_COUNTER_BUFFERS'                              => 37593,
            'GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX'                        => 37594,
            'GL_UNSIGNED_INT_ATOMIC_COUNTER'                                => 37595,
            'GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT'                            => 1,
            'GL_ELEMENT_ARRAY_BARRIER_BIT'                                  => 2,
            'GL_UNIFORM_BARRIER_BIT'                                        => 4,
            'GL_TEXTURE_FETCH_BARRIER_BIT'                                  => 8,
            'GL_SHADER_IMAGE_ACCESS_BARRIER_BIT'                            => 32,
            'GL_COMMAND_BARRIER_BIT'                                        => 64,
            'GL_PIXEL_BUFFER_BARRIER_BIT'                                   => 128,
            'GL_TEXTURE_UPDATE_BARRIER_BIT'                                 => 256,
            'GL_BUFFER_UPDATE_BARRIER_BIT'                                  => 512,
            'GL_FRAMEBUFFER_BARRIER_BIT'                                    => 1024,
            'GL_TRANSFORM_FEEDBACK_BARRIER_BIT'                             => 2048,
            'GL_ATOMIC_COUNTER_BARRIER_BIT'                                 => 4096,
            'GL_ALL_BARRIER_BITS'                                           => 4294967295,
            'GL_MAX_IMAGE_UNITS'                                            => 36664,
            'GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS'              => 36665,
            'GL_IMAGE_BINDING_NAME'                                         => 36666,
            'GL_IMAGE_BINDING_LEVEL'                                        => 36667,
            'GL_IMAGE_BINDING_LAYERED'                                      => 36668,
            'GL_IMAGE_BINDING_LAYER'                                        => 36669,
            'GL_IMAGE_BINDING_ACCESS'                                       => 36670,
            'GL_IMAGE_1D'                                                   => 36940,
            'GL_IMAGE_2D'                                                   => 36941,
            'GL_IMAGE_3D'                                                   => 36942,
            'GL_IMAGE_2D_RECT'                                              => 36943,
            'GL_IMAGE_CUBE'                                                 => 36944,
            'GL_IMAGE_BUFFER'                                               => 36945,
            'GL_IMAGE_1D_ARRAY'                                             => 36946,
            'GL_IMAGE_2D_ARRAY'                                             => 36947,
            'GL_IMAGE_CUBE_MAP_ARRAY'                                       => 36948,
            'GL_IMAGE_2D_MULTISAMPLE'                                       => 36949,
            'GL_IMAGE_2D_MULTISAMPLE_ARRAY'                                 => 36950,
            'GL_INT_IMAGE_1D'                                               => 36951,
            'GL_INT_IMAGE_2D'                                               => 36952,
            'GL_INT_IMAGE_3D'                                               => 36953,
            'GL_INT_IMAGE_2D_RECT'                                          => 36954,
            'GL_INT_IMAGE_CUBE'                                             => 36955,
            'GL_INT_IMAGE_BUFFER'                                           => 36956,
            'GL_INT_IMAGE_1D_ARRAY'                                         => 36957,
            'GL_INT_IMAGE_2D_ARRAY'                                         => 36958,
            'GL_INT_IMAGE_CUBE_MAP_ARRAY'                                   => 36959,
            'GL_INT_IMAGE_2D_MULTISAMPLE'                                   => 36960,
            'GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY'                             => 36961,
            'GL_UNSIGNED_INT_IMAGE_1D'                                      => 36962,
            'GL_UNSIGNED_INT_IMAGE_2D'                                      => 36963,
            'GL_UNSIGNED_INT_IMAGE_3D'                                      => 36964,
            'GL_UNSIGNED_INT_IMAGE_2D_RECT'                                 => 36965,
            'GL_UNSIGNED_INT_IMAGE_CUBE'                                    => 36966,
            'GL_UNSIGNED_INT_IMAGE_BUFFER'                                  => 36967,
            'GL_UNSIGNED_INT_IMAGE_1D_ARRAY'                                => 36968,
            'GL_UNSIGNED_INT_IMAGE_2D_ARRAY'                                => 36969,
            'GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY'                          => 36970,
            'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE'                          => 36971,
            'GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY'                    => 36972,
            'GL_MAX_IMAGE_SAMPLES'                                          => 36973,
            'GL_IMAGE_BINDING_FORMAT'                                       => 36974,
            'GL_IMAGE_FORMAT_COMPATIBILITY_TYPE'                            => 37063,
            'GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE'                         => 37064,
            'GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS'                        => 37065,
            'GL_MAX_VERTEX_IMAGE_UNIFORMS'                                  => 37066,
            'GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS'                            => 37067,
            'GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS'                         => 37068,
            'GL_MAX_GEOMETRY_IMAGE_UNIFORMS'                                => 37069,
            'GL_MAX_FRAGMENT_IMAGE_UNIFORMS'                                => 37070,
            'GL_MAX_COMBINED_IMAGE_UNIFORMS'                                => 37071,
            'GL_COMPRESSED_RGBA_BPTC_UNORM'                                 => 36492,
            'GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM'                           => 36493,
            'GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT'                           => 36494,
            'GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT'                         => 36495,
            'GL_TEXTURE_IMMUTABLE_FORMAT'                                   => 37167,
        ],
        'methods'   => [
            'glBindImageTexture'                            => [
                'virtual' => true,
                'name'    => 'bindImageTexture',
                'type'    => 'void',
                'args'    => [
                    'unit'    => 'GLuint',
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'layered' => 'GLboolean',
                    'layer'   => 'GLint',
                    'access'  => 'GLenum',
                    'format'  => 'GLenum',
                ],
            ],
            'glDrawArraysInstancedBaseInstance'             => [
                'virtual' => true,
                'name'    => 'drawArraysInstancedBaseInstance',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'first'         => 'GLint',
                    'count'         => 'GLsizei',
                    'instancecount' => 'GLsizei',
                    'baseinstance'  => 'GLuint',
                ],
            ],
            'glDrawElementsInstancedBaseInstance'           => [
                'virtual' => true,
                'name'    => 'drawElementsInstancedBaseInstance',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'count'         => 'GLsizei',
                    'type'          => 'GLenum',
                    'indices'       => 'const void *',
                    'instancecount' => 'GLsizei',
                    'baseinstance'  => 'GLuint',
                ],
            ],
            'glDrawElementsInstancedBaseVertexBaseInstance' => [
                'virtual' => true,
                'name'    => 'drawElementsInstancedBaseVertexBaseInstance',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'count'         => 'GLsizei',
                    'type'          => 'GLenum',
                    'indices'       => 'const void *',
                    'instancecount' => 'GLsizei',
                    'basevertex'    => 'GLint',
                    'baseinstance'  => 'GLuint',
                ],
            ],
            'glDrawTransformFeedbackInstanced'              => [
                'virtual' => true,
                'name'    => 'drawTransformFeedbackInstanced',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'id'            => 'GLuint',
                    'instancecount' => 'GLsizei',
                ],
            ],
            'glDrawTransformFeedbackStreamInstanced'        => [
                'virtual' => true,
                'name'    => 'drawTransformFeedbackStreamInstanced',
                'type'    => 'void',
                'args'    => [
                    'mode'          => 'GLenum',
                    'id'            => 'GLuint',
                    'stream'        => 'GLuint',
                    'instancecount' => 'GLsizei',
                ],
            ],
            'glGetActiveAtomicCounterBufferiv'              => [
                'virtual' => true,
                'name'    => 'getActiveAtomicCounterBufferiv',
                'type'    => 'void',
                'args'    => [
                    'program'     => 'GLuint',
                    'bufferIndex' => 'GLuint',
                    'pname'       => 'GLenum',
                    'params'      => 'GLint *',
                ],
            ],
            'glGetInternalformativ'                         => [
                'virtual' => true,
                'name'    => 'getInternalformativ',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'pname'          => 'GLenum',
                    'bufSize'        => 'GLsizei',
                    'params'         => 'GLint *',
                ],
            ],
            'glMemoryBarrier'                               => [
                'virtual' => true,
                'name'    => 'memoryBarrier',
                'type'    => 'void',
                'args'    => [
                    'barriers' => 'GLbitfield',
                ],
            ],
            'glTexStorage1D'                                => [
                'virtual' => true,
                'name'    => 'texStorage1D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                ],
            ],
            'glTexStorage2D'                                => [
                'virtual' => true,
                'name'    => 'texStorage2D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glTexStorage3D'                                => [
                'virtual' => true,
                'name'    => 'texStorage3D',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'depth'          => 'GLsizei',
                ],
            ],
        ],
    ],
    'GL43' => [
        'name'      => 'Serafim\\OpenGL\\GL43',
        'extends'   => 'Serafim\\OpenGL\\GL42',
        'version'   => '4.3',
        'comment'   => 'The OpenGL functionality up to version 4.3. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.3 implementations support revision 4.30 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_arrays_of_arrays @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_arrays_of_arrays.txt
- ARB_ES3_compatibility @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_ES3_compatibility.txt
- ARB_clear_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_clear_buffer_object.txt
- ARB_compute_shader @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_compute_shader.txt
- ARB_copy_image @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_copy_image.txt
- EXT_debug_label @see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_debug_label.txt
- ARB_debug_output @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_debug_output.txt
- ARB_explicit_uniform_location @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_explicit_uniform_location.txt
- ARB_fragment_layer_viewport @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_fragment_layer_viewport.txt
- ARB_framebuffer_no_attachments @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_framebuffer_no_attachments.txt
- ARB_internalformat_query2 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_internalformat_query2.txt
- ARB_invalidate_subdata @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_invalidate_subdata.txt
- ARB_multi_draw_indirect @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_multi_draw_indirect.txt
- ARB_program_interface_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_program_interface_query.txt
- ARB_robust_buffer_access_behavior @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_robust_buffer_access_behavior.txt
- ARB_shader_image_size @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_image_size.txt
- ARB_shader_storage_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_storage_buffer_object.txt
- ARB_stencil_texturing @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_stencil_texturing.txt
- ARB_texture_buffer_range @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_buffer_range.txt
- ARB_texture_query_levels @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_query_levels.txt
- ARB_texture_storage_multisample @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_storage_multisample.txt
- ARB_texture_view @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_view.txt
- ARB_vertex_attrib_binding @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_attrib_binding.txt',
        'constants' => [
            'GL_NUM_SHADING_LANGUAGE_VERSIONS'                      => 33513,
            'GL_VERTEX_ATTRIB_ARRAY_LONG'                           => 34638,
            'GL_COMPRESSED_RGB8_ETC2'                               => 37492,
            'GL_COMPRESSED_SRGB8_ETC2'                              => 37493,
            'GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2'           => 37494,
            'GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2'          => 37495,
            'GL_COMPRESSED_RGBA8_ETC2_EAC'                          => 37496,
            'GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC'                   => 37497,
            'GL_COMPRESSED_R11_EAC'                                 => 37488,
            'GL_COMPRESSED_SIGNED_R11_EAC'                          => 37489,
            'GL_COMPRESSED_RG11_EAC'                                => 37490,
            'GL_COMPRESSED_SIGNED_RG11_EAC'                         => 37491,
            'GL_PRIMITIVE_RESTART_FIXED_INDEX'                      => 36201,
            'GL_ANY_SAMPLES_PASSED_CONSERVATIVE'                    => 36202,
            'GL_MAX_ELEMENT_INDEX'                                  => 36203,
            'GL_COMPUTE_SHADER'                                     => 37305,
            'GL_MAX_COMPUTE_UNIFORM_BLOCKS'                         => 37307,
            'GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS'                    => 37308,
            'GL_MAX_COMPUTE_IMAGE_UNIFORMS'                         => 37309,
            'GL_MAX_COMPUTE_SHARED_MEMORY_SIZE'                     => 33378,
            'GL_MAX_COMPUTE_UNIFORM_COMPONENTS'                     => 33379,
            'GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS'                 => 33380,
            'GL_MAX_COMPUTE_ATOMIC_COUNTERS'                        => 33381,
            'GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS'            => 33382,
            'GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS'                 => 37099,
            'GL_MAX_COMPUTE_WORK_GROUP_COUNT'                       => 37310,
            'GL_MAX_COMPUTE_WORK_GROUP_SIZE'                        => 37311,
            'GL_COMPUTE_WORK_GROUP_SIZE'                            => 33383,
            'GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER'         => 37100,
            'GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER' => 37101,
            'GL_DISPATCH_INDIRECT_BUFFER'                           => 37102,
            'GL_DISPATCH_INDIRECT_BUFFER_BINDING'                   => 37103,
            'GL_COMPUTE_SHADER_BIT'                                 => 32,
            'GL_DEBUG_OUTPUT_SYNCHRONOUS'                           => 33346,
            'GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH'                   => 33347,
            'GL_DEBUG_CALLBACK_FUNCTION'                            => 33348,
            'GL_DEBUG_CALLBACK_USER_PARAM'                          => 33349,
            'GL_DEBUG_SOURCE_API'                                   => 33350,
            'GL_DEBUG_SOURCE_WINDOW_SYSTEM'                         => 33351,
            'GL_DEBUG_SOURCE_SHADER_COMPILER'                       => 33352,
            'GL_DEBUG_SOURCE_THIRD_PARTY'                           => 33353,
            'GL_DEBUG_SOURCE_APPLICATION'                           => 33354,
            'GL_DEBUG_SOURCE_OTHER'                                 => 33355,
            'GL_DEBUG_TYPE_ERROR'                                   => 33356,
            'GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR'                     => 33357,
            'GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR'                      => 33358,
            'GL_DEBUG_TYPE_PORTABILITY'                             => 33359,
            'GL_DEBUG_TYPE_PERFORMANCE'                             => 33360,
            'GL_DEBUG_TYPE_OTHER'                                   => 33361,
            'GL_MAX_DEBUG_MESSAGE_LENGTH'                           => 37187,
            'GL_MAX_DEBUG_LOGGED_MESSAGES'                          => 37188,
            'GL_DEBUG_LOGGED_MESSAGES'                              => 37189,
            'GL_DEBUG_SEVERITY_HIGH'                                => 37190,
            'GL_DEBUG_SEVERITY_MEDIUM'                              => 37191,
            'GL_DEBUG_SEVERITY_LOW'                                 => 37192,
            'GL_DEBUG_TYPE_MARKER'                                  => 33384,
            'GL_DEBUG_TYPE_PUSH_GROUP'                              => 33385,
            'GL_DEBUG_TYPE_POP_GROUP'                               => 33386,
            'GL_DEBUG_SEVERITY_NOTIFICATION'                        => 33387,
            'GL_MAX_DEBUG_GROUP_STACK_DEPTH'                        => 33388,
            'GL_DEBUG_GROUP_STACK_DEPTH'                            => 33389,
            'GL_BUFFER'                                             => 33504,
            'GL_SHADER'                                             => 33505,
            'GL_PROGRAM'                                            => 33506,
            'GL_QUERY'                                              => 33507,
            'GL_PROGRAM_PIPELINE'                                   => 33508,
            'GL_SAMPLER'                                            => 33510,
            'GL_MAX_LABEL_LENGTH'                                   => 33512,
            'GL_DEBUG_OUTPUT'                                       => 37600,
            'GL_CONTEXT_FLAG_DEBUG_BIT'                             => 2,
            'GL_MAX_UNIFORM_LOCATIONS'                              => 33390,
            'GL_FRAMEBUFFER_DEFAULT_WIDTH'                          => 37648,
            'GL_FRAMEBUFFER_DEFAULT_HEIGHT'                         => 37649,
            'GL_FRAMEBUFFER_DEFAULT_LAYERS'                         => 37650,
            'GL_FRAMEBUFFER_DEFAULT_SAMPLES'                        => 37651,
            'GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS'         => 37652,
            'GL_MAX_FRAMEBUFFER_WIDTH'                              => 37653,
            'GL_MAX_FRAMEBUFFER_HEIGHT'                             => 37654,
            'GL_MAX_FRAMEBUFFER_LAYERS'                             => 37655,
            'GL_MAX_FRAMEBUFFER_SAMPLES'                            => 37656,
            'GL_INTERNALFORMAT_SUPPORTED'                           => 33391,
            'GL_INTERNALFORMAT_PREFERRED'                           => 33392,
            'GL_INTERNALFORMAT_RED_SIZE'                            => 33393,
            'GL_INTERNALFORMAT_GREEN_SIZE'                          => 33394,
            'GL_INTERNALFORMAT_BLUE_SIZE'                           => 33395,
            'GL_INTERNALFORMAT_ALPHA_SIZE'                          => 33396,
            'GL_INTERNALFORMAT_DEPTH_SIZE'                          => 33397,
            'GL_INTERNALFORMAT_STENCIL_SIZE'                        => 33398,
            'GL_INTERNALFORMAT_SHARED_SIZE'                         => 33399,
            'GL_INTERNALFORMAT_RED_TYPE'                            => 33400,
            'GL_INTERNALFORMAT_GREEN_TYPE'                          => 33401,
            'GL_INTERNALFORMAT_BLUE_TYPE'                           => 33402,
            'GL_INTERNALFORMAT_ALPHA_TYPE'                          => 33403,
            'GL_INTERNALFORMAT_DEPTH_TYPE'                          => 33404,
            'GL_INTERNALFORMAT_STENCIL_TYPE'                        => 33405,
            'GL_MAX_WIDTH'                                          => 33406,
            'GL_MAX_HEIGHT'                                         => 33407,
            'GL_MAX_DEPTH'                                          => 33408,
            'GL_MAX_LAYERS'                                         => 33409,
            'GL_MAX_COMBINED_DIMENSIONS'                            => 33410,
            'GL_COLOR_COMPONENTS'                                   => 33411,
            'GL_DEPTH_COMPONENTS'                                   => 33412,
            'GL_STENCIL_COMPONENTS'                                 => 33413,
            'GL_COLOR_RENDERABLE'                                   => 33414,
            'GL_DEPTH_RENDERABLE'                                   => 33415,
            'GL_STENCIL_RENDERABLE'                                 => 33416,
            'GL_FRAMEBUFFER_RENDERABLE'                             => 33417,
            'GL_FRAMEBUFFER_RENDERABLE_LAYERED'                     => 33418,
            'GL_FRAMEBUFFER_BLEND'                                  => 33419,
            'GL_READ_PIXELS'                                        => 33420,
            'GL_READ_PIXELS_FORMAT'                                 => 33421,
            'GL_READ_PIXELS_TYPE'                                   => 33422,
            'GL_TEXTURE_IMAGE_FORMAT'                               => 33423,
            'GL_TEXTURE_IMAGE_TYPE'                                 => 33424,
            'GL_GET_TEXTURE_IMAGE_FORMAT'                           => 33425,
            'GL_GET_TEXTURE_IMAGE_TYPE'                             => 33426,
            'GL_MIPMAP'                                             => 33427,
            'GL_MANUAL_GENERATE_MIPMAP'                             => 33428,
            'GL_AUTO_GENERATE_MIPMAP'                               => 33429,
            'GL_COLOR_ENCODING'                                     => 33430,
            'GL_SRGB_READ'                                          => 33431,
            'GL_SRGB_WRITE'                                         => 33432,
            'GL_FILTER'                                             => 33434,
            'GL_VERTEX_TEXTURE'                                     => 33435,
            'GL_TESS_CONTROL_TEXTURE'                               => 33436,
            'GL_TESS_EVALUATION_TEXTURE'                            => 33437,
            'GL_GEOMETRY_TEXTURE'                                   => 33438,
            'GL_FRAGMENT_TEXTURE'                                   => 33439,
            'GL_COMPUTE_TEXTURE'                                    => 33440,
            'GL_TEXTURE_SHADOW'                                     => 33441,
            'GL_TEXTURE_GATHER'                                     => 33442,
            'GL_TEXTURE_GATHER_SHADOW'                              => 33443,
            'GL_SHADER_IMAGE_LOAD'                                  => 33444,
            'GL_SHADER_IMAGE_STORE'                                 => 33445,
            'GL_SHADER_IMAGE_ATOMIC'                                => 33446,
            'GL_IMAGE_TEXEL_SIZE'                                   => 33447,
            'GL_IMAGE_COMPATIBILITY_CLASS'                          => 33448,
            'GL_IMAGE_PIXEL_FORMAT'                                 => 33449,
            'GL_IMAGE_PIXEL_TYPE'                                   => 33450,
            'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST'                => 33452,
            'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST'              => 33453,
            'GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE'               => 33454,
            'GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE'             => 33455,
            'GL_TEXTURE_COMPRESSED_BLOCK_WIDTH'                     => 33457,
            'GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT'                    => 33458,
            'GL_TEXTURE_COMPRESSED_BLOCK_SIZE'                      => 33459,
            'GL_CLEAR_BUFFER'                                       => 33460,
            'GL_TEXTURE_VIEW'                                       => 33461,
            'GL_VIEW_COMPATIBILITY_CLASS'                           => 33462,
            'GL_FULL_SUPPORT'                                       => 33463,
            'GL_CAVEAT_SUPPORT'                                     => 33464,
            'GL_IMAGE_CLASS_4_X_32'                                 => 33465,
            'GL_IMAGE_CLASS_2_X_32'                                 => 33466,
            'GL_IMAGE_CLASS_1_X_32'                                 => 33467,
            'GL_IMAGE_CLASS_4_X_16'                                 => 33468,
            'GL_IMAGE_CLASS_2_X_16'                                 => 33469,
            'GL_IMAGE_CLASS_1_X_16'                                 => 33470,
            'GL_IMAGE_CLASS_4_X_8'                                  => 33471,
            'GL_IMAGE_CLASS_2_X_8'                                  => 33472,
            'GL_IMAGE_CLASS_1_X_8'                                  => 33473,
            'GL_IMAGE_CLASS_11_11_10'                               => 33474,
            'GL_IMAGE_CLASS_10_10_10_2'                             => 33475,
            'GL_VIEW_CLASS_128_BITS'                                => 33476,
            'GL_VIEW_CLASS_96_BITS'                                 => 33477,
            'GL_VIEW_CLASS_64_BITS'                                 => 33478,
            'GL_VIEW_CLASS_48_BITS'                                 => 33479,
            'GL_VIEW_CLASS_32_BITS'                                 => 33480,
            'GL_VIEW_CLASS_24_BITS'                                 => 33481,
            'GL_VIEW_CLASS_16_BITS'                                 => 33482,
            'GL_VIEW_CLASS_8_BITS'                                  => 33483,
            'GL_VIEW_CLASS_S3TC_DXT1_RGB'                           => 33484,
            'GL_VIEW_CLASS_S3TC_DXT1_RGBA'                          => 33485,
            'GL_VIEW_CLASS_S3TC_DXT3_RGBA'                          => 33486,
            'GL_VIEW_CLASS_S3TC_DXT5_RGBA'                          => 33487,
            'GL_VIEW_CLASS_RGTC1_RED'                               => 33488,
            'GL_VIEW_CLASS_RGTC2_RG'                                => 33489,
            'GL_VIEW_CLASS_BPTC_UNORM'                              => 33490,
            'GL_VIEW_CLASS_BPTC_FLOAT'                              => 33491,
            'GL_UNIFORM'                                            => 37601,
            'GL_UNIFORM_BLOCK'                                      => 37602,
            'GL_PROGRAM_INPUT'                                      => 37603,
            'GL_PROGRAM_OUTPUT'                                     => 37604,
            'GL_BUFFER_VARIABLE'                                    => 37605,
            'GL_SHADER_STORAGE_BLOCK'                               => 37606,
            'GL_VERTEX_SUBROUTINE'                                  => 37608,
            'GL_TESS_CONTROL_SUBROUTINE'                            => 37609,
            'GL_TESS_EVALUATION_SUBROUTINE'                         => 37610,
            'GL_GEOMETRY_SUBROUTINE'                                => 37611,
            'GL_FRAGMENT_SUBROUTINE'                                => 37612,
            'GL_COMPUTE_SUBROUTINE'                                 => 37613,
            'GL_VERTEX_SUBROUTINE_UNIFORM'                          => 37614,
            'GL_TESS_CONTROL_SUBROUTINE_UNIFORM'                    => 37615,
            'GL_TESS_EVALUATION_SUBROUTINE_UNIFORM'                 => 37616,
            'GL_GEOMETRY_SUBROUTINE_UNIFORM'                        => 37617,
            'GL_FRAGMENT_SUBROUTINE_UNIFORM'                        => 37618,
            'GL_COMPUTE_SUBROUTINE_UNIFORM'                         => 37619,
            'GL_TRANSFORM_FEEDBACK_VARYING'                         => 37620,
            'GL_ACTIVE_RESOURCES'                                   => 37621,
            'GL_MAX_NAME_LENGTH'                                    => 37622,
            'GL_MAX_NUM_ACTIVE_VARIABLES'                           => 37623,
            'GL_MAX_NUM_COMPATIBLE_SUBROUTINES'                     => 37624,
            'GL_NAME_LENGTH'                                        => 37625,
            'GL_TYPE'                                               => 37626,
            'GL_ARRAY_SIZE'                                         => 37627,
            'GL_OFFSET'                                             => 37628,
            'GL_BLOCK_INDEX'                                        => 37629,
            'GL_ARRAY_STRIDE'                                       => 37630,
            'GL_MATRIX_STRIDE'                                      => 37631,
            'GL_IS_ROW_MAJOR'                                       => 37632,
            'GL_ATOMIC_COUNTER_BUFFER_INDEX'                        => 37633,
            'GL_BUFFER_BINDING'                                     => 37634,
            'GL_BUFFER_DATA_SIZE'                                   => 37635,
            'GL_NUM_ACTIVE_VARIABLES'                               => 37636,
            'GL_ACTIVE_VARIABLES'                                   => 37637,
            'GL_REFERENCED_BY_VERTEX_SHADER'                        => 37638,
            'GL_REFERENCED_BY_TESS_CONTROL_SHADER'                  => 37639,
            'GL_REFERENCED_BY_TESS_EVALUATION_SHADER'               => 37640,
            'GL_REFERENCED_BY_GEOMETRY_SHADER'                      => 37641,
            'GL_REFERENCED_BY_FRAGMENT_SHADER'                      => 37642,
            'GL_REFERENCED_BY_COMPUTE_SHADER'                       => 37643,
            'GL_TOP_LEVEL_ARRAY_SIZE'                               => 37644,
            'GL_TOP_LEVEL_ARRAY_STRIDE'                             => 37645,
            'GL_LOCATION'                                           => 37646,
            'GL_LOCATION_INDEX'                                     => 37647,
            'GL_IS_PER_PATCH'                                       => 37607,
            'GL_SHADER_STORAGE_BUFFER'                              => 37074,
            'GL_SHADER_STORAGE_BUFFER_BINDING'                      => 37075,
            'GL_SHADER_STORAGE_BUFFER_START'                        => 37076,
            'GL_SHADER_STORAGE_BUFFER_SIZE'                         => 37077,
            'GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS'                   => 37078,
            'GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS'                 => 37079,
            'GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS'             => 37080,
            'GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS'          => 37081,
            'GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS'                 => 37082,
            'GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS'                  => 37083,
            'GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS'                 => 37084,
            'GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS'                 => 37085,
            'GL_MAX_SHADER_STORAGE_BLOCK_SIZE'                      => 37086,
            'GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT'             => 37087,
            'GL_SHADER_STORAGE_BARRIER_BIT'                         => 8192,
            'GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES'               => 36665,
            'GL_DEPTH_STENCIL_TEXTURE_MODE'                         => 37098,
            'GL_TEXTURE_BUFFER_OFFSET'                              => 37277,
            'GL_TEXTURE_BUFFER_SIZE'                                => 37278,
            'GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT'                    => 37279,
            'GL_TEXTURE_VIEW_MIN_LEVEL'                             => 33499,
            'GL_TEXTURE_VIEW_NUM_LEVELS'                            => 33500,
            'GL_TEXTURE_VIEW_MIN_LAYER'                             => 33501,
            'GL_TEXTURE_VIEW_NUM_LAYERS'                            => 33502,
            'GL_TEXTURE_IMMUTABLE_LEVELS'                           => 33503,
            'GL_VERTEX_ATTRIB_BINDING'                              => 33492,
            'GL_VERTEX_ATTRIB_RELATIVE_OFFSET'                      => 33493,
            'GL_VERTEX_BINDING_DIVISOR'                             => 33494,
            'GL_VERTEX_BINDING_OFFSET'                              => 33495,
            'GL_VERTEX_BINDING_STRIDE'                              => 33496,
            'GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET'                  => 33497,
            'GL_MAX_VERTEX_ATTRIB_BINDINGS'                         => 33498,
            'GL_VERTEX_BINDING_BUFFER'                              => 36687,
        ],
        'methods'   => [
            'glBindVertexBuffer'                => [
                'virtual' => true,
                'name'    => 'bindVertexBuffer',
                'type'    => 'void',
                'args'    => [
                    'bindingindex' => 'GLuint',
                    'buffer'       => 'GLuint',
                    'offset'       => 'GLintptr',
                    'stride'       => 'GLsizei',
                ],
            ],
            'glClearBufferData'                 => [
                'virtual' => true,
                'name'    => 'clearBufferData',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'data'           => 'const void *',
                ],
            ],
            'glClearBufferSubData'              => [
                'virtual' => true,
                'name'    => 'clearBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'offset'         => 'GLintptr',
                    'size'           => 'GLsizeiptr',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'data'           => 'const void *',
                ],
            ],
            'glCopyImageSubData'                => [
                'virtual' => true,
                'name'    => 'copyImageSubData',
                'type'    => 'void',
                'args'    => [
                    'srcName'   => 'GLuint',
                    'srcTarget' => 'GLenum',
                    'srcLevel'  => 'GLint',
                    'srcX'      => 'GLint',
                    'srcY'      => 'GLint',
                    'srcZ'      => 'GLint',
                    'dstName'   => 'GLuint',
                    'dstTarget' => 'GLenum',
                    'dstLevel'  => 'GLint',
                    'dstX'      => 'GLint',
                    'dstY'      => 'GLint',
                    'dstZ'      => 'GLint',
                    'srcWidth'  => 'GLsizei',
                    'srcHeight' => 'GLsizei',
                    'srcDepth'  => 'GLsizei',
                ],
            ],
            'glDebugMessageCallback'            => [
                'virtual' => true,
                'name'    => 'debugMessageCallback',
                'type'    => 'void',
                'args'    => [
                    'callback'  => 'GLDEBUGPROC',
                    'userParam' => 'const void *',
                ],
            ],
            'glDebugMessageControl'             => [
                'virtual' => true,
                'name'    => 'debugMessageControl',
                'type'    => 'void',
                'args'    => [
                    'source'   => 'GLenum',
                    'type'     => 'GLenum',
                    'severity' => 'GLenum',
                    'count'    => 'GLsizei',
                    'ids'      => 'const GLuint *',
                    'enabled'  => 'GLboolean',
                ],
            ],
            'glDebugMessageInsert'              => [
                'virtual' => true,
                'name'    => 'debugMessageInsert',
                'type'    => 'void',
                'args'    => [
                    'source'   => 'GLenum',
                    'type'     => 'GLenum',
                    'id'       => 'GLuint',
                    'severity' => 'GLenum',
                    'length'   => 'GLsizei',
                    'buf'      => 'const GLchar *',
                ],
            ],
            'glDispatchCompute'                 => [
                'virtual' => true,
                'name'    => 'dispatchCompute',
                'type'    => 'void',
                'args'    => [
                    'num_groups_x' => 'GLuint',
                    'num_groups_y' => 'GLuint',
                    'num_groups_z' => 'GLuint',
                ],
            ],
            'glDispatchComputeIndirect'         => [
                'virtual' => true,
                'name'    => 'dispatchComputeIndirect',
                'type'    => 'void',
                'args'    => [
                    'indirect' => 'GLintptr',
                ],
            ],
            'glFramebufferParameteri'           => [
                'virtual' => true,
                'name'    => 'framebufferParameteri',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'param'  => 'GLint',
                ],
            ],
            'glGetDebugMessageLog'              => [
                'virtual' => true,
                'name'    => 'getDebugMessageLog',
                'type'    => 'GLuint',
                'args'    => [
                    'count'      => 'GLuint',
                    'bufSize'    => 'GLsizei',
                    'sources'    => 'GLenum *',
                    'types'      => 'GLenum *',
                    'ids'        => 'GLuint *',
                    'severities' => 'GLenum *',
                    'lengths'    => 'GLsizei *',
                    'messageLog' => 'GLchar *',
                ],
            ],
            'glGetFramebufferParameteriv'       => [
                'virtual' => true,
                'name'    => 'getFramebufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetInternalformati64v'           => [
                'virtual' => true,
                'name'    => 'getInternalformati64v',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'pname'          => 'GLenum',
                    'bufSize'        => 'GLsizei',
                    'params'         => 'GLint64 *',
                ],
            ],
            'glGetObjectLabel'                  => [
                'virtual' => true,
                'name'    => 'getObjectLabel',
                'type'    => 'void',
                'args'    => [
                    'identifier' => 'GLenum',
                    'name'       => 'GLuint',
                    'bufSize'    => 'GLsizei',
                    'length'     => 'GLsizei *',
                    'label'      => 'GLchar *',
                ],
            ],
            'glGetObjectPtrLabel'               => [
                'virtual' => true,
                'name'    => 'getObjectPtrLabel',
                'type'    => 'void',
                'args'    => [
                    'ptr'     => 'const void *',
                    'bufSize' => 'GLsizei',
                    'length'  => 'GLsizei *',
                    'label'   => 'GLchar *',
                ],
            ],
            'glGetProgramInterfaceiv'           => [
                'virtual' => true,
                'name'    => 'getProgramInterfaceiv',
                'type'    => 'void',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'pname'            => 'GLenum',
                    'params'           => 'GLint *',
                ],
            ],
            'glGetProgramResourceIndex'         => [
                'virtual' => true,
                'name'    => 'getProgramResourceIndex',
                'type'    => 'GLuint',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'name'             => 'const GLchar *',
                ],
            ],
            'glGetProgramResourceLocation'      => [
                'virtual' => true,
                'name'    => 'getProgramResourceLocation',
                'type'    => 'GLint',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'name'             => 'const GLchar *',
                ],
            ],
            'glGetProgramResourceLocationIndex' => [
                'virtual' => true,
                'name'    => 'getProgramResourceLocationIndex',
                'type'    => 'GLint',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'name'             => 'const GLchar *',
                ],
            ],
            'glGetProgramResourceName'          => [
                'virtual' => true,
                'name'    => 'getProgramResourceName',
                'type'    => 'void',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'index'            => 'GLuint',
                    'bufSize'          => 'GLsizei',
                    'length'           => 'GLsizei *',
                    'name'             => 'GLchar *',
                ],
            ],
            'glGetProgramResourceiv'            => [
                'virtual' => true,
                'name'    => 'getProgramResourceiv',
                'type'    => 'void',
                'args'    => [
                    'program'          => 'GLuint',
                    'programInterface' => 'GLenum',
                    'index'            => 'GLuint',
                    'propCount'        => 'GLsizei',
                    'props'            => 'const GLenum *',
                    'bufSize'          => 'GLsizei',
                    'length'           => 'GLsizei *',
                    'params'           => 'GLint *',
                ],
            ],
            'glInvalidateBufferData'            => [
                'virtual' => true,
                'name'    => 'invalidateBufferData',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                ],
            ],
            'glInvalidateBufferSubData'         => [
                'virtual' => true,
                'name'    => 'invalidateBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'length' => 'GLsizeiptr',
                ],
            ],
            'glInvalidateFramebuffer'           => [
                'virtual' => true,
                'name'    => 'invalidateFramebuffer',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'numAttachments' => 'GLsizei',
                    'attachments'    => 'const GLenum *',
                ],
            ],
            'glInvalidateSubFramebuffer'        => [
                'virtual' => true,
                'name'    => 'invalidateSubFramebuffer',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'numAttachments' => 'GLsizei',
                    'attachments'    => 'const GLenum *',
                    'x'              => 'GLint',
                    'y'              => 'GLint',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glInvalidateTexImage'              => [
                'virtual' => true,
                'name'    => 'invalidateTexImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                ],
            ],
            'glInvalidateTexSubImage'           => [
                'virtual' => true,
                'name'    => 'invalidateTexSubImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                ],
            ],
            'glMultiDrawArraysIndirect'         => [
                'virtual' => true,
                'name'    => 'multiDrawArraysIndirect',
                'type'    => 'void',
                'args'    => [
                    'mode'      => 'GLenum',
                    'indirect'  => 'const void *',
                    'drawcount' => 'GLsizei',
                    'stride'    => 'GLsizei',
                ],
            ],
            'glMultiDrawElementsIndirect'       => [
                'virtual' => true,
                'name'    => 'multiDrawElementsIndirect',
                'type'    => 'void',
                'args'    => [
                    'mode'      => 'GLenum',
                    'type'      => 'GLenum',
                    'indirect'  => 'const void *',
                    'drawcount' => 'GLsizei',
                    'stride'    => 'GLsizei',
                ],
            ],
            'glObjectLabel'                     => [
                'virtual' => true,
                'name'    => 'objectLabel',
                'type'    => 'void',
                'args'    => [
                    'identifier' => 'GLenum',
                    'name'       => 'GLuint',
                    'length'     => 'GLsizei',
                    'label'      => 'const GLchar *',
                ],
            ],
            'glObjectPtrLabel'                  => [
                'virtual' => true,
                'name'    => 'objectPtrLabel',
                'type'    => 'void',
                'args'    => [
                    'ptr'    => 'const void *',
                    'length' => 'GLsizei',
                    'label'  => 'const GLchar *',
                ],
            ],
            'glPopDebugGroup'                   => [
                'virtual' => true,
                'name'    => 'popDebugGroup',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glPushDebugGroup'                  => [
                'virtual' => true,
                'name'    => 'pushDebugGroup',
                'type'    => 'void',
                'args'    => [
                    'source'  => 'GLenum',
                    'id'      => 'GLuint',
                    'length'  => 'GLsizei',
                    'message' => 'const GLchar *',
                ],
            ],
            'glShaderStorageBlockBinding'       => [
                'virtual' => true,
                'name'    => 'shaderStorageBlockBinding',
                'type'    => 'void',
                'args'    => [
                    'program'             => 'GLuint',
                    'storageBlockIndex'   => 'GLuint',
                    'storageBlockBinding' => 'GLuint',
                ],
            ],
            'glTexBufferRange'                  => [
                'virtual' => true,
                'name'    => 'texBufferRange',
                'type'    => 'void',
                'args'    => [
                    'target'         => 'GLenum',
                    'internalformat' => 'GLenum',
                    'buffer'         => 'GLuint',
                    'offset'         => 'GLintptr',
                    'size'           => 'GLsizeiptr',
                ],
            ],
            'glTexStorage2DMultisample'         => [
                'virtual' => true,
                'name'    => 'texStorage2DMultisample',
                'type'    => 'void',
                'args'    => [
                    'target'               => 'GLenum',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glTexStorage3DMultisample'         => [
                'virtual' => true,
                'name'    => 'texStorage3DMultisample',
                'type'    => 'void',
                'args'    => [
                    'target'               => 'GLenum',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'depth'                => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glTextureView'                     => [
                'virtual' => true,
                'name'    => 'textureView',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'target'         => 'GLenum',
                    'origtexture'    => 'GLuint',
                    'internalformat' => 'GLenum',
                    'minlevel'       => 'GLuint',
                    'numlevels'      => 'GLuint',
                    'minlayer'       => 'GLuint',
                    'numlayers'      => 'GLuint',
                ],
            ],
            'glVertexAttribBinding'             => [
                'virtual' => true,
                'name'    => 'vertexAttribBinding',
                'type'    => 'void',
                'args'    => [
                    'attribindex'  => 'GLuint',
                    'bindingindex' => 'GLuint',
                ],
            ],
            'glVertexAttribFormat'              => [
                'virtual' => true,
                'name'    => 'vertexAttribFormat',
                'type'    => 'void',
                'args'    => [
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'normalized'     => 'GLboolean',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexAttribIFormat'             => [
                'virtual' => true,
                'name'    => 'vertexAttribIFormat',
                'type'    => 'void',
                'args'    => [
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexAttribLFormat'             => [
                'virtual' => true,
                'name'    => 'vertexAttribLFormat',
                'type'    => 'void',
                'args'    => [
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexBindingDivisor'            => [
                'virtual' => true,
                'name'    => 'vertexBindingDivisor',
                'type'    => 'void',
                'args'    => [
                    'bindingindex' => 'GLuint',
                    'divisor'      => 'GLuint',
                ],
            ],
        ],
    ],
    'GL44' => [
        'name'      => 'Serafim\\OpenGL\\GL44',
        'extends'   => 'Serafim\\OpenGL\\GL43',
        'version'   => '4.4',
        'comment'   => 'The OpenGL functionality up to version 4.4. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.4 implementations support revision 4.40 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_buffer_storage @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_buffer_storage.txt
- ARB_clear_texture @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_clear_texture.txt
- ARB_enhanced_layouts @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_enhanced_layouts.txt
- ARB_multi_bind @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_multi_bind.txt
- ARB_query_buffer_object @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_query_buffer_object.txt
- ARB_texture_mirror_clamp_to_edge @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_mirror_clamp_to_edge.txt
- ARB_texture_stencil8 @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_stencil8.txt
- ARB_vertex_type_10f_11f_11f_rev @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_vertex_type_10f_11f_11f_rev.txt',
        'constants' => [
            'GL_MAX_VERTEX_ATTRIB_STRIDE'                => 33509,
            'GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED' => 33313,
            'GL_TEXTURE_BUFFER_BINDING'                  => 35882,
            'GL_MAP_PERSISTENT_BIT'                      => 64,
            'GL_MAP_COHERENT_BIT'                        => 128,
            'GL_DYNAMIC_STORAGE_BIT'                     => 256,
            'GL_CLIENT_STORAGE_BIT'                      => 512,
            'GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT'        => 16384,
            'GL_BUFFER_IMMUTABLE_STORAGE'                => 33311,
            'GL_BUFFER_STORAGE_FLAGS'                    => 33312,
            'GL_CLEAR_TEXTURE'                           => 37733,
            'GL_LOCATION_COMPONENT'                      => 37706,
            'GL_TRANSFORM_FEEDBACK_BUFFER_INDEX'         => 37707,
            'GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE'        => 37708,
            'GL_QUERY_BUFFER'                            => 37266,
            'GL_QUERY_BUFFER_BARRIER_BIT'                => 32768,
            'GL_QUERY_BUFFER_BINDING'                    => 37267,
            'GL_QUERY_RESULT_NO_WAIT'                    => 37268,
            'GL_MIRROR_CLAMP_TO_EDGE'                    => 34627,
        ],
        'methods'   => [
            'glBindBuffersBase'   => [
                'virtual' => true,
                'name'    => 'bindBuffersBase',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'first'   => 'GLuint',
                    'count'   => 'GLsizei',
                    'buffers' => 'const GLuint *',
                ],
            ],
            'glBindBuffersRange'  => [
                'virtual' => true,
                'name'    => 'bindBuffersRange',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'first'   => 'GLuint',
                    'count'   => 'GLsizei',
                    'buffers' => 'const GLuint *',
                    'offsets' => 'const GLintptr *',
                    'sizes'   => 'const GLsizeiptr *',
                ],
            ],
            'glBindImageTextures' => [
                'virtual' => true,
                'name'    => 'bindImageTextures',
                'type'    => 'void',
                'args'    => [
                    'first'    => 'GLuint',
                    'count'    => 'GLsizei',
                    'textures' => 'const GLuint *',
                ],
            ],
            'glBindSamplers'      => [
                'virtual' => true,
                'name'    => 'bindSamplers',
                'type'    => 'void',
                'args'    => [
                    'first'    => 'GLuint',
                    'count'    => 'GLsizei',
                    'samplers' => 'const GLuint *',
                ],
            ],
            'glBindTextures'      => [
                'virtual' => true,
                'name'    => 'bindTextures',
                'type'    => 'void',
                'args'    => [
                    'first'    => 'GLuint',
                    'count'    => 'GLsizei',
                    'textures' => 'const GLuint *',
                ],
            ],
            'glBindVertexBuffers' => [
                'virtual' => true,
                'name'    => 'bindVertexBuffers',
                'type'    => 'void',
                'args'    => [
                    'first'   => 'GLuint',
                    'count'   => 'GLsizei',
                    'buffers' => 'const GLuint *',
                    'offsets' => 'const GLintptr *',
                    'strides' => 'const GLsizei *',
                ],
            ],
            'glBufferStorage'     => [
                'virtual' => true,
                'name'    => 'bufferStorage',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                    'flags'  => 'GLbitfield',
                ],
            ],
            'glClearTexImage'     => [
                'virtual' => true,
                'name'    => 'clearTexImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'data'    => 'const void *',
                ],
            ],
            'glClearTexSubImage'  => [
                'virtual' => true,
                'name'    => 'clearTexSubImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'data'    => 'const void *',
                ],
            ],
        ],
    ],
    'GL45' => [
        'name'      => 'Serafim\\OpenGL\\GL45',
        'extends'   => 'Serafim\\OpenGL\\GL44',
        'version'   => '4.5',
        'comment'   => 'The OpenGL functionality up to version 4.5. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.5 implementations support revision 4.50 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_clip_control @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_clip_control.txt
- ARB_cull_distance @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_cull_distance.txt
- ARB_ES3_1_compatibility @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_ES3_1_compatibility.txt
- ARB_conditional_render_inverted @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conditional_render_inverted.txt
- KHR_context_flush_control @see https://www.khronos.org/registry/OpenGL/extensions/KHR/KHR_context_flush_control.txt
- ARB_derivative_control @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_derivative_control.txt
- ARB_direct_state_access @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_direct_state_access.txt
- ARB_get_texture_sub_image @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_get_texture_sub_image.txt
- KHR_robustness @see https://www.khronos.org/registry/OpenGL/extensions/KHR/KHR_robustness.txt
- ARB_shader_texture_image_samples @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_texture_image_samples.txt
- ARB_texture_barrier @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_barrier.txt',
        'constants' => [
            'GL_CONTEXT_LOST'                         => 1287,
            'GL_NEGATIVE_ONE_TO_ONE'                  => 37726,
            'GL_ZERO_TO_ONE'                          => 37727,
            'GL_CLIP_ORIGIN'                          => 37724,
            'GL_CLIP_DEPTH_MODE'                      => 37725,
            'GL_QUERY_WAIT_INVERTED'                  => 36375,
            'GL_QUERY_NO_WAIT_INVERTED'               => 36376,
            'GL_QUERY_BY_REGION_WAIT_INVERTED'        => 36377,
            'GL_QUERY_BY_REGION_NO_WAIT_INVERTED'     => 36378,
            'GL_MAX_CULL_DISTANCES'                   => 33529,
            'GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES' => 33530,
            'GL_TEXTURE_TARGET'                       => 4102,
            'GL_QUERY_TARGET'                         => 33514,
            'GL_GUILTY_CONTEXT_RESET'                 => 33363,
            'GL_INNOCENT_CONTEXT_RESET'               => 33364,
            'GL_UNKNOWN_CONTEXT_RESET'                => 33365,
            'GL_RESET_NOTIFICATION_STRATEGY'          => 33366,
            'GL_LOSE_CONTEXT_ON_RESET'                => 33362,
            'GL_NO_RESET_NOTIFICATION'                => 33377,
            'GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT'       => 4,
            'GL_CONTEXT_RELEASE_BEHAVIOR'             => 33531,
            'GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH'       => 33532,
        ],
        'methods'   => [
            'glBindTextureUnit'                          => [
                'virtual' => true,
                'name'    => 'bindTextureUnit',
                'type'    => 'void',
                'args'    => [
                    'unit'    => 'GLuint',
                    'texture' => 'GLuint',
                ],
            ],
            'glBlitNamedFramebuffer'                     => [
                'virtual' => true,
                'name'    => 'blitNamedFramebuffer',
                'type'    => 'void',
                'args'    => [
                    'readFramebuffer' => 'GLuint',
                    'drawFramebuffer' => 'GLuint',
                    'srcX0'           => 'GLint',
                    'srcY0'           => 'GLint',
                    'srcX1'           => 'GLint',
                    'srcY1'           => 'GLint',
                    'dstX0'           => 'GLint',
                    'dstY0'           => 'GLint',
                    'dstX1'           => 'GLint',
                    'dstY1'           => 'GLint',
                    'mask'            => 'GLbitfield',
                    'filter'          => 'GLenum',
                ],
            ],
            'glCheckNamedFramebufferStatus'              => [
                'virtual' => true,
                'name'    => 'checkNamedFramebufferStatus',
                'type'    => 'GLenum',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'target'      => 'GLenum',
                ],
            ],
            'glClearNamedBufferData'                     => [
                'virtual' => true,
                'name'    => 'clearNamedBufferData',
                'type'    => 'void',
                'args'    => [
                    'buffer'         => 'GLuint',
                    'internalformat' => 'GLenum',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'data'           => 'const void *',
                ],
            ],
            'glClearNamedBufferSubData'                  => [
                'virtual' => true,
                'name'    => 'clearNamedBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'buffer'         => 'GLuint',
                    'internalformat' => 'GLenum',
                    'offset'         => 'GLintptr',
                    'size'           => 'GLsizeiptr',
                    'format'         => 'GLenum',
                    'type'           => 'GLenum',
                    'data'           => 'const void *',
                ],
            ],
            'glClearNamedFramebufferfi'                  => [
                'virtual' => true,
                'name'    => 'clearNamedFramebufferfi',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'buffer'      => 'GLenum',
                    'drawbuffer'  => 'GLint',
                    'depth'       => 'GLfloat',
                    'stencil'     => 'GLint',
                ],
            ],
            'glClearNamedFramebufferfv'                  => [
                'virtual' => true,
                'name'    => 'clearNamedFramebufferfv',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'buffer'      => 'GLenum',
                    'drawbuffer'  => 'GLint',
                    'value'       => 'const GLfloat *',
                ],
            ],
            'glClearNamedFramebufferiv'                  => [
                'virtual' => true,
                'name'    => 'clearNamedFramebufferiv',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'buffer'      => 'GLenum',
                    'drawbuffer'  => 'GLint',
                    'value'       => 'const GLint *',
                ],
            ],
            'glClearNamedFramebufferuiv'                 => [
                'virtual' => true,
                'name'    => 'clearNamedFramebufferuiv',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'buffer'      => 'GLenum',
                    'drawbuffer'  => 'GLint',
                    'value'       => 'const GLuint *',
                ],
            ],
            'glClipControl'                              => [
                'virtual' => true,
                'name'    => 'clipControl',
                'type'    => 'void',
                'args'    => [
                    'origin' => 'GLenum',
                    'depth'  => 'GLenum',
                ],
            ],
            'glCompressedTextureSubImage1D'              => [
                'virtual' => true,
                'name'    => 'compressedTextureSubImage1D',
                'type'    => 'void',
                'args'    => [
                    'texture'   => 'GLuint',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glCompressedTextureSubImage2D'              => [
                'virtual' => true,
                'name'    => 'compressedTextureSubImage2D',
                'type'    => 'void',
                'args'    => [
                    'texture'   => 'GLuint',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'yoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'height'    => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glCompressedTextureSubImage3D'              => [
                'virtual' => true,
                'name'    => 'compressedTextureSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'texture'   => 'GLuint',
                    'level'     => 'GLint',
                    'xoffset'   => 'GLint',
                    'yoffset'   => 'GLint',
                    'zoffset'   => 'GLint',
                    'width'     => 'GLsizei',
                    'height'    => 'GLsizei',
                    'depth'     => 'GLsizei',
                    'format'    => 'GLenum',
                    'imageSize' => 'GLsizei',
                    'data'      => 'const void *',
                ],
            ],
            'glCopyNamedBufferSubData'                   => [
                'virtual' => true,
                'name'    => 'copyNamedBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'readBuffer'  => 'GLuint',
                    'writeBuffer' => 'GLuint',
                    'readOffset'  => 'GLintptr',
                    'writeOffset' => 'GLintptr',
                    'size'        => 'GLsizeiptr',
                ],
            ],
            'glCopyTextureSubImage1D'                    => [
                'virtual' => true,
                'name'    => 'copyTextureSubImage1D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                ],
            ],
            'glCopyTextureSubImage2D'                    => [
                'virtual' => true,
                'name'    => 'copyTextureSubImage2D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                ],
            ],
            'glCopyTextureSubImage3D'                    => [
                'virtual' => true,
                'name'    => 'copyTextureSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                ],
            ],
            'glCreateBuffers'                            => [
                'virtual' => true,
                'name'    => 'createBuffers',
                'type'    => 'void',
                'args'    => [
                    'n'       => 'GLsizei',
                    'buffers' => 'GLuint *',
                ],
            ],
            'glCreateFramebuffers'                       => [
                'virtual' => true,
                'name'    => 'createFramebuffers',
                'type'    => 'void',
                'args'    => [
                    'n'            => 'GLsizei',
                    'framebuffers' => 'GLuint *',
                ],
            ],
            'glCreateProgramPipelines'                   => [
                'virtual' => true,
                'name'    => 'createProgramPipelines',
                'type'    => 'void',
                'args'    => [
                    'n'         => 'GLsizei',
                    'pipelines' => 'GLuint *',
                ],
            ],
            'glCreateQueries'                            => [
                'virtual' => true,
                'name'    => 'createQueries',
                'type'    => 'void',
                'args'    => [
                    'target' => 'GLenum',
                    'n'      => 'GLsizei',
                    'ids'    => 'GLuint *',
                ],
            ],
            'glCreateRenderbuffers'                      => [
                'virtual' => true,
                'name'    => 'createRenderbuffers',
                'type'    => 'void',
                'args'    => [
                    'n'             => 'GLsizei',
                    'renderbuffers' => 'GLuint *',
                ],
            ],
            'glCreateSamplers'                           => [
                'virtual' => true,
                'name'    => 'createSamplers',
                'type'    => 'void',
                'args'    => [
                    'n'        => 'GLsizei',
                    'samplers' => 'GLuint *',
                ],
            ],
            'glCreateTextures'                           => [
                'virtual' => true,
                'name'    => 'createTextures',
                'type'    => 'void',
                'args'    => [
                    'target'   => 'GLenum',
                    'n'        => 'GLsizei',
                    'textures' => 'GLuint *',
                ],
            ],
            'glCreateTransformFeedbacks'                 => [
                'virtual' => true,
                'name'    => 'createTransformFeedbacks',
                'type'    => 'void',
                'args'    => [
                    'n'   => 'GLsizei',
                    'ids' => 'GLuint *',
                ],
            ],
            'glCreateVertexArrays'                       => [
                'virtual' => true,
                'name'    => 'createVertexArrays',
                'type'    => 'void',
                'args'    => [
                    'n'      => 'GLsizei',
                    'arrays' => 'GLuint *',
                ],
            ],
            'glDisableVertexArrayAttrib'                 => [
                'virtual' => true,
                'name'    => 'disableVertexArrayAttrib',
                'type'    => 'void',
                'args'    => [
                    'vaobj' => 'GLuint',
                    'index' => 'GLuint',
                ],
            ],
            'glEnableVertexArrayAttrib'                  => [
                'virtual' => true,
                'name'    => 'enableVertexArrayAttrib',
                'type'    => 'void',
                'args'    => [
                    'vaobj' => 'GLuint',
                    'index' => 'GLuint',
                ],
            ],
            'glFlushMappedNamedBufferRange'              => [
                'virtual' => true,
                'name'    => 'flushMappedNamedBufferRange',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'length' => 'GLsizeiptr',
                ],
            ],
            'glGenerateTextureMipmap'                    => [
                'virtual' => true,
                'name'    => 'generateTextureMipmap',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                ],
            ],
            'glGetCompressedTextureImage'                => [
                'virtual' => true,
                'name'    => 'getCompressedTextureImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetCompressedTextureSubImage'             => [
                'virtual' => true,
                'name'    => 'getCompressedTextureSubImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetGraphicsResetStatus'                   => [
                'virtual' => true,
                'name'    => 'getGraphicsResetStatus',
                'type'    => 'GLenum',
                'args'    => [
                ],
            ],
            'glGetNamedBufferParameteri64v'              => [
                'virtual' => true,
                'name'    => 'getNamedBufferParameteri64v',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint64 *',
                ],
            ],
            'glGetNamedBufferParameteriv'                => [
                'virtual' => true,
                'name'    => 'getNamedBufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'GLint *',
                ],
            ],
            'glGetNamedBufferPointerv'                   => [
                'virtual' => true,
                'name'    => 'getNamedBufferPointerv',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'params' => 'void **',
                ],
            ],
            'glGetNamedBufferSubData'                    => [
                'virtual' => true,
                'name'    => 'getNamedBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'void *',
                ],
            ],
            'glGetNamedFramebufferAttachmentParameteriv' => [
                'virtual' => true,
                'name'    => 'getNamedFramebufferAttachmentParameteriv',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'attachment'  => 'GLenum',
                    'pname'       => 'GLenum',
                    'params'      => 'GLint *',
                ],
            ],
            'glGetNamedFramebufferParameteriv'           => [
                'virtual' => true,
                'name'    => 'getNamedFramebufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'pname'       => 'GLenum',
                    'param'       => 'GLint *',
                ],
            ],
            'glGetNamedRenderbufferParameteriv'          => [
                'virtual' => true,
                'name'    => 'getNamedRenderbufferParameteriv',
                'type'    => 'void',
                'args'    => [
                    'renderbuffer' => 'GLuint',
                    'pname'        => 'GLenum',
                    'params'       => 'GLint *',
                ],
            ],
            'glGetQueryBufferObjecti64v'                 => [
                'virtual' => true,
                'name'    => 'getQueryBufferObjecti64v',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'offset' => 'GLintptr',
                ],
            ],
            'glGetQueryBufferObjectiv'                   => [
                'virtual' => true,
                'name'    => 'getQueryBufferObjectiv',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'offset' => 'GLintptr',
                ],
            ],
            'glGetQueryBufferObjectui64v'                => [
                'virtual' => true,
                'name'    => 'getQueryBufferObjectui64v',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'offset' => 'GLintptr',
                ],
            ],
            'glGetQueryBufferObjectuiv'                  => [
                'virtual' => true,
                'name'    => 'getQueryBufferObjectuiv',
                'type'    => 'void',
                'args'    => [
                    'id'     => 'GLuint',
                    'buffer' => 'GLuint',
                    'pname'  => 'GLenum',
                    'offset' => 'GLintptr',
                ],
            ],
            'glGetTextureImage'                          => [
                'virtual' => true,
                'name'    => 'getTextureImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetTextureLevelParameterfv'               => [
                'virtual' => true,
                'name'    => 'getTextureLevelParameterfv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLfloat *',
                ],
            ],
            'glGetTextureLevelParameteriv'               => [
                'virtual' => true,
                'name'    => 'getTextureLevelParameteriv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glGetTextureParameterIiv'                   => [
                'virtual' => true,
                'name'    => 'getTextureParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glGetTextureParameterIuiv'                  => [
                'virtual' => true,
                'name'    => 'getTextureParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLuint *',
                ],
            ],
            'glGetTextureParameterfv'                    => [
                'virtual' => true,
                'name'    => 'getTextureParameterfv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLfloat *',
                ],
            ],
            'glGetTextureParameteriv'                    => [
                'virtual' => true,
                'name'    => 'getTextureParameteriv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'GLint *',
                ],
            ],
            'glGetTextureSubImage'                       => [
                'virtual' => true,
                'name'    => 'getTextureSubImage',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetTransformFeedbacki64_v'                => [
                'virtual' => true,
                'name'    => 'getTransformFeedbacki64_v',
                'type'    => 'void',
                'args'    => [
                    'xfb'   => 'GLuint',
                    'pname' => 'GLenum',
                    'index' => 'GLuint',
                    'param' => 'GLint64 *',
                ],
            ],
            'glGetTransformFeedbacki_v'                  => [
                'virtual' => true,
                'name'    => 'getTransformFeedbacki_v',
                'type'    => 'void',
                'args'    => [
                    'xfb'   => 'GLuint',
                    'pname' => 'GLenum',
                    'index' => 'GLuint',
                    'param' => 'GLint *',
                ],
            ],
            'glGetTransformFeedbackiv'                   => [
                'virtual' => true,
                'name'    => 'getTransformFeedbackiv',
                'type'    => 'void',
                'args'    => [
                    'xfb'   => 'GLuint',
                    'pname' => 'GLenum',
                    'param' => 'GLint *',
                ],
            ],
            'glGetVertexArrayIndexed64iv'                => [
                'virtual' => true,
                'name'    => 'getVertexArrayIndexed64iv',
                'type'    => 'void',
                'args'    => [
                    'vaobj' => 'GLuint',
                    'index' => 'GLuint',
                    'pname' => 'GLenum',
                    'param' => 'GLint64 *',
                ],
            ],
            'glGetVertexArrayIndexediv'                  => [
                'virtual' => true,
                'name'    => 'getVertexArrayIndexediv',
                'type'    => 'void',
                'args'    => [
                    'vaobj' => 'GLuint',
                    'index' => 'GLuint',
                    'pname' => 'GLenum',
                    'param' => 'GLint *',
                ],
            ],
            'glGetVertexArrayiv'                         => [
                'virtual' => true,
                'name'    => 'getVertexArrayiv',
                'type'    => 'void',
                'args'    => [
                    'vaobj' => 'GLuint',
                    'pname' => 'GLenum',
                    'param' => 'GLint *',
                ],
            ],
            'glGetnCompressedTexImage'                   => [
                'virtual' => true,
                'name'    => 'getnCompressedTexImage',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'lod'     => 'GLint',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetnTexImage'                             => [
                'virtual' => true,
                'name'    => 'getnTexImage',
                'type'    => 'void',
                'args'    => [
                    'target'  => 'GLenum',
                    'level'   => 'GLint',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'bufSize' => 'GLsizei',
                    'pixels'  => 'void *',
                ],
            ],
            'glGetnUniformdv'                            => [
                'virtual' => true,
                'name'    => 'getnUniformdv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'bufSize'  => 'GLsizei',
                    'params'   => 'GLdouble *',
                ],
            ],
            'glGetnUniformfv'                            => [
                'virtual' => true,
                'name'    => 'getnUniformfv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'bufSize'  => 'GLsizei',
                    'params'   => 'GLfloat *',
                ],
            ],
            'glGetnUniformiv'                            => [
                'virtual' => true,
                'name'    => 'getnUniformiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'bufSize'  => 'GLsizei',
                    'params'   => 'GLint *',
                ],
            ],
            'glGetnUniformuiv'                           => [
                'virtual' => true,
                'name'    => 'getnUniformuiv',
                'type'    => 'void',
                'args'    => [
                    'program'  => 'GLuint',
                    'location' => 'GLint',
                    'bufSize'  => 'GLsizei',
                    'params'   => 'GLuint *',
                ],
            ],
            'glInvalidateNamedFramebufferData'           => [
                'virtual' => true,
                'name'    => 'invalidateNamedFramebufferData',
                'type'    => 'void',
                'args'    => [
                    'framebuffer'    => 'GLuint',
                    'numAttachments' => 'GLsizei',
                    'attachments'    => 'const GLenum *',
                ],
            ],
            'glInvalidateNamedFramebufferSubData'        => [
                'virtual' => true,
                'name'    => 'invalidateNamedFramebufferSubData',
                'type'    => 'void',
                'args'    => [
                    'framebuffer'    => 'GLuint',
                    'numAttachments' => 'GLsizei',
                    'attachments'    => 'const GLenum *',
                    'x'              => 'GLint',
                    'y'              => 'GLint',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glMapNamedBuffer'                           => [
                'virtual' => true,
                'name'    => 'mapNamedBuffer',
                'type'    => 'void *',
                'args'    => [
                    'buffer' => 'GLuint',
                    'access' => 'GLenum',
                ],
            ],
            'glMapNamedBufferRange'                      => [
                'virtual' => true,
                'name'    => 'mapNamedBufferRange',
                'type'    => 'void *',
                'args'    => [
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'length' => 'GLsizeiptr',
                    'access' => 'GLbitfield',
                ],
            ],
            'glMemoryBarrierByRegion'                    => [
                'virtual' => true,
                'name'    => 'memoryBarrierByRegion',
                'type'    => 'void',
                'args'    => [
                    'barriers' => 'GLbitfield',
                ],
            ],
            'glNamedBufferData'                          => [
                'virtual' => true,
                'name'    => 'namedBufferData',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                    'usage'  => 'GLenum',
                ],
            ],
            'glNamedBufferStorage'                       => [
                'virtual' => true,
                'name'    => 'namedBufferStorage',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                    'flags'  => 'GLbitfield',
                ],
            ],
            'glNamedBufferSubData'                       => [
                'virtual' => true,
                'name'    => 'namedBufferSubData',
                'type'    => 'void',
                'args'    => [
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                    'data'   => 'const void *',
                ],
            ],
            'glNamedFramebufferDrawBuffer'               => [
                'virtual' => true,
                'name'    => 'namedFramebufferDrawBuffer',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'buf'         => 'GLenum',
                ],
            ],
            'glNamedFramebufferDrawBuffers'              => [
                'virtual' => true,
                'name'    => 'namedFramebufferDrawBuffers',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'n'           => 'GLsizei',
                    'bufs'        => 'const GLenum *',
                ],
            ],
            'glNamedFramebufferParameteri'               => [
                'virtual' => true,
                'name'    => 'namedFramebufferParameteri',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'pname'       => 'GLenum',
                    'param'       => 'GLint',
                ],
            ],
            'glNamedFramebufferReadBuffer'               => [
                'virtual' => true,
                'name'    => 'namedFramebufferReadBuffer',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'src'         => 'GLenum',
                ],
            ],
            'glNamedFramebufferRenderbuffer'             => [
                'virtual' => true,
                'name'    => 'namedFramebufferRenderbuffer',
                'type'    => 'void',
                'args'    => [
                    'framebuffer'        => 'GLuint',
                    'attachment'         => 'GLenum',
                    'renderbuffertarget' => 'GLenum',
                    'renderbuffer'       => 'GLuint',
                ],
            ],
            'glNamedFramebufferTexture'                  => [
                'virtual' => true,
                'name'    => 'namedFramebufferTexture',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'attachment'  => 'GLenum',
                    'texture'     => 'GLuint',
                    'level'       => 'GLint',
                ],
            ],
            'glNamedFramebufferTextureLayer'             => [
                'virtual' => true,
                'name'    => 'namedFramebufferTextureLayer',
                'type'    => 'void',
                'args'    => [
                    'framebuffer' => 'GLuint',
                    'attachment'  => 'GLenum',
                    'texture'     => 'GLuint',
                    'level'       => 'GLint',
                    'layer'       => 'GLint',
                ],
            ],
            'glNamedRenderbufferStorage'                 => [
                'virtual' => true,
                'name'    => 'namedRenderbufferStorage',
                'type'    => 'void',
                'args'    => [
                    'renderbuffer'   => 'GLuint',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glNamedRenderbufferStorageMultisample'      => [
                'virtual' => true,
                'name'    => 'namedRenderbufferStorageMultisample',
                'type'    => 'void',
                'args'    => [
                    'renderbuffer'   => 'GLuint',
                    'samples'        => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glReadnPixels'                              => [
                'virtual' => true,
                'name'    => 'readnPixels',
                'type'    => 'void',
                'args'    => [
                    'x'       => 'GLint',
                    'y'       => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'bufSize' => 'GLsizei',
                    'data'    => 'void *',
                ],
            ],
            'glTextureBarrier'                           => [
                'virtual' => true,
                'name'    => 'textureBarrier',
                'type'    => 'void',
                'args'    => [
                ],
            ],
            'glTextureBuffer'                            => [
                'virtual' => true,
                'name'    => 'textureBuffer',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'internalformat' => 'GLenum',
                    'buffer'         => 'GLuint',
                ],
            ],
            'glTextureBufferRange'                       => [
                'virtual' => true,
                'name'    => 'textureBufferRange',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'internalformat' => 'GLenum',
                    'buffer'         => 'GLuint',
                    'offset'         => 'GLintptr',
                    'size'           => 'GLsizeiptr',
                ],
            ],
            'glTextureParameterIiv'                      => [
                'virtual' => true,
                'name'    => 'textureParameterIiv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'const GLint *',
                ],
            ],
            'glTextureParameterIuiv'                     => [
                'virtual' => true,
                'name'    => 'textureParameterIuiv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'params'  => 'const GLuint *',
                ],
            ],
            'glTextureParameterf'                        => [
                'virtual' => true,
                'name'    => 'textureParameterf',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'GLfloat',
                ],
            ],
            'glTextureParameterfv'                       => [
                'virtual' => true,
                'name'    => 'textureParameterfv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLfloat *',
                ],
            ],
            'glTextureParameteri'                        => [
                'virtual' => true,
                'name'    => 'textureParameteri',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'GLint',
                ],
            ],
            'glTextureParameteriv'                       => [
                'virtual' => true,
                'name'    => 'textureParameteriv',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'pname'   => 'GLenum',
                    'param'   => 'const GLint *',
                ],
            ],
            'glTextureStorage1D'                         => [
                'virtual' => true,
                'name'    => 'textureStorage1D',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                ],
            ],
            'glTextureStorage2D'                         => [
                'virtual' => true,
                'name'    => 'textureStorage2D',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                ],
            ],
            'glTextureStorage2DMultisample'              => [
                'virtual' => true,
                'name'    => 'textureStorage2DMultisample',
                'type'    => 'void',
                'args'    => [
                    'texture'              => 'GLuint',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glTextureStorage3D'                         => [
                'virtual' => true,
                'name'    => 'textureStorage3D',
                'type'    => 'void',
                'args'    => [
                    'texture'        => 'GLuint',
                    'levels'         => 'GLsizei',
                    'internalformat' => 'GLenum',
                    'width'          => 'GLsizei',
                    'height'         => 'GLsizei',
                    'depth'          => 'GLsizei',
                ],
            ],
            'glTextureStorage3DMultisample'              => [
                'virtual' => true,
                'name'    => 'textureStorage3DMultisample',
                'type'    => 'void',
                'args'    => [
                    'texture'              => 'GLuint',
                    'samples'              => 'GLsizei',
                    'internalformat'       => 'GLenum',
                    'width'                => 'GLsizei',
                    'height'               => 'GLsizei',
                    'depth'                => 'GLsizei',
                    'fixedsamplelocations' => 'GLboolean',
                ],
            ],
            'glTextureSubImage1D'                        => [
                'virtual' => true,
                'name'    => 'textureSubImage1D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const void *',
                ],
            ],
            'glTextureSubImage2D'                        => [
                'virtual' => true,
                'name'    => 'textureSubImage2D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const void *',
                ],
            ],
            'glTextureSubImage3D'                        => [
                'virtual' => true,
                'name'    => 'textureSubImage3D',
                'type'    => 'void',
                'args'    => [
                    'texture' => 'GLuint',
                    'level'   => 'GLint',
                    'xoffset' => 'GLint',
                    'yoffset' => 'GLint',
                    'zoffset' => 'GLint',
                    'width'   => 'GLsizei',
                    'height'  => 'GLsizei',
                    'depth'   => 'GLsizei',
                    'format'  => 'GLenum',
                    'type'    => 'GLenum',
                    'pixels'  => 'const void *',
                ],
            ],
            'glTransformFeedbackBufferBase'              => [
                'virtual' => true,
                'name'    => 'transformFeedbackBufferBase',
                'type'    => 'void',
                'args'    => [
                    'xfb'    => 'GLuint',
                    'index'  => 'GLuint',
                    'buffer' => 'GLuint',
                ],
            ],
            'glTransformFeedbackBufferRange'             => [
                'virtual' => true,
                'name'    => 'transformFeedbackBufferRange',
                'type'    => 'void',
                'args'    => [
                    'xfb'    => 'GLuint',
                    'index'  => 'GLuint',
                    'buffer' => 'GLuint',
                    'offset' => 'GLintptr',
                    'size'   => 'GLsizeiptr',
                ],
            ],
            'glUnmapNamedBuffer'                         => [
                'virtual' => true,
                'name'    => 'unmapNamedBuffer',
                'type'    => 'GLboolean',
                'args'    => [
                    'buffer' => 'GLuint',
                ],
            ],
            'glVertexArrayAttribBinding'                 => [
                'virtual' => true,
                'name'    => 'vertexArrayAttribBinding',
                'type'    => 'void',
                'args'    => [
                    'vaobj'        => 'GLuint',
                    'attribindex'  => 'GLuint',
                    'bindingindex' => 'GLuint',
                ],
            ],
            'glVertexArrayAttribFormat'                  => [
                'virtual' => true,
                'name'    => 'vertexArrayAttribFormat',
                'type'    => 'void',
                'args'    => [
                    'vaobj'          => 'GLuint',
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'normalized'     => 'GLboolean',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexArrayAttribIFormat'                 => [
                'virtual' => true,
                'name'    => 'vertexArrayAttribIFormat',
                'type'    => 'void',
                'args'    => [
                    'vaobj'          => 'GLuint',
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexArrayAttribLFormat'                 => [
                'virtual' => true,
                'name'    => 'vertexArrayAttribLFormat',
                'type'    => 'void',
                'args'    => [
                    'vaobj'          => 'GLuint',
                    'attribindex'    => 'GLuint',
                    'size'           => 'GLint',
                    'type'           => 'GLenum',
                    'relativeoffset' => 'GLuint',
                ],
            ],
            'glVertexArrayBindingDivisor'                => [
                'virtual' => true,
                'name'    => 'vertexArrayBindingDivisor',
                'type'    => 'void',
                'args'    => [
                    'vaobj'        => 'GLuint',
                    'bindingindex' => 'GLuint',
                    'divisor'      => 'GLuint',
                ],
            ],
            'glVertexArrayElementBuffer'                 => [
                'virtual' => true,
                'name'    => 'vertexArrayElementBuffer',
                'type'    => 'void',
                'args'    => [
                    'vaobj'  => 'GLuint',
                    'buffer' => 'GLuint',
                ],
            ],
            'glVertexArrayVertexBuffer'                  => [
                'virtual' => true,
                'name'    => 'vertexArrayVertexBuffer',
                'type'    => 'void',
                'args'    => [
                    'vaobj'        => 'GLuint',
                    'bindingindex' => 'GLuint',
                    'buffer'       => 'GLuint',
                    'offset'       => 'GLintptr',
                    'stride'       => 'GLsizei',
                ],
            ],
            'glVertexArrayVertexBuffers'                 => [
                'virtual' => true,
                'name'    => 'vertexArrayVertexBuffers',
                'type'    => 'void',
                'args'    => [
                    'vaobj'   => 'GLuint',
                    'first'   => 'GLuint',
                    'count'   => 'GLsizei',
                    'buffers' => 'const GLuint *',
                    'offsets' => 'const GLintptr *',
                    'strides' => 'const GLsizei *',
                ],
            ],
        ],
    ],
    'GL46' => [
        'name'      => 'Serafim\\OpenGL\\GL46',
        'extends'   => 'Serafim\\OpenGL\\GL45',
        'version'   => '4.6',
        'comment'   => 'The OpenGL functionality up to version 4.6. Includes the deprecated symbols of the Compatibility Profile.

OpenGL 4.6 implementations support revision 4.60 of the OpenGL Shading Language.

Extensions promoted to core in this release:

- ARB_indirect_parameters @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_indirect_parameters.txt
- ARB_pipeline_statistics_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_pipeline_statistics_query.txt
- ARB_polygon_offset_clamp @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_polygon_offset_clamp.txt
- KHR_no_error @see https://www.khronos.org/registry/OpenGL/extensions/KHR/KHR_no_error.txt
- ARB_shader_atomic_counter_ops @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_atomic_counter_ops.txt
- ARB_shader_draw_parameters @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_draw_parameters.txt
- ARB_shader_group_vote @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_shader_group_vote.txt
- ARB_gl_spirv @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_gl_spirv.txt
- ARB_spirv_extensions @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_spirv_extensions.txt
- ARB_texture_filter_anisotropic @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_filter_anisotropic.txt
- ARB_transform_feedback_overflow_query @see https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_transform_feedback_overflow_query.txt',
        'constants' => [
            'GL_SHADER_BINARY_FORMAT_SPIR_V'        => 38225,
            'GL_SPIR_V_BINARY'                      => 38226,
            'GL_PARAMETER_BUFFER'                   => 33006,
            'GL_PARAMETER_BUFFER_BINDING'           => 33007,
            'GL_CONTEXT_FLAG_NO_ERROR_BIT'          => 8,
            'GL_VERTICES_SUBMITTED'                 => 33518,
            'GL_PRIMITIVES_SUBMITTED'               => 33519,
            'GL_VERTEX_SHADER_INVOCATIONS'          => 33520,
            'GL_TESS_CONTROL_SHADER_PATCHES'        => 33521,
            'GL_TESS_EVALUATION_SHADER_INVOCATIONS' => 33522,
            'GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED' => 33523,
            'GL_FRAGMENT_SHADER_INVOCATIONS'        => 33524,
            'GL_COMPUTE_SHADER_INVOCATIONS'         => 33525,
            'GL_CLIPPING_INPUT_PRIMITIVES'          => 33526,
            'GL_CLIPPING_OUTPUT_PRIMITIVES'         => 33527,
            'GL_POLYGON_OFFSET_CLAMP'               => 36379,
            'GL_SPIR_V_EXTENSIONS'                  => 38227,
            'GL_NUM_SPIR_V_EXTENSIONS'              => 38228,
            'GL_TEXTURE_MAX_ANISOTROPY'             => 34046,
            'GL_MAX_TEXTURE_MAX_ANISOTROPY'         => 34047,
            'GL_TRANSFORM_FEEDBACK_OVERFLOW'        => 33516,
            'GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW' => 33517,
        ],
        'methods'   => [
            'glMultiDrawArraysIndirectCount'   => [
                'virtual' => true,
                'name'    => 'multiDrawArraysIndirectCount',
                'type'    => 'void',
                'args'    => [
                    'mode'         => 'GLenum',
                    'indirect'     => 'const void *',
                    'drawcount'    => 'GLintptr',
                    'maxdrawcount' => 'GLsizei',
                    'stride'       => 'GLsizei',
                ],
            ],
            'glMultiDrawElementsIndirectCount' => [
                'virtual' => true,
                'name'    => 'multiDrawElementsIndirectCount',
                'type'    => 'void',
                'args'    => [
                    'mode'         => 'GLenum',
                    'type'         => 'GLenum',
                    'indirect'     => 'const void *',
                    'drawcount'    => 'GLintptr',
                    'maxdrawcount' => 'GLsizei',
                    'stride'       => 'GLsizei',
                ],
            ],
            'glPolygonOffsetClamp'             => [
                'virtual' => true,
                'name'    => 'polygonOffsetClamp',
                'type'    => 'void',
                'args'    => [
                    'factor' => 'GLfloat',
                    'units'  => 'GLfloat',
                    'clamp'  => 'GLfloat',
                ],
            ],
            'glSpecializeShader'               => [
                'virtual' => true,
                'name'    => 'specializeShader',
                'type'    => 'void',
                'args'    => [
                    'shader'                     => 'GLuint',
                    'pEntryPoint'                => 'const GLchar *',
                    'numSpecializationConstants' => 'GLuint',
                    'pConstantIndex'             => 'const GLuint *',
                    'pConstantValue'             => 'const GLuint *',
                ],
            ],
        ],
    ],
];
